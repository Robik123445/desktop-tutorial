diff --git a//dev/null b/export_web.json
index 0000000000000000000000000000000000000000..028576873b8a4fcb131852df07824966acbe60c6 100644
--- a//dev/null
+++ b/export_web.json
@@ -0,0 +1,434 @@
+[
+  {
+    "filename": "ProjectSaver.jsx",
+    "full_content": "import React, { useState } from 'react';\nimport log from './logger';\n\n/**\n * Form to save a project and export G-code. Shows optional notes field\n * and a toast after saving.\n */\nexport default function ProjectSaver({ gcodeLines = [] }) {\n  const [name, setName] = useState('');\n  const [withNotes, setWithNotes] = useState(false);\n  const [notes, setNotes] = useState('');\n  const [toast, setToast] = useState(false);\n  const [error, setError] = useState('');\n\n  const saveProject = () => {\n    log(`Save project: ${name}`);\n    if (withNotes) {\n      log(`Notes: ${notes}`);\n    }\n    setToast(true);\n    setTimeout(() => setToast(false), 2000);\n  };\n\n  const exportGcode = () => {\n    try {\n      const blob = new Blob([gcodeLines.join('\\n')], { type: 'text/plain' });\n      const url = URL.createObjectURL(blob);\n      const link = document.createElement('a');\n      link.href = url;\n      link.download = `${name || 'project'}.gcode`;\n      document.body.appendChild(link);\n      link.click();\n      document.body.removeChild(link);\n      URL.revokeObjectURL(url);\n      setError('');\n      log(`Exported G-code for ${name || 'project'}`);\n    } catch (err) {\n      setError('Failed to export G-code');\n      log(`Failed to export G-code: ${err.message}`);\n    }\n  };\n\n  return (\n    <div className=\"p-4 space-y-4 max-w-md mx-auto\">\n      <div>\n        <label className=\"block font-medium mb-1\">Project Name</label>\n        <input\n          type=\"text\"\n          value={name}\n          onChange={(e) => setName(e.target.value)}\n          className=\"w-full border rounded p-2\"\n          data-testid=\"project-name\"\n        />\n      </div>\n      <div className=\"flex items-center space-x-2\">\n        <input\n          id=\"notes\"\n          type=\"checkbox\"\n          checked={withNotes}\n          onChange={(e) => setWithNotes(e.target.checked)}\n        />\n        <label htmlFor=\"notes\">Add notes</label>\n      </div>\n      {withNotes && (\n        <textarea\n          value={notes}\n          onChange={(e) => setNotes(e.target.value)}\n          className=\"w-full border rounded p-2\"\n          rows=\"3\"\n          data-testid=\"notes-area\"\n        />\n      )}\n      <div className=\"flex space-x-2\">\n        <button\n          onClick={saveProject}\n          className=\"bg-green-600 text-white px-3 py-1 rounded hover:bg-green-700\"\n        >\n          Save Project\n        </button>\n        <button\n          onClick={exportGcode}\n          className=\"bg-blue-600 text-white px-3 py-1 rounded hover:bg-blue-700\"\n        >\n          Export G-code\n        </button>\n      </div>\n      {toast && (\n        <div className=\"bg-gray-800 text-white p-2 rounded\" data-testid=\"toast\">\n          Project saved successfully.\n        </div>\n      )}\n      {error && (\n        <div className=\"text-red-600\" data-testid=\"ps-error\">{error}</div>\n      )}\n    </div>\n  );\n}\n"
+  },
+  {
+    "filename": "CuraSlicerUI.test.jsx",
+    "full_content": "import React from 'react';\nimport { render, screen, fireEvent } from '@testing-library/react';\nimport CuraSlicerUI from './CuraSlicerUI';\njest.mock('./logger', () => jest.fn());\nimport log from './logger';\n\ntest('selecting section expands content and updates panel', () => {\n  render(<CuraSlicerUI />);\n  const btn = screen.getByTestId('section-Import & Model');\n  fireEvent.click(btn);\n  expect(screen.getByTestId('section-content')).toBeInTheDocument();\n  expect(screen.getByTestId('right-panel')).toHaveTextContent('Import & Model Settings');\n  expect(log).toHaveBeenCalledWith('section selected: Import & Model');\n});\n\ntest('dropping file on canvas shows preview and details', () => {\n  const file = new File(['dummy'], 'shape.svg', { type: 'image/svg+xml' });\n  render(<CuraSlicerUI />);\n  const canvas = screen.getByTestId('canvas');\n  fireEvent.drop(canvas, { dataTransfer: { files: [file] } });\n  expect(log).toHaveBeenCalledWith('canvas import: shape.svg');\n  expect(screen.getByAltText('preview')).toBeInTheDocument();\n  expect(screen.getByTestId('right-panel')).toHaveTextContent('shape.svg');\n});\n\ntest('assign operations via tools menu', () => {\n  const file = new File(['dummy'], 'part.svg', { type: 'image/svg+xml' });\n  render(<CuraSlicerUI />);\n  fireEvent.drop(screen.getByTestId('canvas'), { dataTransfer: { files: [file] } });\n  fireEvent.click(screen.getByTestId('section-Tools & Operations'));\n  expect(screen.getByTestId('right-panel')).toHaveTextContent('Path 1');\n  fireEvent.change(screen.getByTestId('op-0'), { target: { value: 'Engrave' } });\n  expect(screen.getByTestId('summary')).toHaveTextContent('Laser: 1');\n});\n\ntest('open optimization and simulation panels', () => {\n  render(<CuraSlicerUI />);\n  fireEvent.click(screen.getByTestId('section-Toolpath Optimization'));\n  expect(screen.getByTestId('right-panel')).toHaveTextContent('Use optimizers');\n  fireEvent.click(screen.getByTestId('section-Simulation'));\n  expect(screen.getByTestId('right-panel')).toHaveTextContent('Simulation Stats');\n});\n\ntest('export and monitoring sections display components', () => {\n  render(<CuraSlicerUI />);\n  fireEvent.click(screen.getByTestId('section-Export & Streaming'));\n  expect(screen.getByText('GRBL')).toBeInTheDocument();\n  fireEvent.click(screen.getByTestId('section-Monitoring'));\n  expect(screen.getByText(/Status/)).toBeInTheDocument();\n});\n\ntest('plugin toggles and diagnostics actions', () => {\n  render(<CuraSlicerUI />);\n  fireEvent.click(screen.getByTestId('section-AI Analyze & Optimize'));\n  fireEvent.click(screen.getByTestId('plug-0'));\n  expect(log).toHaveBeenCalledWith('plugin reverse_path -> off');\n  fireEvent.click(screen.getByTestId('ai-analyze'));\n  fireEvent.click(screen.getByTestId('ai-opt'));\n  fireEvent.click(screen.getByTestId('section-Diagnostics'));\n  fireEvent.click(screen.getByTestId('run-tests'));\n  fireEvent.click(screen.getByTestId('gen-report'));\n  expect(log).toHaveBeenCalledWith('diagnostics run tests');\n  expect(log).toHaveBeenCalledWith('diagnostics report');\n});\n\ntest('experimental features toggle and debris scan', () => {\n  render(<CuraSlicerUI />);\n  fireEvent.click(screen.getByTestId('section-Experimental features'));\n  const toggle = screen.getByLabelText(/Adaptive Toolpath/);\n  fireEvent.click(toggle);\n  expect(log).toHaveBeenCalledWith('adaptive mode -> true');\n  fireEvent.click(screen.getByTestId('section-Export & Streaming'));\n  fireEvent.click(screen.getByText('Debris scan & avoid'));\n  expect(log).toHaveBeenCalledWith('debris scan');\n});\n\ntest('experimental AI panel shows analyzer and optimizer', () => {\n  render(<CuraSlicerUI />);\n  fireEvent.click(screen.getByTestId('section-Experimental AI'));\n  expect(screen.getByTestId('right-panel')).toHaveTextContent('AI Feedback');\n});\n\ntest('robot arm panel enables mode and displays diagnostics', () => {\n  render(<CuraSlicerUI />);\n  fireEvent.click(screen.getByTestId('section-Experimental â Robot Arm'));\n  const toggle = screen.getByTestId('robot-toggle');\n  fireEvent.click(toggle);\n  expect(log).toHaveBeenCalledWith('robot arm mode -> true');\n  expect(screen.getByTestId('profile-select')).toBeInTheDocument();\n});\n"
+  },
+  {
+    "filename": "ToolpathPreview.test.jsx",
+    "full_content": "import React from 'react';\nimport { render, screen, fireEvent } from '@testing-library/react';\nimport ToolpathPreview from './src/ToolpathPreview';\n\njest.mock('./log', () => jest.fn());\nimport log from './log';\n\nit('parses moves and animates play', () => {\n  jest.useFakeTimers();\n  const code = 'G1 X0 Y0\\nG1 X1 Y0\\nG1 X1 Y1';\n  render(<ToolpathPreview gcode={code} />);\n  expect(screen.getByText('Move 1 / 3')).toBeInTheDocument();\n  fireEvent.click(screen.getByText('Play'));\n  jest.advanceTimersByTime(350);\n  expect(screen.getByText('Move 2 / 3')).toBeInTheDocument();\n  expect(log).toHaveBeenCalledWith('play');\n});\n"
+  },
+  {
+    "filename": "PluginPanel.test.jsx",
+    "full_content": "import { render, screen, fireEvent } from '@testing-library/react';\nimport PluginPanel from './src/PluginPanel';\n\nbeforeEach(() => {\n  global.fetch = jest.fn((url) => {\n    if (url === '/plugins') {\n      return Promise.resolve({ json: () => Promise.resolve([{ name: 'opt', description: 'Optimizer' }]) });\n    }\n    return Promise.resolve({ json: () => Promise.resolve({ ok: true }) });\n  });\n});\n\ntest('runs selected plugin', async () => {\n  render(<PluginPanel />);\n  // button should appear after fetch\n  const btn = await screen.findByText('Run');\n  fireEvent.click(btn);\n  expect(global.fetch).toHaveBeenCalledWith('/plugins');\n  expect(global.fetch).toHaveBeenCalledWith('/log', expect.any(Object));\n  expect(global.fetch).toHaveBeenCalledWith('/plugins/run', expect.any(Object));\n});\n"
+  },
+  {
+    "filename": "FileUploader.test.jsx",
+    "full_content": "import React from 'react';\nimport { render, screen, fireEvent } from '@testing-library/react';\nimport FileUploader from './FileUploader';\njest.mock('./logger', () => jest.fn());\nimport log from './logger';\n\ntest('shows preview, logs actions and button after selecting file', () => {\n  const file = new File(['dummy'], 'test.dxf', { type: 'application/dxf' });\n  render(<FileUploader />);\n  const input = screen.getByLabelText(/drag/i);\n  fireEvent.change(input, { target: { files: [file] } });\n  expect(log).toHaveBeenCalledWith('File selected via input: test.dxf');\n  expect(screen.getByTestId('file-name')).toHaveTextContent('test.dxf');\n  expect(screen.getByText('2D CAD Drawing')).toBeInTheDocument();\n  expect(screen.getByText('Continue to Toolpath Editor')).toBeInTheDocument();\n  fireEvent.click(screen.getByText('Continue to Toolpath Editor'));\n  expect(log).toHaveBeenCalledWith('Continue to editor: test.dxf');\n});\n\ntest('supports OBJ files as well', () => {\n  const file = new File(['dummy'], 'mesh.obj', { type: 'model/obj' });\n  render(<FileUploader />);\n  const input = screen.getByLabelText(/drag/i);\n  fireEvent.change(input, { target: { files: [file] } });\n  expect(log).toHaveBeenCalledWith('File selected via input: mesh.obj');\n  expect(screen.getByText('3D Model (OBJ)')).toBeInTheDocument();\n});\n\ntest('handles image preview', () => {\n  const file = new File(['dummy'], 'pic.png', { type: 'image/png' });\n  render(<FileUploader />);\n  const input = screen.getByLabelText(/drag/i);\n  fireEvent.change(input, { target: { files: [file] } });\n  expect(log).toHaveBeenCalledWith('File selected via input: pic.png');\n  expect(screen.getByAltText('Image preview')).toBeInTheDocument();\n});\n"
+  },
+  {
+    "filename": "GeoFenceOverlay.test.tsx",
+    "full_content": "import { render } from '@testing-library/react';\nimport GeoFenceOverlay from './GeoFenceOverlay';\n\ntest('renders forbidden zone box', () => {\n  const { container } = render(<GeoFenceOverlay forbidden={[[0,0,10,10]]} />);\n  expect(container.querySelector('canvas')).toBeInTheDocument;\n});\n"
+  },
+  {
+    "filename": "VRViewer.test.tsx",
+    "full_content": "import React from 'react';\nimport { render, fireEvent } from '@testing-library/react';\nimport VRViewer from './VRViewer';\njest.mock('./logger', () => jest.fn());\nimport log from './logger';\n\njest.mock('three/examples/jsm/webxr/VRButton.js', () => ({\n  VRButton: { createButton: () => document.createElement('div') }\n}));\njest.mock('three/examples/jsm/webxr/ARButton.js', () => ({\n  ARButton: { createButton: () => document.createElement('div') }\n}));\n\n// Simple test ensuring the component renders and logs\n\ntest('starts and stops VR simulation', () => {\n  const { getByText, getByTestId } = render(<VRViewer points={[{x:0,y:0,z:0},{x:1,y:0,z:0}]} mode=\"vr\" />);\n  expect(getByTestId('vr-viewer')).toBeInTheDocument();\n  fireEvent.click(getByText('Play'));\n  expect(log).toHaveBeenCalledWith('VR simulation start');\n  fireEvent.click(getByText('Stop'));\n  expect(log).toHaveBeenCalledWith('VR simulation stop');\n});\n"
+  },
+  {
+    "filename": "LogExportButton.jsx",
+    "full_content": "import React from 'react';\nimport { saveAs } from 'file-saver';\nimport log, { getLogContent } from './logger';\n\n/**\n * Button that downloads `central.log` for support.\n */\nexport default function LogExportButton() {\n  const handleExport = () => {\n    try {\n      const content = getLogContent();\n      const blob = new Blob([content], { type: 'text/plain' });\n      saveAs(blob, 'central.log');\n      log('User exported logs');\n    } catch (err) {\n      console.error('Failed to export logs', err);\n    }\n  };\n\n  return (\n    <button\n      onClick={handleExport}\n      className=\"bg-gray-700 text-white px-3 py-1 rounded hover:bg-gray-800\"\n    >\n      Export Logs\n    </button>\n  );\n}\n"
+  },
+  {
+    "filename": "CuttingStrategySelector.test.jsx",
+    "full_content": "import React from 'react';\nimport { render, screen, fireEvent } from '@testing-library/react';\nimport CuttingStrategySelector from './CuttingStrategySelector';\njest.mock('./logger', () => jest.fn());\nimport log from './logger';\n\ntest('selects strategy and logs choice', () => {\n  render(<CuttingStrategySelector />);\n  const radio = screen.getByTestId('radio-conventional');\n  fireEvent.click(radio);\n  expect(radio).toBeChecked();\n  expect(log).toHaveBeenCalledWith('Cutting strategy: conventional');\n});\n"
+  },
+  {
+    "filename": "WebcamDetector.test.jsx",
+    "full_content": "import React from 'react';\nimport { render, screen, fireEvent, act } from '@testing-library/react';\nimport WebcamDetector from './WebcamDetector';\njest.useFakeTimers();\n\nbeforeAll(() => {\n  global.navigator.mediaDevices = {\n    getUserMedia: jest.fn(() => Promise.resolve({\n      getTracks: () => [{ stop: jest.fn() }],\n    })),\n  };\n});\n\njest.mock('./logger', () => jest.fn());\nimport log from './logger';\n\ntest('shows warning banner when person detected', async () => {\n  render(<WebcamDetector testDetection=\"hand\" />);\n  fireEvent.click(screen.getByText('Start Object Detection'));\n  await act(async () => {\n    jest.runAllTimers();\n  });\n  expect(screen.getByTestId('warning')).toHaveTextContent('HAND DETECTED');\n  expect(log).toHaveBeenCalledWith('Start detection clicked');\n  expect(log).toHaveBeenCalledWith('Webcam started');\n  expect(log).toHaveBeenCalledWith('Warning: hand detected');\n});\n"
+  },
+  {
+    "filename": "FeedbackForm.jsx",
+    "full_content": "import React, { useState } from 'react';\nimport log from './logger';\n\n/**\n * Simple feedback form that logs user messages.\n */\nexport default function FeedbackForm() {\n  const [text, setText] = useState('');\n\n  const send = () => {\n    const msg = text.trim();\n    if (!msg) return;\n    log(`feedback: ${msg}`);\n    alert('Thanks for the feedback!');\n    setText('');\n  };\n\n  return (\n    <div className=\"p-2 space-y-2\">\n      <textarea\n        value={text}\n        onChange={(e) => setText(e.target.value)}\n        className=\"w-full p-1 text-black rounded\"\n        placeholder=\"Your feedback\"\n        data-testid=\"feedback-input\"\n      />\n      <button\n        onClick={send}\n        className=\"bg-blue-600 text-white px-3 py-1 rounded\"\n        data-testid=\"feedback-send\"\n      >\n        Send Feedback\n      </button>\n    </div>\n  );\n}\n"
+  },
+  {
+    "filename": "ZoneVisualizer.test.tsx",
+    "full_content": "import React from 'react';\nimport { render, fireEvent } from '@testing-library/react';\nimport ZoneVisualizer, { ZonePlan } from './ZoneVisualizer';\njest.mock('./logger', () => jest.fn());\nimport log from './logger';\n\nconst zones: ZonePlan[] = [\n  { base: [0, 0], toolpath: [[0,0,0]], move_cmds: ['MOVE_BASE X0 Y0'] },\n  { base: [100, 0], toolpath: [[100,0,0]], move_cmds: ['MOVE_BASE X100 Y0'], warnings: ['warn'] },\n];\n\ntest('renders base positions', () => {\n  const { container } = render(<ZoneVisualizer zones={zones} />);\n  expect(container.querySelectorAll('mesh').length).toBeGreaterThan(0);\n});\n\ntest('clicking zone logs selection', () => {\n  const { container } = render(<ZoneVisualizer zones={zones} />);\n  const mesh = container.querySelector('mesh');\n  if (mesh) {\n    fireEvent.click(mesh);\n    expect(log).toHaveBeenCalledWith('zone 0 selected');\n  }\n});\n"
+  },
+  {
+    "filename": "ProjectSaver.test.jsx",
+    "full_content": "import React from 'react';\nimport { render, screen, fireEvent } from '@testing-library/react';\nimport ProjectSaver from './ProjectSaver';\njest.mock('./logger', () => jest.fn());\nimport log from './logger';\n\nconst lines = ['G1 X0 Y0', 'G1 X1 Y0'];\n\ntest('shows notes textarea when checked and logs save', () => {\n  render(<ProjectSaver gcodeLines={lines} />);\n  fireEvent.change(screen.getByTestId('project-name'), { target: { value: 'Demo' } });\n  fireEvent.click(screen.getByLabelText('Add notes'));\n  fireEvent.change(screen.getByTestId('notes-area'), { target: { value: 'test' } });\n  fireEvent.click(screen.getByText('Save Project'));\n  expect(log).toHaveBeenCalledWith('Save project: Demo');\n  expect(log).toHaveBeenCalledWith('Notes: test');\n  expect(screen.getByTestId('toast')).toBeInTheDocument();\n});\n\n"
+  },
+  {
+    "filename": "ToolpathTransform.test.jsx",
+    "full_content": "import React from 'react';\nimport { render, screen, fireEvent } from '@testing-library/react';\nimport ToolpathTransform from './ToolpathTransform';\n\n// basic test verifying reset behaviour\n\ntest('reset button clears all transforms', () => {\n  render(<ToolpathTransform />);\n  const rot = screen.getByLabelText(/rotation/i);\n  fireEvent.change(rot, { target: { value: '45' } });\n  fireEvent.click(screen.getByText(/reset transform/i));\n  expect(rot.value).toBe('0');\n});\n"
+  },
+  {
+    "filename": "HeightmapViewer.test.jsx",
+    "full_content": "import React from 'react';\nimport { render, screen, fireEvent } from '@testing-library/react';\nimport HeightmapViewer from './HeightmapViewer';\njest.mock('./logger', () => jest.fn());\nimport log from './logger';\n\ntest('loads heightmap and logs file name', () => {\n  const data = { points: [{ x: 0, y: 0, z: 0 }] };\n  const file = new File([JSON.stringify(data)], 'map.json', { type: 'application/json' });\n  render(<HeightmapViewer />);\n  const input = screen.getByLabelText(/load heightmap/i);\n  fireEvent.change(input, { target: { files: [file] } });\n  expect(log).toHaveBeenCalledWith('Heightmap loaded: map.json');\n  expect(screen.getByTestId('canvas')).toBeInTheDocument();\n});\n"
+  },
+  {
+    "filename": "RobotTrajectoryOptimizer.jsx",
+    "full_content": "import React, { useState } from 'react';\nimport log from './logger';\n\nexport default function RobotTrajectoryOptimizer({ toolpath = [], profile = {} }) {\n  const [optimized, setOptimized] = useState([]);\n  const [warnings, setWarnings] = useState([]);\n  const [show, setShow] = useState(false);\n\n  const runOptimization = async () => {\n    log('robot trajectory optimize');\n    try {\n      const resp = await fetch('/robot_optimize', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ points: toolpath, profile }),\n      });\n      const data = await resp.json();\n      setOptimized(data.points || []);\n      setWarnings(data.warnings || []);\n      setShow(true);\n    } catch (err) {\n      log('robot optimize failed', 'ERROR', err);\n    }\n  };\n\n  const preview = optimized.slice(0, 3).map(p => p.join(', ')).join('\\n');\n\n  return (\n    <div className=\"p-4 space-y-2\">\n      <button onClick={runOptimization} className=\"bg-blue-600 text-white px-2 py-1 rounded\">Optimize Trajectory</button>\n      {show && (\n        <div className=\"space-y-2\">\n          <div>\n            <div className=\"font-medium\">Suggestions</div>\n            <ul className=\"list-disc ml-5 text-sm\">\n              {warnings.map((w, i) => <li key={i}>{w}</li>)}\n            </ul>\n          </div>\n          <div>\n            <div className=\"font-medium\">Preview</div>\n            <pre className=\"text-xs border p-2\">{preview}</pre>\n          </div>\n          <div className=\"flex space-x-2\">\n            <button onClick={() => log('trajectory accepted')} className=\"bg-green-600 text-white px-2 py-1 rounded\">Accept</button>\n            <button onClick={() => setShow(false)} className=\"bg-gray-600 text-white px-2 py-1 rounded\">Reject</button>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n"
+  },
+  {
+    "filename": "CuraSlicerUI.jsx",
+    "full_content": "import React, { useState, useCallback } from 'react';\nimport log from './logger';\nimport ToolpathTransform from './ToolpathTransform';\nimport OperationAssigner from './OperationAssigner';\nimport ToolpathOptimizer from './ToolpathOptimizer';\nimport ToolpathSimulator from './ToolpathSimulator';\nimport SurfaceAnalyzer from './SurfaceAnalyzer';\nimport GcodeStreamer from './GcodeStreamer';\nimport MachineMonitor from './MachineMonitor';\nimport PluginManager from './PluginManager';\nimport DiagnosticsPanel from './DiagnosticsPanel';\nimport WorkspaceScanner from './WorkspaceScanner';\nimport RobotArmPanel from './RobotArmPanel';\nimport * as THREE from 'three';\n\n/**\n * CuraStyleUI\n * ------------\n * Main layout for the CAM slicer inspired by Cura.\n * Sidebar sections are collapsible; the right panel shows\n * parameters for the currently selected section.\n */\n\n// Sidebar sections with simple emoji icons\nconst SECTIONS = [\n  { name: 'Import & Model', icon: 'ð¥' },\n  { name: 'Tools & Operations', icon: 'ð ï¸' },\n  { name: 'Hybrid Operations', icon: 'ð' },\n  { name: 'Toolpath Optimization', icon: 'âï¸' },\n  { name: 'Surface & Sensors', icon: 'ð' },\n  { name: 'Simulation', icon: 'ðï¸' },\n  { name: 'AI Analyze & Optimize', icon: 'ð¤' },\n  { name: 'Export & Streaming', icon: 'ð¤' },\n  { name: 'Monitoring', icon: 'ð¡' },\n  { name: 'Experimental features', icon: 'ð§ª' },\n  { name: 'Experimental AI', icon: 'ð°ï¸' },\n  { name: 'Experimental â Robot Arm', icon: 'ð¤' },\n  { name: 'Diagnostics', icon: 'ð©º' },\n];\n\n// Placeholder options per section\nconst OPTIONS = {\n  'Import & Model': ['Upload', 'Vectorize'],\n  'Tools & Operations': ['Assign Ops'],\n  'Hybrid Operations': ['Preview Heads'],\n  'Toolpath Optimization': [\n    'Optimize sequence',\n    'Smooth corners',\n    'Remove air moves',\n    'Pressure advance',\n    'Input shaping',\n  ],\n  'Surface & Sensors': ['Probe', 'Heightmap'],\n  Simulation: ['Preview simulation'],\n  'AI Analyze & Optimize': ['Run AI Analysis', 'Auto Optimize'],\n  'Export & Streaming': [\n    'Debris scan & avoid',\n    'Export GRBL',\n    'Export Marlin',\n    'Export Klipper',\n    'Custom Post',\n    'Stream',\n    'Dry-run',\n  ],\n  Monitoring: ['Live status'],\n  'Experimental features': ['Adaptive Toolpath'],\n  'Experimental AI': ['SurfaceAnalyzer', 'ToolpathOptimizer', 'AI Feedback'],\n  'Experimental â Robot Arm': ['Robot Arm Mode'],\n  Diagnostics: ['Report'],\n};\n\nexport default function CuraStyleUI() {\n  const [open, setOpen] = useState({});\n  const [active, setActive] = useState(null);\n  const [tool, setTool] = useState('Router');\n  const [file, setFile] = useState(null);\n  const [transform, setTransform] = useState({ rotation: 0, scale: 1, x: 0, y: 0 });\n  const [paths, setPaths] = useState([]); // simplified vector paths\n  const [assignments, setAssignments] = useState([]);\n  const [params, setParams] = useState([]); // feedrate/depth per path\n  const [adaptiveMode, setAdaptiveMode] = useState(false);\n\n  const toggle = (name) => {\n    setOpen((prev) => ({ ...prev, [name]: !prev[name] }));\n    setActive(name);\n    log(`section selected: ${name}`);\n  };\n\n  const handleDragOver = useCallback((e) => {\n    e.preventDefault();\n  }, []);\n\n  const handleDrop = useCallback((e) => {\n    e.preventDefault();\n    if (!e.dataTransfer.files.length) return;\n    const f = e.dataTransfer.files[0];\n    setFile(f);\n    // mock up three simple paths when a file is imported\n    const dummy = [0, 1, 2].map((i) => [{ x: i * 10, y: 0 }]);\n    setPaths(dummy);\n    setAssignments(dummy.map(() => ({ operation: 'Cut', head: 'Spindle' })));\n    setParams(dummy.map(() => ({ feedrate: 1000, depth: 1 })));\n    log(`canvas import: ${f.name}`);\n  }, []);\n\n  const updateTransform = (t) => setTransform(t);\n\n  const dummyGcode = 'G1 X0 Y0\\nG1 X10 Y0\\nG1 X10 Y10';\n  const dummyLineCount = dummyGcode.split(/\\r?\\n/).length;\n\n  return (\n    <div className=\"min-h-screen bg-gray-900 text-gray-100 flex flex-col\">\n      <header className=\"bg-gray-800 p-2 flex items-center justify-between\">\n        <div className=\"font-semibold\">Profile</div>\n        <div className=\"flex items-center space-x-2\">\n          <select\n            value={tool}\n            onChange={(e) => {\n              setTool(e.target.value);\n              log(`tool head -> ${e.target.value}`);\n            }}\n            className=\"bg-gray-700 rounded px-2 py-1\"\n          >\n            <option>Laser</option>\n            <option>Spindle</option>\n            <option>Print Head</option>\n          </select>\n          <button\n            className=\"bg-blue-600 hover:bg-blue-700 px-3 py-1 rounded\"\n            onClick={() => log('import click')}\n          >\n            Import\n          </button>\n          <button\n            className=\"bg-green-600 hover:bg-green-700 px-3 py-1 rounded\"\n            onClick={() => log('export click')}\n          >\n            Export\n          </button>\n          <a\n            href=\"https://example.github.io/cam_slicer/\"\n            target=\"_blank\"\n            rel=\"noreferrer\"\n            className=\"underline text-blue-400\"\n          >\n            Docs\n          </a>\n        </div>\n      </header>\n      <div className=\"flex flex-1 overflow-hidden\">\n        <aside className=\"w-64 bg-gray-800 overflow-y-auto p-2\">\n          {SECTIONS.map(({ name, icon }) => (\n            <div key={name} className=\"mb-2\">\n              <button\n                className=\"w-full flex items-center text-left bg-gray-700 hover:bg-gray-600 rounded px-2 py-1\"\n                onClick={() => toggle(name)}\n                data-testid={`section-${name}`}\n              >\n                <span className=\"mr-2\" aria-hidden=\"true\">{icon}</span>\n                {name}\n              </button>\n              {open[name] && (\n                <div className=\"pl-4 py-2 text-sm text-gray-300\" data-testid=\"section-content\">\n                  {OPTIONS[name].map((o) => (\n                    <button\n                      key={o}\n                      className=\"block w-full text-left hover:underline mt-1\"\n                      onClick={() => log(`${o} clicked`)}\n                    >\n                      {o}\n                    </button>\n                  ))}\n                </div>\n              )}\n            </div>\n          ))}\n        </aside>\n        <main className=\"flex-1 flex\">\n          <div\n            className=\"flex-1 m-2 bg-gray-800 rounded flex items-center justify-center relative\"\n            data-testid=\"canvas\"\n            onDragOver={handleDragOver}\n            onDrop={handleDrop}\n          >\n            {file && <Preview file={file} transform={transform} />}\n            {assignments.length > 0 && <OperationPreview assignments={assignments} />}\n          </div>\n          <div className=\"w-64 m-2 bg-gray-800 rounded p-2\" data-testid=\"right-panel\">\n            {file ? (\n              <div>\n                <h2 className=\"font-semibold\">Import Details</h2>\n                <p className=\"break-all\">{file.name}</p>\n                <p>{(file.size / 1024).toFixed(1)} kB</p>\n                <ToolpathTransform onChange={updateTransform} />\n              </div>\n            ) : active === 'Tools & Operations' ? (\n              <div>\n                <OperationAssigner paths={paths} onChange={setAssignments} />\n                {paths.map((p, idx) => (\n                  <div key={idx} className=\"mt-2 text-sm\">\n                    <h4 className=\"font-semibold\">Path {idx + 1} Params</h4>\n                    <label className=\"block\">Feedrate\n                      <input\n                        type=\"number\"\n                        value={params[idx]?.feedrate || 0}\n                        onChange={(e) => {\n                          const val = Number(e.target.value);\n                          setParams((ps) => ps.map((p, i) => i === idx ? { ...p, feedrate: val } : p));\n                        }}\n                        className=\"w-full text-black rounded p-1\"\n                      />\n                    </label>\n                    <label className=\"block\">Depth\n                      <input\n                        type=\"number\"\n                        value={params[idx]?.depth || 0}\n                        onChange={(e) => {\n                          const val = Number(e.target.value);\n                          setParams((ps) => ps.map((p, i) => i === idx ? { ...p, depth: val } : p));\n                        }}\n                        className=\"w-full text-black rounded p-1\"\n                      />\n                  </label>\n                </div>\n              ))}\n              <label className=\"block text-sm mt-3\">\n                <input\n                  type=\"checkbox\"\n                  className=\"mr-1\"\n                  checked={adaptiveMode}\n                  onChange={(e) => {\n                    setAdaptiveMode(e.target.checked);\n                    log(`adaptive mode -> ${e.target.checked}`);\n                  }}\n                />\n                Adaptive Toolpath (experimental)\n              </label>\n            </div>\n            ) : active === 'Hybrid Operations' ? (\n              <div>\n                <OperationAssigner paths={paths} onChange={setAssignments} />\n              </div>\n            ) : active === 'Toolpath Optimization' ? (\n              <div className=\"text-sm\">Use optimizers from the AI Analyze & Optimize panel.</div>\n            ) : active === 'Simulation' ? (\n              <div>\n                <ToolpathSimulator gcode={dummyGcode} />\n                <div className=\"text-sm mt-2\">\n                  <h4 className=\"font-semibold\">Simulation Stats</h4>\n                  <p>Lines: {dummyLineCount}</p>\n                </div>\n              </div>\n            ) : active === 'Export & Streaming' ? (\n              <div className=\"space-y-2\">\n                <WorkspaceScanner onScan={() => log('scan done')} />\n                <div className=\"space-x-2\">\n                  <button onClick={() => log('export grbl')} className=\"bg-blue-600 px-2 py-1 rounded\">GRBL</button>\n                  <button onClick={() => log('export marlin')} className=\"bg-blue-600 px-2 py-1 rounded\">Marlin</button>\n                  <button onClick={() => log('export klipper')} className=\"bg-blue-600 px-2 py-1 rounded\">Klipper</button>\n                  <button onClick={() => log('export custom')} className=\"bg-blue-600 px-2 py-1 rounded\">Custom</button>\n                </div>\n                <GcodeStreamer gcodeLines={dummyGcode.split(/\\r?\\n/)} fileName=\"demo.gcode\" />\n                <label className=\"block text-sm mt-2\">\n                  <input type=\"checkbox\" className=\"mr-1\" onChange={() => log('dry run toggled')} />Dry run only\n                </label>\n              </div>\n            ) : active === 'AI Analyze & Optimize' ? (\n              <div className=\"space-y-4\">\n                <PluginManager plugins={[{ name: 'reverse_path' }, { name: 'adaptive_path' }]} />\n                <ToolpathOptimizer gcode={dummyGcode} />\n              </div>\n            ) : active === 'Experimental features' ? (\n              <div>\n                <label className=\"block text-sm\" title=\"Toggle experimental adaptive toolpath mode\">\n                  <input\n                    type=\"checkbox\"\n                    className=\"mr-1\"\n                    checked={adaptiveMode}\n                    onChange={(e) => {\n                      setAdaptiveMode(e.target.checked);\n                      log(`adaptive mode -> ${e.target.checked}`);\n                    }}\n                  />\n                  Adaptive Toolpath (experimental)\n                </label>\n              </div>\n            ) : active === 'Experimental AI' ? (\n              <div className=\"space-y-4\">\n                <SurfaceAnalyzer gcode={dummyGcode} heightmap={{ points: [] }} />\n                <ToolpathOptimizer gcode={dummyGcode} />\n                <p className=\"text-xs\">AI Feedback coming soon...</p>\n              </div>\n            ) : active === 'Experimental â Robot Arm' ? (\n              <RobotArmPanel />\n            ) : active === 'Diagnostics' ? (\n              <DiagnosticsPanel />\n            ) : active === 'Monitoring' ? (\n              <MachineMonitor />\n            ) : active ? (\n              <h2 className=\"font-semibold mb-2\">{active} Settings</h2>\n            ) : (\n              <p>Select a menu section</p>\n            )}\n          </div>\n        </main>\n      </div>\n    </div>\n  );\n}\n\nfunction Preview({ file, transform }) {\n  const ext = file.name.split('.').pop().toLowerCase();\n  const style = {\n    transform: `translate(${transform.x}px, ${transform.y}px) rotate(${transform.rotation}deg) scale(${transform.scale})`,\n  };\n  if (['png', 'jpg', 'jpeg', 'svg'].includes(ext)) {\n    return (\n      <img\n        src={URL.createObjectURL(file)}\n        alt=\"preview\"\n        style={style}\n        className=\"max-h-full max-w-full\"\n      />\n    );\n  }\n  if (['dxf', 'dwg'].includes(ext)) {\n    return <p style={style}>2D CAD Drawing</p>;\n  }\n  if (['obj', 'stl'].includes(ext)) {\n    return <Basic3DPreview style={style} />;\n  }\n  return <p>Unsupported file</p>;\n}\n\nfunction Basic3DPreview({ style }) {\n  const ref = React.useRef(null);\n  React.useEffect(() => {\n    const scene = new THREE.Scene();\n    const camera = new THREE.PerspectiveCamera(45, 1, 0.1, 100);\n    const renderer = new THREE.WebGLRenderer({ antialias: true });\n    renderer.setSize(200, 200);\n    ref.current.appendChild(renderer.domElement);\n    const geo = new THREE.BoxGeometry(1, 1, 1);\n    const mat = new THREE.MeshNormalMaterial();\n    const cube = new THREE.Mesh(geo, mat);\n    scene.add(cube);\n    camera.position.z = 3;\n    let anim;\n    const animate = () => {\n      cube.rotation.x += 0.01;\n      cube.rotation.y += 0.01;\n      renderer.render(scene, camera);\n      anim = requestAnimationFrame(animate);\n    };\n    animate();\n    return () => {\n      cancelAnimationFrame(anim);\n      ref.current.removeChild(renderer.domElement);\n    };\n  }, []);\n  return <div ref={ref} style={style} className=\"w-40 h-40\" />;\n}\n\nfunction OperationPreview({ assignments }) {\n  const colors = { Laser: 'red', Spindle: 'blue', 'Print Head': 'green' };\n  return (\n    <div className=\"absolute top-2 left-2 space-y-1 text-xs\">\n      {assignments.map((a, idx) => (\n        <div key={idx} className=\"flex items-center\">\n          <span\n            className=\"inline-block w-3 h-3 mr-1\"\n            style={{ background: colors[a.head] || 'gray' }}\n          />\n          <span>\n            Path {idx + 1}: {a.head}\n          </span>\n        </div>\n      ))}\n    </div>\n  );\n}\n"
+  },
+  {
+    "filename": "vite.config.js",
+    "full_content": "import { defineConfig } from 'vite';\nimport react from '@vitejs/plugin-react';\n\nexport default defineConfig({\n  plugins: [react()],\n  root: '.',\n});\n"
+  },
+  {
+    "filename": "Sidebar.test.jsx",
+    "full_content": "import React from 'react';\nimport { render, screen, fireEvent } from '@testing-library/react';\nimport Sidebar from './src/Sidebar';\n\nit('navigates when menu item clicked', () => {\n  const cb = jest.fn();\n  render(<Sidebar onNavigate={cb} />);\n  fireEvent.click(screen.getByText('AI Analyzer'));\n  expect(cb).toHaveBeenCalledWith('ai');\n  const btn = screen.getByText('AI Analyzer').closest('button');\n  expect(btn.className).toMatch(/bg-gray-800/);\n});\n"
+  },
+  {
+    "filename": "PluginManager.test.jsx",
+    "full_content": "import React from 'react';\nimport { render, screen, fireEvent } from '@testing-library/react';\nimport PluginManager from './PluginManager';\njest.mock('./logger', () => jest.fn());\nimport log from './logger';\n\ntest('toggle plugins and trigger AI actions', () => {\n  render(<PluginManager plugins={[{ name: 'reverse_path' }, { name: 'adaptive_path' }]} />);\n  fireEvent.click(screen.getByTestId('plug-0'));\n  expect(log).toHaveBeenCalledWith('plugin reverse_path -> off');\n  fireEvent.click(screen.getByTestId('ai-analyze'));\n  fireEvent.click(screen.getByTestId('ai-opt'));\n  expect(log).toHaveBeenCalledWith('AI analysis requested');\n  expect(log).toHaveBeenCalledWith('AI auto optimize');\n\n  fireEvent.change(screen.getByPlaceholderText('plugin name'), { target: { value: 'newp' } });\n  fireEvent.click(screen.getByText('Install'));\n  expect(log).toHaveBeenCalledWith('install plugin newp');\n  fireEvent.click(screen.getAllByTitle('Remove')[0]);\n  expect(log).toHaveBeenCalledWith('remove plugin reverse_path');\n});\n"
+  },
+  {
+    "filename": "RobotArmPanel.jsx",
+    "full_content": "import React, { useState, useEffect } from 'react';\nimport log from './logger';\nimport RobotDiagnosticsDashboard from './RobotDiagnosticsDashboard';\nimport BugReportForm from './BugReportForm';\n\n// Default kinematic profile used when none stored in localStorage\nconst DEFAULT_PROFILE = {\n  name: '6axis_basic',\n  link_lengths: [100, 100],\n  joint_limits: [\n    [-180, 180],\n    [-90, 90],\n    [-135, 135],\n    [-180, 180],\n    [-120, 120],\n    [-360, 360],\n  ],\n  tcp: [0, 0, 0, 0, 0, 0],\n};\n\n// simple FK for planar arms using revolute joints\nfunction forwardKinematics(profile, joints) {\n  let x = 0;\n  let y = 0;\n  let a = 0;\n  profile.link_lengths.forEach((len, i) => {\n    a += (joints[i] || 0) * Math.PI / 180;\n    x += len * Math.cos(a);\n    y += len * Math.sin(a);\n  });\n  return { x: x.toFixed(1), y: y.toFixed(1) };\n}\n\nexport default function RobotArmPanel() {\n  const storedEnabled = localStorage.getItem('robotArmEnabled') === 'true';\n  const storedProfile = localStorage.getItem('robotArmProfile');\n  const [enabled, setEnabled] = useState(storedEnabled);\n  const [profiles, setProfiles] = useState([DEFAULT_PROFILE]);\n  const [index, setIndex] = useState(0);\n  const [angles, setAngles] = useState([]);\n  const [dryRun, setDryRun] = useState(false);\n  const [status, setStatus] = useState('Idle');\n  const [warnings, setWarnings] = useState([]);\n  const profile = profiles[index];\n\n  useEffect(() => {\n    if (storedProfile) {\n      try {\n        const p = JSON.parse(storedProfile);\n        setProfiles([p]);\n      } catch (err) {\n        /* ignore */\n      }\n    }\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem('robotArmEnabled', enabled);\n    log(`robot arm mode -> ${enabled}`);\n  }, [enabled]);\n\n  useEffect(() => {\n    localStorage.setItem('robotArmProfile', JSON.stringify(profile));\n  }, [profile]);\n\n  useEffect(() => {\n    if (!enabled || !dryRun) return;\n    setStatus('Running dry run');\n    const id = setInterval(() => {\n      const newAngles = profile.joint_limits.map(l =>\n        l[0] + Math.random() * (l[1] - l[0])\n      );\n      setAngles(newAngles);\n      // compute warnings\n      const w = [];\n      newAngles.forEach((a, i) => {\n        const [lo, hi] = profile.joint_limits[i];\n        if (a < lo || a > hi) w.push(`Joint ${i+1} limit`);\n        else if (a - lo < 5 || hi - a < 5) w.push(`Joint ${i+1} near limit`);\n      });\n      if (Math.random() < 0.05) w.push('Overload detected');\n      if (Math.random() < 0.05) w.push('Possible collision');\n      setWarnings(w);\n      if (w.length) log(`warnings: ${w.join(', ')}`, 'WARNING');\n    }, 1000);\n    return () => {\n      clearInterval(id);\n      setStatus('Idle');\n      setWarnings([]);\n    };\n  }, [enabled, profile, dryRun]);\n\n  const tcp = forwardKinematics(profile, angles);\n\n  const handleImport = (e) => {\n    const file = e.target.files[0];\n    if (!file) return;\n    const reader = new FileReader();\n    reader.onload = () => {\n      try {\n        const obj = JSON.parse(reader.result);\n        setProfiles([obj]);\n        setIndex(0);\n        log(`profile imported: ${obj.name}`);\n      } catch (err) {\n        log('profile import failed', 'ERROR', err);\n      }\n    };\n    reader.readAsText(file);\n  };\n\n  const handleExport = () => {\n    const blob = new Blob([JSON.stringify(profile, null, 2)], { type: 'application/json' });\n    const a = document.createElement('a');\n    a.href = URL.createObjectURL(blob);\n    a.download = `${profile.name}.json`;\n    a.click();\n    log('profile exported');\n  };\n\n  const saveProfile = () => {\n    localStorage.setItem('robotArmProfile', JSON.stringify(profile));\n    log('profile saved');\n  };\n\n  const [port, setPort] = useState('COM1');\n\n  const streamCommands = async () => {\n    try {\n      await fetch('/stream_robotic', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ points: [[0,0,0],[10,0,0]], port, profile }),\n      });\n      log('robotic stream started');\n    } catch (err) {\n      log('robotic stream failed', 'ERROR', err);\n    }\n  };\n\n  const exportCommands = () => {\n    const blob = new Blob([\n      JSON.stringify({ toolpath: [[0,0,0],[10,0,0]], profile }, null, 2),\n    ], { type: 'application/json' });\n    const a = document.createElement('a');\n    a.href = URL.createObjectURL(blob);\n    a.download = 'robot_commands.json';\n    a.click();\n    log('robotic commands exported');\n  };\n\n  const setLinkLength = (idx, val) => {\n    setProfiles(pfs => {\n      const p = { ...pfs[index] };\n      p.link_lengths = p.link_lengths.map((v,i)=> i===idx ? val : v);\n      const arr = [...pfs];\n      arr[index] = p;\n      return arr;\n    });\n  };\n\n  const setLimit = (jIdx, boundIdx, val) => {\n    setProfiles(pfs => {\n      const p = { ...pfs[index] };\n      const limits = p.joint_limits.map(l => [...l]);\n      limits[jIdx][boundIdx] = val;\n      p.joint_limits = limits;\n      const arr = [...pfs];\n      arr[index] = p;\n      return arr;\n    });\n  };\n\n  const setTcp = (idx, val) => {\n    setProfiles(pfs => {\n      const p = { ...pfs[index], tcp: pfs[index].tcp.map((v,i)=> i===idx ? val : v) };\n      const arr = [...pfs];\n      arr[index] = p;\n      return arr;\n    });\n  };\n\n  return (\n    <div className=\"p-4 space-y-4 text-sm\">\n      <label className=\"block\">\n        <input\n          type=\"checkbox\"\n          className=\"mr-1\"\n          checked={enabled}\n          onChange={(e) => setEnabled(e.target.checked)}\n          data-testid=\"robot-toggle\"\n        />\n        Enable robot arm mode\n      </label>\n\n      <label className=\"block text-sm\">\n        <input\n          type=\"checkbox\"\n          className=\"mr-1\"\n          checked={dryRun}\n          onChange={(e) => setDryRun(e.target.checked)}\n          disabled={!enabled}\n          data-testid=\"dry-toggle\"\n        />\n        Dry run (no cutting)\n      </label>\n\n      <div className=\"text-sm\">Status: {status}</div>\n\n      <div>\n        <label className=\"block font-medium\">Profile</label>\n        <select\n          value={index}\n          onChange={(e) => setIndex(Number(e.target.value))}\n          className=\"border rounded p-1 w-full\"\n          data-testid=\"profile-select\"\n        >\n          {profiles.map((p, i) => (\n            <option key={i} value={i}>{p.name}</option>\n          ))}\n        </select>\n        <div className=\"flex space-x-2 mt-1\">\n          <input type=\"file\" accept=\"application/json\" onChange={handleImport} data-testid=\"import-file\" />\n          <button onClick={handleExport} className=\"bg-blue-600 px-2 py-1 rounded\" data-testid=\"export-btn\">Export</button>\n          <button onClick={saveProfile} className=\"bg-green-600 px-2 py-1 rounded\" data-testid=\"save-btn\">Save</button>\n        </div>\n      </div>\n\n      <div className=\"space-y-1\">\n        <h4 className=\"font-medium\">Command Streaming</h4>\n        <input\n          type=\"text\"\n          value={port}\n          onChange={(e) => setPort(e.target.value)}\n          className=\"border rounded p-1 text-black w-32\"\n          placeholder=\"Port\"\n          data-testid=\"port-input\"\n        />\n        <div className=\"flex space-x-2 mt-1\">\n          <button onClick={streamCommands} className=\"bg-blue-700 px-2 py-1 rounded text-white\" data-testid=\"stream-btn\">Stream</button>\n          <button onClick={exportCommands} className=\"bg-gray-700 px-2 py-1 rounded text-white\" data-testid=\"cmd-export\">Export Cmds</button>\n        </div>\n      </div>\n\n      <div>\n        <h4 className=\"font-medium\">Edit Links</h4>\n        <div className=\"grid grid-cols-3 gap-1\">\n          {profile.link_lengths.map((v, idx) => (\n            <input\n              key={idx}\n              type=\"number\"\n              value={v}\n              onChange={(e) => setLinkLength(idx, Number(e.target.value))}\n              className=\"border rounded p-1 text-black\"\n              data-testid={`len-${idx}`}\n            />\n          ))}\n        </div>\n      </div>\n\n      <div>\n        <h4 className=\"font-medium\">Edit Limits</h4>\n        {profile.joint_limits.map((limit, i) => (\n          <div key={i} className=\"flex space-x-1 items-center\">\n            <span>J{i+1}</span>\n            <input\n              type=\"number\"\n              value={limit[0]}\n              onChange={(e) => setLimit(i, 0, Number(e.target.value))}\n              className=\"border rounded p-1 w-16 text-black\"\n              data-testid={`lim-${i}-0`}\n            />\n            <input\n              type=\"number\"\n              value={limit[1]}\n              onChange={(e) => setLimit(i, 1, Number(e.target.value))}\n              className=\"border rounded p-1 w-16 text-black\"\n              data-testid={`lim-${i}-1`}\n            />\n          </div>\n        ))}\n      </div>\n\n      <div>\n        <h4 className=\"font-medium\">TCP Position</h4>\n        <p>X: {tcp.x} mm, Y: {tcp.y} mm</p>\n      </div>\n\n      <div>\n        <h4 className=\"font-medium\">Diagnostics</h4>\n        {profile.joint_limits.map((limit, i) => {\n          const angle = angles[i] || 0;\n          const warn = angle < limit[0] || angle > limit[1];\n          return (\n            <div key={i} className={warn ? 'text-red-500' : ''} data-testid={`joint-${i}`}>J{i+1}: {angle.toFixed(1)}Â° {warn ? 'LIMIT' : 'OK'}</div>\n          );\n        })}\n        {warnings.map((w, i) => (\n          <div key={i} className=\"text-red-600\" data-testid={`warn-${i}`}>{w}</div>\n        ))}\n      </div>\n\n      <div>\n        <h4 className=\"font-medium\">Edit TCP</h4>\n        <div className=\"grid grid-cols-3 gap-1\">\n          {profile.tcp.map((v, idx) => (\n            <input\n              key={idx}\n              type=\"number\"\n              value={v}\n              onChange={(e) => setTcp(idx, Number(e.target.value))}\n              className=\"border rounded p-1 text-black\"\n              data-testid={`tcp-${idx}`}\n            />\n          ))}\n        </div>\n      </div>\n\n      <div>\n        <h4 className=\"font-medium\">Diagnostics</h4>\n        <RobotDiagnosticsDashboard />\n      </div>\n\n      <div>\n        <h4 className=\"font-medium\">Bug Report</h4>\n        <BugReportForm />\n      </div>\n    </div>\n  );\n}\n\n"
+  },
+  {
+    "filename": "WorkspaceScanner.jsx",
+    "full_content": "import React, { useState } from 'react';\nimport log from './logger';\n\n/**\n * Select scanning mode and trigger workspace scanning.\n */\nexport default function WorkspaceScanner({ onScan }) {\n  const [mode, setMode] = useState('hybrid');\n  const [busy, setBusy] = useState(false);\n\n  const start = () => {\n    log(`workspace scan start: ${mode}`);\n    setBusy(true);\n    // Mock async scanning\n    setTimeout(() => {\n      setBusy(false);\n      log('workspace scan complete');\n      onScan && onScan({ mode });\n    }, 300);\n  };\n\n  return (\n    <div className=\"space-y-2 p-4\" data-testid=\"scanner\">\n      <label className=\"block text-sm font-medium\">Scan mode</label>\n      <select\n        value={mode}\n        onChange={e => setMode(e.target.value)}\n        className=\"border rounded p-2 w-full\"\n      >\n        <option value=\"camera\">Camera only</option>\n        <option value=\"probe\">Probe only</option>\n        <option value=\"hybrid\">Hybrid (both)</option>\n      </select>\n      <button\n        onClick={start}\n        disabled={busy}\n        className=\"bg-blue-600 text-white px-2 py-1 rounded w-full\"\n      >\n        {busy ? 'Scanning...' : 'Start Scan'}\n      </button>\n    </div>\n  );\n}\n"
+  },
+  {
+    "filename": "HeightmapViewer.jsx",
+    "full_content": "import React, { useRef, useState, useEffect } from 'react';\nimport * as THREE from 'three';\nimport log from './logger';\n\n/**\n * Upload and visualize a heightmap from JSON.\n * JSON format: { \"points\": [{\"x\":0,\"y\":0,\"z\":0}, ...] }\n */\nexport default function HeightmapViewer() {\n  const containerRef = useRef(null);\n  const [heightmap, setHeightmap] = useState(null);\n  const [hoverInfo, setHoverInfo] = useState(null);\n\n  // Handle file selection\n  const handleFile = (e) => {\n    const file = e.target.files[0];\n    if (!file) return;\n    const reader = new FileReader();\n    reader.onload = () => {\n      try {\n        const data = JSON.parse(reader.result);\n        if (!data.points) throw new Error('Invalid heightmap');\n        setHeightmap(data.points);\n        log(`Heightmap loaded: ${file.name}`);\n      } catch (err) {\n        console.error('Failed to parse heightmap', err);\n      }\n    };\n    reader.readAsText(file);\n  };\n\n  // Render three.js surface when heightmap changes\n  useEffect(() => {\n    if (!heightmap || !containerRef.current) return;\n\n    const width = containerRef.current.clientWidth;\n    const height = 300;\n\n    const scene = new THREE.Scene();\n    const camera = new THREE.PerspectiveCamera(45, width / height, 0.1, 1000);\n    camera.position.set(0, -Math.max(...heightmap.map(p => p.y)) - 5, 10);\n    camera.lookAt(0, 0, 0);\n\n    const renderer = new THREE.WebGLRenderer({ antialias: true });\n    renderer.setSize(width, height);\n    containerRef.current.innerHTML = '';\n    containerRef.current.appendChild(renderer.domElement);\n\n    const xs = [...new Set(heightmap.map(p => p.x))].sort((a,b)=>a-b);\n    const ys = [...new Set(heightmap.map(p => p.y))].sort((a,b)=>a-b);\n    const xCount = xs.length;\n    const yCount = ys.length;\n\n    const geometry = new THREE.PlaneGeometry(\n      xs[xCount-1]-xs[0],\n      ys[yCount-1]-ys[0],\n      xCount-1,\n      yCount-1\n    );\n\n    const zValues = [];\n    for (let j=0; j<yCount; j++) {\n      for (let i=0; i<xCount; i++) {\n        const point = heightmap.find(p => p.x===xs[i] && p.y===ys[j]);\n        zValues.push(point ? point.z : 0);\n      }\n    }\n    const minZ = Math.min(...zValues);\n    const maxZ = Math.max(...zValues);\n    geometry.rotateX(-Math.PI/2);\n    geometry.translate(-(xs[xCount-1]+xs[0])/2, 0, (ys[yCount-1]+ys[0])/2);\n\n    const positions = geometry.attributes.position;\n    for (let i=0;i<positions.count;i++) {\n      positions.setY(i, zValues[i]);\n    }\n    positions.needsUpdate = true;\n\n    const colors = [];\n    for (const z of zValues) {\n      const t = (z - minZ) / (maxZ - minZ || 1);\n      const color = new THREE.Color();\n      color.setHSL((1 - t) * 0.33, 1, 0.5); // green to red\n      colors.push(color.r, color.g, color.b);\n    }\n    geometry.setAttribute('color', new THREE.Float32BufferAttribute(colors, 3));\n\n    const material = new THREE.MeshStandardMaterial({ vertexColors: true, side: THREE.DoubleSide });\n    const mesh = new THREE.Mesh(geometry, material);\n    scene.add(mesh);\n\n    const light = new THREE.DirectionalLight(0xffffff, 1);\n    light.position.set(0, 10, 10);\n    scene.add(light);\n\n    const raycaster = new THREE.Raycaster();\n    const mouse = new THREE.Vector2();\n    function onMove(event) {\n      const rect = renderer.domElement.getBoundingClientRect();\n      mouse.x = ((event.clientX - rect.left) / rect.width) * 2 - 1;\n      mouse.y = -((event.clientY - rect.top) / rect.height) * 2 + 1;\n      raycaster.setFromCamera(mouse, camera);\n      const intersects = raycaster.intersectObject(mesh);\n      if (intersects.length > 0) {\n        const idx = intersects[0].face.a;\n        const x = xs[idx % xCount];\n        const y = ys[Math.floor(idx / xCount)];\n        const z = zValues[idx];\n        setHoverInfo({ x, y, z });\n      } else {\n        setHoverInfo(null);\n      }\n    }\n    renderer.domElement.addEventListener('mousemove', onMove);\n\n    function animate() {\n      requestAnimationFrame(animate);\n      renderer.render(scene, camera);\n    }\n    animate();\n\n    return () => {\n      renderer.domElement.removeEventListener('mousemove', onMove);\n      geometry.dispose();\n      material.dispose();\n      renderer.dispose();\n    };\n  }, [heightmap]);\n\n  return (\n    <div className=\"space-y-4 p-4\" data-testid=\"viewer\">\n      <input type=\"file\" accept=\".json\" onChange={handleFile} className=\"border p-2\" aria-label=\"load heightmap\" />\n      <div ref={containerRef} className=\"w-full\" data-testid=\"canvas\" />\n      {hoverInfo && (\n        <div className=\"text-sm bg-white p-1 border inline-block\">\n          {`X:${hoverInfo.x} Y:${hoverInfo.y} Z:${hoverInfo.z}`}\n        </div>\n      )}\n    </div>\n  );\n}\n"
+  },
+  {
+    "filename": "RobotDiagnosticsDashboard.test.jsx",
+    "full_content": "import React from 'react';\nimport { render, screen, fireEvent } from '@testing-library/react';\nimport RobotDiagnosticsDashboard from './RobotDiagnosticsDashboard';\n\njest.mock('./logger', () => ({\n  getLogContent: jest.fn(() => '2024 INFO Robot run started\\n2024 WARNING something\\n2024 ERROR fail\\n2024 INFO feedback: ok'),\n}));\n\nimport { getLogContent } from './logger';\n\ntest('displays parsed log stats', () => {\n  render(<RobotDiagnosticsDashboard />);\n  expect(screen.getByText(/Runs:/).textContent).toContain('1');\n  expect(screen.getByText(/Warnings:/).textContent).toContain('1');\n  expect(screen.getByText(/Errors:/).textContent).toContain('1');\n  expect(screen.getByText(/Feedback:/).textContent).toContain('1');\n  fireEvent.click(screen.getByText('Refresh'));\n  expect(getLogContent).toHaveBeenCalledTimes(2);\n});\n"
+  },
+  {
+    "filename": "ToolpathSimulator.jsx",
+    "full_content": "import React, { useRef, useState, useEffect, useMemo } from 'react';\nimport log from './logger';\n\n/**\n * Simulate toolpath motion over time on a canvas.\n * Accepts raw G-code string and displays tool position with play/pause/step controls.\n */\nexport default function ToolpathSimulator({ gcode = '' }) {\n  // Parse G-code lines to coordinate points\n  const points = useMemo(() => {\n    const pts = [];\n    let x = 0, y = 0, z = 0;\n    gcode.split(/\\r?\\n/).forEach((line) => {\n      if (!/^G0|^G1/.test(line)) return;\n      const mx = line.match(/X([-0-9.]+)/i);\n      const my = line.match(/Y([-0-9.]+)/i);\n      const mz = line.match(/Z([-0-9.]+)/i);\n      if (mx) x = parseFloat(mx[1]);\n      if (my) y = parseFloat(my[1]);\n      if (mz) z = parseFloat(mz[1]);\n      pts.push({ x, y, z });\n    });\n    return pts;\n  }, [gcode]);\n\n  const canvasRef = useRef(null);\n  const [index, setIndex] = useState(0);\n  const [running, setRunning] = useState(false);\n  const timerRef = useRef(null);\n\n  // Draw toolpath and current position\n  const draw = () => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n    const ctx = canvas.getContext('2d');\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    ctx.strokeStyle = '#ccc';\n    ctx.beginPath();\n    points.forEach((p, i) => {\n      const sx = p.x + canvas.width / 2;\n      const sy = canvas.height / 2 - p.y;\n      if (i === 0) ctx.moveTo(sx, sy); else ctx.lineTo(sx, sy);\n    });\n    ctx.stroke();\n    const cur = points[index] || points[points.length - 1];\n    if (!cur) return;\n    const cx = cur.x + canvas.width / 2;\n    const cy = canvas.height / 2 - cur.y;\n    ctx.fillStyle = 'red';\n    ctx.beginPath();\n    ctx.arc(cx, cy, 4, 0, Math.PI * 2);\n    ctx.fill();\n  };\n\n  useEffect(draw, [index, points]);\n\n  // Animation timer\n  useEffect(() => {\n    if (running) {\n      timerRef.current = setInterval(() => {\n        setIndex((i) => {\n          const next = Math.min(i + 1, points.length - 1);\n          if (next === points.length - 1) setRunning(false);\n          return next;\n        });\n      }, 300);\n    }\n    return () => clearInterval(timerRef.current);\n  }, [running, points.length]);\n\n  const play = () => {\n    if (!running) {\n      log('simulation start');\n      setRunning(true);\n    }\n  };\n  const pause = () => {\n    if (running) {\n      log('simulation pause');\n      setRunning(false);\n    }\n  };\n  const step = () => {\n    setIndex((i) => Math.min(i + 1, points.length - 1));\n    log('simulation step');\n  };\n\n  const cur = points[index] || { x: 0, y: 0, z: 0 };\n\n  return (\n    <div className=\"space-y-2 p-4 max-w-md mx-auto\">\n      <canvas\n        ref={canvasRef}\n        width={300}\n        height={300}\n        className=\"border w-full\"\n        data-testid=\"sim-canvas\"\n      />\n      <div className=\"flex space-x-2\">\n        <button onClick={play} className=\"bg-green-600 text-white px-3 py-1 rounded hover:bg-green-700\">Play</button>\n        <button onClick={pause} className=\"bg-yellow-600 text-white px-3 py-1 rounded hover:bg-yellow-700\">Pause</button>\n        <button onClick={step} className=\"bg-blue-600 text-white px-3 py-1 rounded hover:bg-blue-700\">Step</button>\n      </div>\n      <div className=\"text-sm\" data-testid=\"coords\">\n        X:{cur.x} Y:{cur.y} Z:{cur.z}\n      </div>\n    </div>\n  );\n}\n"
+  },
+  {
+    "filename": "BugReportForm.test.jsx",
+    "full_content": "import React from 'react';\nimport { render, screen, fireEvent } from '@testing-library/react';\nimport BugReportForm from './BugReportForm';\njest.mock('./logger', () => jest.fn());\nimport log from './logger';\n\ntest('logs bug report', () => {\n  render(<BugReportForm />);\n  fireEvent.change(screen.getByTestId('bug-input'), { target: { value: 'bug' } });\n  fireEvent.click(screen.getByTestId('bug-send'));\n  expect(log).toHaveBeenCalledWith('bug report: bug');\n});\n"
+  },
+  {
+    "filename": "logger.js",
+    "full_content": "const fs = require('fs').promises;\nconst path = require('path');\n\nconst logPath = path.join(__dirname, '..', 'logs', 'central.log');\nconst logDir = path.dirname(logPath);\nconst MAX_SIZE = 1024 * 1024; // 1 MB\n\nconst LEVELS = { DEBUG: 0, INFO: 1, WARNING: 2, ERROR: 3 };\nlet currentLevel = LEVELS[(process.env.LOG_LEVEL || 'INFO').toUpperCase()] || LEVELS.INFO;\n\n/**\n * Append a log entry to the shared central log file.\n */\nasync function log(message, level = 'INFO', error) {\n  const lvl = LEVELS[level.toUpperCase()] ?? LEVELS.INFO;\n  if (lvl < currentLevel) return;\n\n  let entry = `${new Date().toISOString()} ${level}: ${message}`;\n  if (error) {\n    entry += ` - ${error.stack || error}`;\n  }\n  entry += '\\n';\n  try {\n    await fs.mkdir(logDir, { recursive: true });\n    try {\n      const stat = await fs.stat(logPath);\n      if (stat.size > MAX_SIZE) {\n        await fs.rename(logPath, `${logPath}.1`);\n      }\n    } catch (err) {\n      if (err.code !== 'ENOENT') throw err;\n    }\n    await fs.appendFile(logPath, entry);\n  } catch (err) {\n    console.error('Failed to write log:', err);\n  }\n}\n\n/**\n * Read log file content for export.\n */\nfunction getLogContent() {\n  try {\n    fs.mkdirSync(logDir, { recursive: true });\n    return fs.existsSync(logPath) ? fs.readFileSync(logPath, 'utf8') : '';\n  } catch (err) {\n    console.error('Failed to read log:', err);\n    return '';\n  }\n}\n\nmodule.exports = log;\nmodule.exports.getLogContent = getLogContent;\nmodule.exports.logPath = logPath;\n"
+  },
+  {
+    "filename": "GcodeStreamer.test.jsx",
+    "full_content": "import React from 'react';\nimport { render, screen, fireEvent, act } from '@testing-library/react';\nimport GcodeStreamer from './GcodeStreamer';\njest.useFakeTimers();\njest.mock('./logger', () => jest.fn());\nimport log from './logger';\n\ntest('streams lines in blocks of five', () => {\n  const lines = Array.from({ length: 12 }, (_, i) => `G1 X${i}`);\n  render(<GcodeStreamer gcodeLines={lines} fileName=\"test.gcode\" />);\n  fireEvent.click(screen.getByText('Start Streaming'));\n  act(() => {\n    jest.advanceTimersByTime(210); // first batch\n  });\n  const list = screen.getByTestId('last-lines');\n  expect(list.textContent).toContain('G1 X4'); // last line in first block\n  expect(log).toHaveBeenCalledWith('Start streaming test.gcode');\n});\n\n"
+  },
+  {
+    "filename": "ToolpathOptimizer.test.jsx",
+    "full_content": "import React from 'react';\nimport { render, screen, fireEvent, act } from '@testing-library/react';\nimport ToolpathOptimizer from './ToolpathOptimizer';\njest.useFakeTimers();\njest.mock('./logger', () => jest.fn());\nimport log from './logger';\n\ntest('optimizes toolpath and logs actions', () => {\n  const code = 'G1 X0 Y0\\nG1 X1 Y0';\n  render(<ToolpathOptimizer gcode={code} />);\n  fireEvent.click(screen.getByTestId('opt-button'));\n  act(() => { jest.advanceTimersByTime(310); });\n  expect(screen.getByTestId('after').textContent).toContain(';OPT');\n  expect(log).toHaveBeenCalledWith(expect.stringContaining('optimize request'));\n  expect(log).toHaveBeenCalledWith('optimization complete');\n});\n"
+  },
+  {
+    "filename": "Dashboard.test.jsx",
+    "full_content": "import React from 'react';\nimport { render, screen } from '@testing-library/react';\nimport Dashboard from './Dashboard';\n\ntest('renders heading, button and recent projects', () => {\n  const projects = [\n    { name: 'a', date: '1', type: 'SVG' },\n    { name: 'b', date: '2', type: 'DXF' },\n    { name: 'c', date: '3', type: 'GCODE' },\n    { name: 'd', date: '4', type: 'STL' },\n  ];\n  render(<Dashboard projects={projects} />);\n  expect(screen.getByText('CAM Slicer')).toBeInTheDocument();\n  expect(screen.getByText('New Project')).toBeInTheDocument();\n  expect(screen.getAllByRole('listitem')).toHaveLength(3);\n});\n"
+  },
+  {
+    "filename": "LogExportButton.test.jsx",
+    "full_content": "import React from 'react';\nimport { render, screen, fireEvent } from '@testing-library/react';\nimport LogExportButton from './LogExportButton';\n\njest.mock('./logger', () => {\n  const log = jest.fn();\n  log.getLogContent = jest.fn(() => 'log');\n  return log;\n});\n\njest.mock('file-saver', () => ({ saveAs: jest.fn() }));\nimport { saveAs } from 'file-saver';\nimport log from './logger';\n\ntest('exports logs when clicked', () => {\n  render(<LogExportButton />);\n  fireEvent.click(screen.getByText('Export Logs'));\n  expect(log.getLogContent).toHaveBeenCalled();\n  expect(saveAs).toHaveBeenCalled();\n  expect(log).toHaveBeenCalledWith('User exported logs');\n});\n"
+  },
+  {
+    "filename": "Viewport3D.test.tsx",
+    "full_content": "import React from 'react';\nimport { render, fireEvent, screen, act } from '@testing-library/react';\nimport Viewport3D from './Viewport3D';\njest.mock('./logger', () => jest.fn());\nimport log from './logger';\njest.useFakeTimers();\njest.mock('file-saver', () => ({ saveAs: jest.fn() }));\nimport { saveAs } from 'file-saver';\njest.mock('jspdf', () => {\n  return jest.fn().mockImplementation(() => ({\n    text: jest.fn(),\n    addImage: jest.fn(),\n    save: jest.fn(),\n  }));\n});\nimport jsPDF from 'jspdf';\njest.mock('./viewportUtils', () => {\n  const THREE = require('three');\n  return {\n    loadModel: jest.fn(() =>\n      Promise.resolve({\n        object: {},\n        bbox: new THREE.Box3(),\n        name: 'model.stl',\n        size: new THREE.Vector3(1, 1, 1),\n      })\n    ),\n    loadToolpaths: jest.fn(() =>\n      Promise.resolve([\n        {\n          object: {},\n          points: [new THREE.Vector3(), new THREE.Vector3(1, 0, 0)],\n          type: 'milling',\n          bbox: new THREE.Box3(),\n          name: 'path.gcode',\n          layers: [[new THREE.Vector3(), new THREE.Vector3(1, 0, 0)]],\n          diagnostics: [],\n        },\n      ])\n    ),\n  };\n});\nimport { loadModel, loadToolpaths } from './viewportUtils';\njest.mock('./viewportDiagnostics', () => {\n  const THREE = require('three');\n  return {\n    analyzeScene: jest.fn(() => [\n      { position: new THREE.Vector3(0,0,0), message: 'test warn', severity: 'warning' }\n    ])\n  };\n});\njest.mock('@react-three/drei', () => ({\n  OrbitControls: ({ children }: any) => <div>{children}</div>,\n  TransformControls: () => <div data-testid=\"transform-controls\" />,\n}));\n\ntest('logs mount', () => {\n  render(<Viewport3D />);\n  expect(log).toHaveBeenCalledWith('Viewport3D mounted');\n});\n\ntest('imports model on drop', async () => {\n  render(<Viewport3D />);\n  const file = new File(['dummy'], 'model.stl', { type: 'model/stl' });\n  await act(async () => {\n    fireEvent.drop(screen.getByTestId('viewport'), { dataTransfer: { files: [file] } });\n  });\n  expect(loadModel).toHaveBeenCalledWith(file);\n  expect(log).toHaveBeenCalledWith('file dropped: model.stl');\n  expect(await screen.findByText('model.stl')).toBeInTheDocument();\n});\n\ntest('selects model and shows transform controls', async () => {\n  render(<Viewport3D />);\n  const file = new File(['dummy'], 'model.stl', { type: 'model/stl' });\n  await act(async () => {\n    fireEvent.drop(screen.getByTestId('viewport'), { dataTransfer: { files: [file] } });\n  });\n  fireEvent.click(await screen.findByText('Select'));\n  expect(screen.getByTestId('transform-controls')).toBeInTheDocument();\n});\n\ntest('imports gcode toolpaths', async () => {\n  render(<Viewport3D />);\n  const file = new File(['G1 X0 Y0'], 'path.gcode', { type: 'text/plain' });\n  await act(async () => {\n    fireEvent.drop(screen.getByTestId('viewport'), {\n      dataTransfer: { files: [file] },\n    });\n  });\n  expect(loadToolpaths).toHaveBeenCalledWith(file);\n});\n\ntest('layer slider changes active layer', async () => {\n  render(<Viewport3D />);\n  const file = new File(['G1 X0 Y0'], 'path.gcode', { type: 'text/plain' });\n  await act(async () => {\n    fireEvent.drop(screen.getByTestId('viewport'), {\n      dataTransfer: { files: [file] },\n    });\n  });\n  const slider = screen.getByRole('slider');\n  fireEvent.change(slider, { target: { value: '0' } });\n  expect(slider).toHaveValue('0');\n  expect(screen.getByTestId('layer-label')).toHaveTextContent('0');\n});\n\ntest('segment slider selects toolpath', async () => {\n  render(<Viewport3D />);\n  const file = new File(['G1 X0 Y0'], 'path.gcode', { type: 'text/plain' });\n  await act(async () => {\n    fireEvent.drop(screen.getByTestId('viewport'), {\n      dataTransfer: { files: [file] },\n    });\n  });\n  fireEvent.change(screen.getByDisplayValue('Layer'), {\n    target: { value: 'segment' },\n  });\n  const slider = screen.getByRole('slider');\n  fireEvent.change(slider, { target: { value: '0' } });\n  expect(slider).toHaveValue('0');\n});\n\ntest('shows AI diagnostics summary', async () => {\n  render(<Viewport3D />);\n  const file = new File(['G1 X0 Y-500'], 'path.gcode', { type: 'text/plain' });\n  await act(async () => {\n    fireEvent.drop(screen.getByTestId('viewport'), {\n      dataTransfer: { files: [file] },\n    });\n  });\n  expect(await screen.findByText('AI Diagnostics')).toBeInTheDocument();\n});\n\ntest('export snapshot logs action', async () => {\n  render(<Viewport3D />);\n  fireEvent.click(screen.getByText('Snapshot'));\n  expect(log).toHaveBeenCalledWith('export snapshot');\n  expect(saveAs).toHaveBeenCalled();\n});\n\ntest('optimize order button logs action', async () => {\n  render(<Viewport3D />);\n  fireEvent.click(screen.getByText('Optimize Order'));\n  expect(log).toHaveBeenCalledWith('optimize order');\n});\n\ntest('simulation controls log play', () => {\n  render(<Viewport3D />);\n  fireEvent.click(screen.getByText('Play'));\n  act(() => {\n    jest.advanceTimersByTime(250);\n  });\n  expect(log).toHaveBeenCalledWith('simulation play');\n});\n\ntest('measurement buttons log actions', () => {\n  render(<Viewport3D />);\n  fireEvent.click(screen.getByText('Dist'));\n  expect(log).toHaveBeenCalledWith('measure distance');\n  fireEvent.click(screen.getByText('Angle'));\n  expect(log).toHaveBeenCalledWith('measure angle');\n});\n"
+  },
+  {
+    "filename": "VectorEditor.test.jsx",
+    "full_content": "import React from 'react';\nimport { render, screen, fireEvent } from '@testing-library/react';\nimport VectorEditor from './VectorEditor';\njest.mock('./logger', () => jest.fn());\n\nbeforeAll(() => {\n  global.cv = {\n    imread: jest.fn(() => ({ delete: jest.fn() })),\n    cvtColor: jest.fn(),\n    threshold: jest.fn(),\n    Canny: jest.fn(),\n    findContours: jest.fn(),\n    MatVector: function () {\n      return {\n        vec: [\n          {\n            data32S: Int32Array.from([0, 0, 10, 0, 10, 10, 0, 10]),\n            delete: jest.fn(),\n          },\n        ],\n        size() {\n          return this.vec.length;\n        },\n        get(i) {\n          return this.vec[i];\n        },\n        delete: jest.fn(),\n      };\n    },\n    Mat: function () {\n      return { delete: jest.fn() };\n    },\n    COLOR_RGBA2GRAY: 0,\n    THRESH_BINARY: 0,\n    RETR_EXTERNAL: 0,\n    CHAIN_APPROX_SIMPLE: 0,\n    RETR_LIST: 0,\n    CHAIN_APPROX_NONE: 0,\n  };\n});\n\n// test advanced features: duplicate and undo/redo\ntest('duplicate path and undo works', () => {\n  const file = new File(['dummy'], 'img.png', { type: 'image/png' });\n  render(<VectorEditor />);\n  const input = screen.getByLabelText(/drag/i);\n  fireEvent.change(input, { target: { files: [file] } });\n  fireEvent.click(screen.getByText('Vectorize'));\n  expect(screen.getByText(/Paths:/)).toHaveTextContent('Paths: 1');\n  fireEvent.click(screen.getByText('Duplicate'));\n  expect(screen.getByText(/Paths:/)).toHaveTextContent('Paths: 2');\n  fireEvent.click(screen.getByText('Undo'));\n  expect(screen.getByText(/Paths:/)).toHaveTextContent('Paths: 1');\n});\n\n"
+  },
+  {
+    "filename": "package.json",
+    "full_content": "{\n  \"name\": \"cam-dashboard\",\n  \"version\": \"1.0.0\",\n  \"private\": true,\n  \"scripts\": {\n    \"test\": \"jest\",\n    \"dev\": \"vite\",\n    \"build\": \"vite build\",\n    \"preview\": \"vite preview\"\n  },\n  \"dependencies\": {\n    \"react\": \"^18.2.0\",\n    \"react-dom\": \"^18.2.0\",\n    \"three\": \"^0.160.0\",\n    \"file-saver\": \"^2.0.5\",\n    \"jspdf\": \"^2.5.1\",\n    \"@react-three/fiber\": \"^8.13.0\",\n    \"@react-three/drei\": \"^9.56.4\",\n    \"lucide-react\": \"^0.367.0\"\n  },\n  \"devDependencies\": {\n    \"@testing-library/react\": \"^14.0.0\",\n    \"@testing-library/jest-dom\": \"^6.0.0\",\n    \"jest\": \"^29.0.0\",\n    \"@babel/preset-env\": \"^7.24.0\",\n    \"@babel/preset-react\": \"^7.24.0\",\n    \"tailwindcss\": \"^3.4.0\",\n    \"postcss\": \"^8.4.0\",\n    \"autoprefixer\": \"^10.4.0\",\n    \"vite\": \"^5.0.0\",\n    \"@vitejs/plugin-react\": \"^4.0.0\"\n  }\n}\n"
+  },
+  {
+    "filename": "MachineProfileSelector.test.jsx",
+    "full_content": "import React from 'react';\nimport { render, screen, fireEvent } from '@testing-library/react';\nimport MachineProfileSelector from './MachineProfileSelector';\n\njest.mock('./logger', () => jest.fn());\nimport log from './logger';\n\nbeforeEach(() => {\n  localStorage.clear();\n});\n\ntest('selects profile and edits custom values', () => {\n  render(<MachineProfileSelector />);\n  const select = screen.getByTestId('profile-select');\n  expect(select.value).toBe('GRBL Small');\n\n  fireEvent.change(select, { target: { value: 'Smoothieware' } });\n  expect(screen.getByTestId('value-Feedrate')).toHaveTextContent('3000');\n  expect(log).toHaveBeenCalledWith('Machine profile selected: Smoothieware');\n\n  fireEvent.change(select, { target: { value: 'Custom' } });\n  const inputX = screen.getByTestId('input-X limit');\n  fireEvent.change(inputX, { target: { value: '400' } });\n  expect(localStorage.getItem('machineProfile')).toContain('400');\n});\n"
+  },
+  {
+    "filename": "WorkflowShare.test.jsx",
+    "full_content": "import React from 'react';\nimport { render, screen, fireEvent } from '@testing-library/react';\nimport WorkflowShare from './WorkflowShare';\njest.mock('./logger', () => jest.fn());\nimport log from './logger';\n\nconst mockFile = new File([JSON.stringify({test:1})], 'wf.json', {type:'application/json'});\n\ntest('export and import workflow', () => {\n  const onImport = jest.fn();\n  render(<WorkflowShare workflow={{a:1}} onImport={onImport} />);\n  fireEvent.click(screen.getByText('Share Workflow'));\n  expect(log).toHaveBeenCalledWith('export workflow');\n  const input = screen.getByTestId('wf-input');\n  fireEvent.change(input, { target: { files: [mockFile] } });\n  expect(log).toHaveBeenCalledWith('import workflow');\n  expect(onImport).toHaveBeenCalled();\n});\n\n"
+  },
+  {
+    "filename": "viewportDiagnostics.ts",
+    "full_content": "import * as THREE from 'three';\nimport { ModelData, ToolpathData } from './viewportUtils';\n\nexport interface AIDiagnostic {\n  position: THREE.Vector3;\n  message: string;\n  severity: 'info' | 'warning' | 'error';\n}\n\n/**\n * Analyze models and toolpaths to find common issues.\n * For demo purposes we check workspace bounds and Z collisions.\n */\nexport function analyzeScene(models: ModelData[], toolpaths: ToolpathData[]): AIDiagnostic[] {\n  const diags: AIDiagnostic[] = [];\n  const limit = 200; // workspace is 400x400 mm\n\n  models.forEach((m) => {\n    const box = m.bbox.clone().translate(m.object.position);\n    if (box.min.x < -limit || box.max.x > limit || box.min.y < -limit || box.max.y > limit) {\n      diags.push({\n        position: box.getCenter(new THREE.Vector3()),\n        message: `Model ${m.name} outside workspace`,\n        severity: 'warning',\n      });\n    }\n  });\n\n  toolpaths.forEach((tp) => {\n    const box = tp.bbox;\n    if (box.min.x < -limit || box.max.x > limit || box.min.y < -limit || box.max.y > limit) {\n      diags.push({\n        position: box.getCenter(new THREE.Vector3()),\n        message: `${tp.name} out of bounds`,\n        severity: 'error',\n      });\n    }\n    tp.points.forEach((p) => {\n      if (p.z < -5) {\n        diags.push({ position: p, message: 'Possible collision', severity: 'error' });\n      }\n    });\n  });\n\n  return diags;\n}\n\nexport interface LoadPoint {\n  position: THREE.Vector3;\n  load: number; // 0..1 predicted spindle load\n}\n\n/** Predict simple load for each toolpath point. */\nexport function predictLoadPoints(toolpaths: ToolpathData[]): LoadPoint[] {\n  const loads: LoadPoint[] = [];\n  toolpaths.forEach(tp => {\n    const pts = tp.points;\n    for (let i = 1; i < pts.length; i++) {\n      const prev = pts[i - 1];\n      const cur = pts[i];\n      const dist = cur.distanceTo(prev);\n      const load = Math.min(1, dist / 10);\n      loads.push({ position: cur.clone(), load });\n    }\n  });\n  return loads;\n}\n"
+  },
+  {
+    "filename": "SurfaceAnalyzer.test.jsx",
+    "full_content": "import React from 'react';\nimport { render, screen } from '@testing-library/react';\nimport SurfaceAnalyzer from './SurfaceAnalyzer';\njest.mock('./logger', () => jest.fn());\nimport log from './logger';\n\ntest('detects collision and no contact', () => {\n  const gcode = 'G1 X0 Y0 Z0\\nG1 X1 Y0 Z-1\\nG1 X2 Y0 Z0.3';\n  const heightmap = { points: [ {x:0,y:0,z:0}, {x:1,y:0,z:0}, {x:2,y:0,z:0} ] };\n  render(<SurfaceAnalyzer gcode={gcode} heightmap={heightmap} clearance={0.1} />);\n  const list = screen.getByTestId('issues');\n  expect(list.textContent).toMatch(/COLLISION/);\n  expect(list.textContent).toMatch(/NO_CONTACT/);\n  expect(log).toHaveBeenCalledWith('analysis complete: 1 collisions, 1 high points');\n});\n"
+  },
+  {
+    "filename": "Dashboard.jsx",
+    "full_content": "import React from 'react';\nimport log from './logger';\n\n/**\n * Dashboard component showing recent projects and new project button.\n * Layout has sidebar menu on the left and main content area on the right.\n */\nexport default function Dashboard({ projects = [] }) {\n  const recent = projects.slice(0, 3);\n\n  const handleNewProject = () => {\n    log('new project click');\n    console.log('New project');\n  };\n\n  return (\n    <div className=\"min-h-screen flex\">\n      <aside className=\"w-60 bg-gray-800 text-white p-4\">\n        <h2 className=\"text-xl font-semibold mb-4\">Menu</h2>\n        <ul className=\"space-y-2\">\n          <li className=\"hover:text-gray-300 cursor-pointer\">Projects</li>\n          <li className=\"hover:text-gray-300 cursor-pointer\">Settings</li>\n          <li className=\"hover:text-gray-300 cursor-pointer\">About</li>\n        </ul>\n      </aside>\n      <main className=\"flex-1 p-8\">\n        <div className=\"flex items-center justify-between mb-6\">\n          <h1 className=\"text-3xl font-bold\">CAM Slicer</h1>\n          <button\n            className=\"bg-blue-600 text-white px-4 py-2 rounded hover:bg-blue-700\"\n            onClick={handleNewProject}\n          >\n            New Project\n          </button>\n        </div>\n        <section>\n          <h2 className=\"text-xl font-semibold mb-2\">Recent Projects</h2>\n          <ul className=\"divide-y divide-gray-200\">\n            {recent.map((p, idx) => (\n              <li key={idx} className=\"py-2 flex justify-between\">\n                <span className=\"font-medium\">{p.name}</span>\n                <span className=\"text-gray-500 text-sm\">{p.date}</span>\n                <span className=\"text-gray-400 text-sm\">{p.type}</span>\n              </li>\n            ))}\n          </ul>\n        </section>\n      </main>\n    </div>\n  );\n}\n"
+  },
+  {
+    "filename": "WorkspaceScanner.test.jsx",
+    "full_content": "import { render, fireEvent, screen } from '@testing-library/react';\nimport WorkspaceScanner from './WorkspaceScanner';\nimport log from './logger';\n\njest.mock('./logger');\n\ntest('starts scan with selected mode', () => {\n  render(<WorkspaceScanner onScan={() => {}} />);\n  fireEvent.change(screen.getByRole('combobox'), { target: { value: 'camera' } });\n  fireEvent.click(screen.getByRole('button'));\n  expect(log).toHaveBeenCalledWith('workspace scan start: camera');\n});\n"
+  },
+  {
+    "filename": "Viewport3D.tsx",
+    "full_content": "import React, { useEffect, useCallback, useRef, useState } from 'react';\nimport { Canvas, useThree } from '@react-three/fiber';\nimport { OrbitControls, TransformControls, Html } from '@react-three/drei';\nimport * as THREE from 'three';\nimport log from \"./logger\";\nimport { saveAs } from 'file-saver';\nimport jsPDF from 'jspdf';\nimport ToolpathRenderer from \"./ToolpathRenderer\";\nimport ZoneVisualizer, { ZonePlan } from \"./ZoneVisualizer\";\nimport {\n  loadModel,\n  loadToolpaths,\n  ModelData,\n  ToolpathData,\n  ToolpathType,\n  ToolHead,\n  HEAD_COLORS,\n  suggestToolpathOrder,\n  measureDistance,\n  measureAngle,\n} from \"./viewportUtils\";\nimport { analyzeScene, predictLoadPoints, AIDiagnostic, LoadPoint } from './viewportDiagnostics';\n\nfunction AIDiagnosticMarker({ diag, onFocus }: { diag: AIDiagnostic; onFocus?: (p: THREE.Vector3) => void }) {\n  const [hover, setHover] = useState(false);\n  const color = diag.severity === 'error' ? 'red' : diag.severity === 'warning' ? 'orange' : 'yellow';\n  return (\n    <mesh\n      position={diag.position}\n      onPointerOver={() => setHover(true)}\n      onPointerOut={() => setHover(false)}\n      onClick={() => {\n        log(`ai diagnostic clicked: ${diag.message}`);\n        onFocus && onFocus(diag.position);\n      }}\n    >\n      <sphereGeometry args={[1.5, 8, 8]} />\n      <meshStandardMaterial color={color} />\n      {hover && (\n        <Html distanceFactor={10} style={{ pointerEvents: 'none' }}>\n          <div className=\"bg-black text-white text-xs px-1 rounded\">\n            {diag.message}\n          </div>\n        </Html>\n      )}\n    </mesh>\n  );\n}\n\nfunction LoadMarker({ load }: { load: LoadPoint }) {\n  const color = load.load > 0.7 ? 'red' : load.load > 0.4 ? 'orange' : 'green';\n  return (\n    <mesh position={load.position}>\n      <sphereGeometry args={[1, 8, 8]} />\n      <meshStandardMaterial color={color} opacity={0.6} transparent />\n    </mesh>\n  );\n}\n\ninterface SceneProps {\n  models: ModelData[];\n  toolpaths: ToolpathData[];\n  visible: Record<ToolpathType, boolean>;\n  animating: boolean;\n  activeLayer: number;\n  activeSegment: number;\n  viewMode: 'layer' | 'segment';\n  diagnostics: boolean;\n  aiDiagnostics: AIDiagnostic[];\n  showAIDiagnostics: boolean;\n  controlsRef: React.RefObject<any>;\n  selected: number | null;\n  mode: 'translate' | 'rotate';\n  simIndex: number;\n  startIndices: number[];\n  measurementPoints: THREE.Vector3[];\n  measurementMode: 'none' | 'distance' | 'angle';\n  measurementValue: number | null;\n  notes: { position: THREE.Vector3; text: string }[];\n  scanData?: { debris?: [number, number, number, number][]; heightmap?: { points: { x: number; y: number; z: number }[] } };\n  zones: ZonePlan[];\n  zoneIndex: number;\n  loads: LoadPoint[];\n  showAnalytics: boolean;\n  onSelect: (index: number | null) => void;\n  onFocus: (pos: THREE.Vector3) => void;\n  onCanvasClick: (p: THREE.Vector3) => void;\n}\n\nfunction Scene({ models, toolpaths, visible, animating, activeLayer, activeSegment, viewMode, diagnostics, aiDiagnostics, showAIDiagnostics, controlsRef, selected, mode, simIndex, startIndices, measurementPoints, measurementMode, measurementValue, notes, scanData, zones, zoneIndex, loads, showAnalytics, onSelect, onFocus, onCanvasClick }: SceneProps) {\n  const { camera } = useThree();\n  const measureGeom = React.useMemo(() => {\n    const geom = new THREE.BufferGeometry();\n    if (measurementPoints.length > 1) geom.setFromPoints(measurementPoints);\n    return geom;\n  }, [measurementPoints]);\n\n  useEffect(() => {\n    if (!models.length && !toolpaths.length) return;\n    const box = new THREE.Box3();\n    models.forEach((m) => box.union(m.bbox));\n    toolpaths.forEach((t) => box.union(t.bbox));\n    const center = box.getCenter(new THREE.Vector3());\n    const size = box.getSize(new THREE.Vector3());\n    const maxDim = Math.max(size.x, size.y, size.z);\n    const fov = (camera as THREE.PerspectiveCamera).fov * Math.PI / 180;\n    let dist = maxDim / (2 * Math.tan(fov / 2));\n    dist *= 1.2;\n    camera.position.set(center.x + dist, center.y + dist, center.z + dist);\n    if (controlsRef.current) {\n      controlsRef.current.target.copy(center);\n      controlsRef.current.update();\n    }\n  }, [models, toolpaths, camera, controlsRef]);\n\n\n  return (\n    <>\n      <ambientLight intensity={0.5} />\n      <directionalLight position={[100, 100, 100]} intensity={0.6} />\n      <gridHelper args={[400, 40, '#4B5563', '#374151']} />\n      <axesHelper args={[200]} />\n      <mesh\n        rotation={[-Math.PI / 2, 0, 0]}\n        position={[0, 0, 0]}\n        onPointerDown={(e) => {\n          e.stopPropagation();\n          onCanvasClick(e.point.clone());\n        }}\n      >\n        <planeGeometry args={[400, 400]} />\n        <meshBasicMaterial visible={false} />\n      </mesh>\n      {models.map((m, idx) => (\n        <primitive\n          key={m.name + m.size.toArray().join()}\n          object={m.object}\n          onPointerDown={(e) => {\n            e.stopPropagation();\n            onSelect(idx);\n          }}\n        />\n      ))}\n      <ToolpathRenderer\n        toolpaths={toolpaths}\n        visible={visible}\n        headsVisible={headsVisible}\n        animating={animating}\n        activeLayer={activeLayer}\n        activeSegment={activeSegment}\n        mode={viewMode}\n        diagnostics={diagnostics}\n        simIndex={simIndex}\n        startIndices={startIndices}\n        materialPreview={materialPreview}\n        onFocus={(pos) => onFocus(pos)}\n      />\n      <ZoneVisualizer zones={zones} animating={zoneAnimating} simIndex={zoneIndex} onUpdate={setZones} />\n      {measurementMode !== 'none' && measurementPoints.length > 1 && (\n        <line>\n          <primitive attach=\"geometry\" object={measureGeom} />\n          <lineBasicMaterial attach=\"material\" color=\"cyan\" />\n        </line>\n      )}\n      {measurementValue !== null && (\n        <Html position={measurementPoints[Math.floor(measurementPoints.length/2)]}>\n          <div className=\"bg-black text-cyan-300 text-xs px-1 rounded\">\n            {measurementMode === 'distance'\n              ? `${measurementValue.toFixed(2)} mm`\n              : `${measurementValue.toFixed(1)}Â°`}\n          </div>\n        </Html>\n      )}\n      {notes.map((n, i) => (\n        <Html key={`note-${i}`} position={n.position}>\n          <div className=\"bg-yellow-200 text-black text-xs px-1 rounded\">\n            {n.text}\n          </div>\n        </Html>\n      ))}\n      {showAIDiagnostics &&\n        aiDiagnostics.map((d, i) => (\n          <AIDiagnosticMarker key={`aid-${i}`} diag={d} onFocus={onFocus} />\n        ))}\n      {showAnalytics &&\n        loads.map((l, i) => <LoadMarker key={`load-${i}`} load={l} />)}\n      {scanData?.debris?.map((b, i) => {\n        const [x1, y1, x2, y2] = b;\n        const cx = (x1 + x2) / 2;\n        const cy = (y1 + y2) / 2;\n        const w = Math.abs(x2 - x1);\n        const h = Math.abs(y2 - y1);\n        return (\n          <mesh key={`deb-${i}`} position={[cx, 0.1, cy]} rotation-x={-Math.PI / 2}>\n            <planeGeometry args={[w, h]} />\n            <meshBasicMaterial color=\"red\" opacity={0.5} transparent />\n          </mesh>\n        );\n      })}\n      {scanData?.heightmap?.points && (\n        <group>\n          {scanData.heightmap.points.map((p, i) => (\n            <mesh key={`hm-${i}`} position={[p.x, p.z, p.y]}>\n              <sphereGeometry args={[0.5, 4, 4]} />\n              <meshStandardMaterial color=\"green\" />\n            </mesh>\n          ))}\n        </group>\n      )}\n      {selected !== null && models[selected] && (\n        <TransformControls\n          object={models[selected].object}\n          mode={mode}\n          onMouseDown={() => {\n            if (controlsRef.current) controlsRef.current.enabled = false;\n          }}\n          onMouseUp={() => {\n            if (controlsRef.current) controlsRef.current.enabled = true;\n          }}\n        />\n      )}\n      <OrbitControls ref={controlsRef} />\n    </>\n  );\n}\n\n/**\n * Viewport3D renders a 3D workspace with drag-and-drop model import.\n */\nexport default function Viewport3D() {\n  const [models, setModels] = useState<ModelData[]>([]);\n  const [toolpaths, setToolpaths] = useState<ToolpathData[]>([]);\n  const [visible, setVisible] = useState<Record<ToolpathType, boolean>>({\n    milling: true,\n    drilling: true,\n    engraving: true,\n    laser_cut: true,\n    laser_mark: true,\n  });\n  const [animating, setAnimating] = useState(false);\n  const [selected, setSelected] = useState<number | null>(null);\n  const [mode, setMode] = useState<'translate' | 'rotate'>('translate');\n  const [activeLayer, setActiveLayer] = useState(0);\n  const [activeSegment, setActiveSegment] = useState(0);\n  const [viewMode, setViewMode] = useState<'layer' | 'segment'>('layer');\n  const [diagnostics, setDiagnostics] = useState(true);\n  const [showAIDiag, setShowAIDiag] = useState(true);\n  const [aiDiagnostics, setAIDiagnostics] = useState<AIDiagnostic[]>([]);\n  const [headsVisible, setHeadsVisible] = useState<Record<ToolHead, boolean>>({\n    spindle: true,\n    laser: true,\n    picker: true,\n  });\n  const [simIndex, setSimIndex] = useState(0);\n  const [simRunning, setSimRunning] = useState(false);\n  const [simPoints, setSimPoints] = useState<THREE.Vector3[]>([]);\n  const [startIndices, setStartIndices] = useState<number[]>([]);\n  const [diagMap, setDiagMap] = useState<Record<number, string>>({});\n  const [materialPreview, setMaterialPreview] = useState(false);\n  const [projectName, setProjectName] = useState('');\n  const [notes, setNotes] = useState('');\n  const [measurementMode, setMeasurementMode] = useState<'none' | 'distance' | 'angle'>('none');\n  const [measurementPoints, setMeasurementPoints] = useState<THREE.Vector3[]>([]);\n  const [measurementValue, setMeasurementValue] = useState<number | null>(null);\n  const [notesList, setNotesList] = useState<{ position: THREE.Vector3; text: string }[]>([]);\n  const [scanData, setScanData] = useState<{ debris?: [number, number, number, number][]; heightmap?: { points: {x:number;y:number;z:number}[] } }>();\n  const [zones, setZones] = useState<ZonePlan[]>([]);\n  const [zoneIndex, setZoneIndex] = useState(0);\n  const [zoneAnimating, setZoneAnimating] = useState(false);\n  const [loadPoints, setLoadPoints] = useState<LoadPoint[]>([]);\n  const [showAnalytics, setShowAnalytics] = useState(false);\n  const controlsRef = useRef<any>(null);\n  const noteMode = useRef(false);\n  const canvasRef = useRef<HTMLCanvasElement | null>(null);\n\n  useEffect(() => {\n    log('Viewport3D mounted');\n  }, []);\n\n  useEffect(() => {\n    const diags = analyzeScene(models, toolpaths);\n    setAIDiagnostics(diags);\n  }, [models, toolpaths]);\n\n  useEffect(() => {\n    const map: Record<number, string> = {};\n    let index = 0;\n    toolpaths.forEach(tp => {\n      tp.points.forEach((_, i) => {\n        const d = tp.diagnostics.find(di => di.index === i);\n        if (d) map[index] = d.message;\n        index += 1;\n      });\n    });\n    setDiagMap(map);\n  }, [toolpaths]);\n\n  // compute simulation points whenever toolpaths change\n  useEffect(() => {\n    const pts: THREE.Vector3[] = [];\n    const starts: number[] = [];\n    let idx = 0;\n    toolpaths.forEach((tp, i) => {\n      starts[i] = idx;\n      tp.points.forEach(p => {\n        pts.push(p);\n        idx += 1;\n      });\n    });\n    setSimPoints(pts);\n    setStartIndices(starts);\n    setSimIndex(0);\n    setLoadPoints(predictLoadPoints(toolpaths));\n  }, [toolpaths]);\n\n  useEffect(() => {\n    if (!simRunning || !simPoints.length) return;\n    const timer = setInterval(() => {\n      setSimIndex(i => {\n        const next = Math.min(i + 1, simPoints.length - 1);\n        if (diagMap[next]) log(`simulation issue: ${diagMap[next]}`);\n        if (next === simPoints.length - 1) setSimRunning(false);\n        return next;\n      });\n    }, 200);\n    return () => clearInterval(timer);\n  }, [simRunning, simPoints, diagMap]);\n\n  useEffect(() => {\n    if (!zoneAnimating || zones.length === 0) return;\n    const timer = setInterval(() => {\n      setZoneIndex(i => {\n        const next = Math.min(i + 1, zones.length - 1);\n        if (next === zones.length - 1) setZoneAnimating(false);\n        return next;\n      });\n    }, 1000);\n    return () => clearInterval(timer);\n  }, [zoneAnimating, zones]);\n\n  const handleDrop = useCallback(async (e: React.DragEvent<HTMLDivElement>) => {\n    e.preventDefault();\n    if (!e.dataTransfer.files.length) return;\n    const file = e.dataTransfer.files[0];\n    log(`file dropped: ${file.name}`);\n    const ext = file.name.split('.').pop()?.toLowerCase();\n    if (ext === 'gcode' || ext === 'nc') {\n      const segments = await loadToolpaths(file);\n      if (segments) {\n        setToolpaths((prev) => {\n          const updated = [...prev, ...segments];\n          setActiveLayer(0);\n          setActiveSegment(0);\n          return updated;\n        });\n      }\n    } else if (ext === 'json') {\n      const text = await file.text();\n      try {\n        const parsed = JSON.parse(text);\n        if (Array.isArray(parsed) && parsed[0]?.base) {\n          setZones(parsed as ZonePlan[]);\n          setZoneIndex(0);\n          log(`zone plan loaded: ${parsed.length} zones`);\n        } else {\n          log(`Unknown JSON format: ${file.name}`, 'ERROR');\n        }\n      } catch (err) {\n        log('Failed to parse JSON', 'ERROR', err);\n      }\n    } else {\n      const data = await loadModel(file);\n      if (data) {\n        setModels((prev) => {\n          const updated = [...prev, data];\n          setSelected(updated.length - 1);\n          return updated;\n        });\n      } else {\n        log(`Unsupported file: ${file.name}`, 'ERROR');\n      }\n    }\n  }, []);\n\n  const exportSnapshot = () => {\n    if (!canvasRef.current) return;\n    canvasRef.current.toBlob((blob) => {\n      if (blob) {\n        saveAs(blob, `${projectName || 'viewport'}_${Date.now()}.png`);\n        log('export snapshot');\n      }\n    });\n  };\n\n  const exportReport = () => {\n    if (!canvasRef.current) return;\n    const img = canvasRef.current.toDataURL('image/png');\n    const pdf = new jsPDF();\n    pdf.text(`Project: ${projectName || 'Unnamed'}`, 10, 10);\n    pdf.text(`Time: ${new Date().toLocaleString()}`, 10, 20);\n    if (notes.trim()) {\n      pdf.text(`Notes: ${notes}`, 10, 30);\n    }\n    pdf.addImage(img, 'PNG', 10, 40, 180, 100);\n    pdf.text('Detected issues:', 10, 145);\n    aiDiagnostics.forEach((d, i) => {\n      pdf.text(`- ${d.message}`, 10, 155 + i * 10);\n    });\n    pdf.save(`${projectName || 'viewport_report'}.pdf`);\n    log('export report');\n  };\n\n  const handleCanvasClick = (p: THREE.Vector3) => {\n    if (measurementMode !== 'none') {\n      setMeasurementPoints((pts) => {\n        const next = [...pts, p];\n        if (\n          (measurementMode === 'distance' && next.length === 2) ||\n          (measurementMode === 'angle' && next.length === 3)\n        ) {\n          if (measurementMode === 'distance') {\n            setMeasurementValue(measureDistance(next[0], next[1]));\n          } else {\n            setMeasurementValue(measureAngle(next[0], next[1], next[2]));\n          }\n        }\n        return next;\n      });\n    } else if (noteMode.current) {\n      const text = prompt('Note text?');\n      if (text) {\n        setNotesList((n) => [...n, { position: p, text }]);\n        log(`note added: ${text}`);\n      }\n      noteMode.current = false;\n    }\n  };\n\n  const startSim = () => {\n    if (!simRunning) {\n      log('simulation play');\n      setSimRunning(true);\n    }\n  };\n  const pauseSim = () => {\n    if (simRunning) {\n      log('simulation pause');\n      setSimRunning(false);\n    }\n  };\n  const stepSim = (delta: number) => {\n    setSimIndex((i) => {\n      const next = Math.min(Math.max(i + delta, 0), simPoints.length - 1);\n      log('simulation step');\n      return next;\n    });\n  };\n\n  return (\n    <div\n      className=\"w-full h-full bg-gray-800 relative\"\n      onDragOver={(e) => e.preventDefault()}\n      onDrop={handleDrop}\n      data-testid=\"viewport\"\n    >\n      <Canvas\n        className=\"w-full h-full\"\n        camera={{ position: [250, 250, 250], fov: 60 }}\n        onCreated={({ gl }) => (canvasRef.current = gl.domElement)}\n      >\n        <Scene\n          models={models}\n          toolpaths={toolpaths}\n          visible={visible}\n          animating={animating}\n          activeLayer={activeLayer}\n          activeSegment={activeSegment}\n          viewMode={viewMode}\n          diagnostics={diagnostics}\n          aiDiagnostics={aiDiagnostics}\n          showAIDiagnostics={showAIDiag}\n        simIndex={simIndex}\n        startIndices={startIndices}\n        loads={loadPoints}\n        showAnalytics={showAnalytics}\n        measurementPoints={measurementPoints}\n        measurementMode={measurementMode}\n        measurementValue={measurementValue}\n        notes={notesList}\n        scanData={scanData}\n        zones={zones}\n        zoneIndex={zoneIndex}\n        controlsRef={controlsRef}\n        selected={selected}\n        mode={mode}\n        onSelect={(idx) => setSelected(idx)}\n        onFocus={(pos) => {\n          if (controlsRef.current) {\n            controlsRef.current.target.copy(pos);\n            controlsRef.current.update();\n          }\n          log(`focus on ${pos.x.toFixed(1)},${pos.y.toFixed(1)},${pos.z.toFixed(1)}`);\n        }}\n        onCanvasClick={handleCanvasClick}\n      />\n      </Canvas>\n      {models.length > 0 && (\n        <div className=\"absolute top-0 right-0 bg-black bg-opacity-50 text-white text-xs p-2 space-y-1\">\n          {models.map((m, idx) => (\n            <div key={idx} className=\"mb-2\">\n              <div>{m.name}</div>\n              <div>\n                {m.size.x.toFixed(1)} Ã {m.size.y.toFixed(1)} Ã {m.size.z.toFixed(1)} mm\n              </div>\n              <button\n                className=\"bg-gray-700 px-2 py-1 mt-1 text-white rounded\"\n                onClick={() => setSelected(idx)}\n              >\n                {selected === idx ? 'Selected' : 'Select'}\n              </button>\n            </div>\n          ))}\n          <div className=\"mt-2 flex space-x-2\">\n            <button\n              className=\"bg-gray-700 px-2 py-1 text-white rounded\"\n              onClick={() => setMode('translate')}\n            >\n              Move\n            </button>\n            <button\n              className=\"bg-gray-700 px-2 py-1 text-white rounded\"\n              onClick={() => setMode('rotate')}\n            >\n              Rotate\n            </button>\n            <button\n              className=\"bg-gray-700 px-2 py-1 text-white rounded\"\n              onClick={() => setSelected(null)}\n            >\n              Deselect\n            </button>\n          </div>\n          {toolpaths.length > 0 && (\n            <div className=\"mt-2 space-y-1\">\n              {Object.keys(visible).map((t) => (\n                <label key={t} className=\"block\">\n                  <input\n                    type=\"checkbox\"\n                    checked={visible[t as ToolpathType]}\n                    onChange={() =>\n                      setVisible((v) => ({ ...v, [t]: !v[t as ToolpathType] }))\n                    }\n                    className=\"mr-1\"\n                  />\n                  {t}\n                </label>\n              ))}\n              <button\n                className=\"bg-gray-700 px-2 py-1 mt-1 text-white rounded w-full\"\n                onClick={() => setAnimating((a) => !a)}\n              >\n                {animating ? 'Pause' : 'Play'}\n              </button>\n              <div className=\"flex items-center space-x-2 mt-1\">\n                <select\n                  value={viewMode}\n                  onChange={(e) => setViewMode(e.target.value as 'layer' | 'segment')}\n                  className=\"text-xs bg-gray-700 text-white px-1 rounded\"\n                >\n                  <option value=\"layer\">Layer</option>\n                  <option value=\"segment\">Segment</option>\n                </select>\n                {viewMode === 'layer' ? (\n                  <>\n                    <input\n                      type=\"range\"\n                      min=\"0\"\n                      max={Math.max(0, ...toolpaths.map((t) => t.layers.length - 1))}\n                      value={activeLayer}\n                      onChange={(e) => {\n                        const val = Number(e.target.value);\n                        setActiveLayer(val);\n                        log(`layer ${val}`);\n                      }}\n                      className=\"flex-1\"\n                    />\n                    <span data-testid=\"layer-label\" className=\"text-xs text-white w-6 text-center\">\n                      {activeLayer}\n                    </span>\n                  </>\n                ) : (\n                  <>\n                    <input\n                      type=\"range\"\n                      min=\"0\"\n                      max={Math.max(0, toolpaths.length - 1)}\n                      value={activeSegment}\n                      onChange={(e) => {\n                        const val = Number(e.target.value);\n                        setActiveSegment(val);\n                        log(`segment ${val}`);\n                      }}\n                      className=\"flex-1\"\n                    />\n                    <span className=\"text-xs text-white w-6 text-center\">{activeSegment}</span>\n                  </>\n                )}\n              </div>\n              <label className=\"flex items-center space-x-1 text-xs\">\n                <input type=\"checkbox\" checked={diagnostics} onChange={(e)=>setDiagnostics(e.target.checked)} />\n                <span>Toolpath diag</span>\n              </label>\n              <label className=\"flex items-center space-x-1 text-xs\">\n                <input type=\"checkbox\" checked={showAIDiag} onChange={(e)=>setShowAIDiag(e.target.checked)} />\n                <span>AI Diagnostics</span>\n              </label>\n              <div className=\"mt-1\">\n                {Object.keys(headsVisible).map((h) => (\n                  <label key={h} className=\"flex items-center space-x-1 text-xs mr-2\">\n                    <input\n                      type=\"checkbox\"\n                      checked={headsVisible[h as ToolHead]}\n                      onChange={() => setHeadsVisible(v => ({...v, [h]: !v[h as ToolHead]}))}\n                    />\n                    <span style={{color: `#${HEAD_COLORS[h as ToolHead].toString(16)}`}}>{h}</span>\n                  </label>\n                ))}\n              </div>\n              <button\n                className=\"bg-gray-700 px-2 py-1 text-white rounded w-full mt-1\"\n                onClick={() => {\n                  setToolpaths(tp => suggestToolpathOrder(tp));\n                  log('optimize order');\n                }}\n              >\n                Optimize Order\n              </button>\n              {simPoints.length > 0 && (\n                <div className=\"space-y-1 mt-1\">\n                  <div className=\"flex space-x-1\">\n                    <button className=\"bg-green-600 text-white px-2 rounded\" onClick={startSim}>Play</button>\n                    <button className=\"bg-yellow-600 text-white px-2 rounded\" onClick={pauseSim}>Pause</button>\n                    <button className=\"bg-blue-600 text-white px-2 rounded\" onClick={() => stepSim(-1)}>&lt;</button>\n                    <button className=\"bg-blue-600 text-white px-2 rounded\" onClick={() => stepSim(1)}>&gt;</button>\n                  </div>\n                  <div className=\"w-full bg-gray-600 h-2 rounded\">\n                    <div\n                      className=\"bg-green-500 h-2 rounded\"\n                      style={{ width: `${(simIndex / (simPoints.length - 1)) * 100}%` }}\n                    />\n                  </div>\n                </div>\n              )}\n              {zones.length > 0 && (\n                <div className=\"space-y-1 mt-1\">\n                  <div className=\"flex space-x-1\">\n                    <button className=\"bg-green-600 text-white px-2 rounded\" onClick={() => { setZoneAnimating(true); log('zone play'); }}>Play Zones</button>\n                    <button className=\"bg-yellow-600 text-white px-2 rounded\" onClick={() => { setZoneAnimating(false); log('zone pause'); }}>Pause</button>\n                    <button className=\"bg-blue-600 text-white px-2 rounded\" onClick={() => setZoneIndex(i=>Math.max(i-1,0))}>&lt;</button>\n                    <button className=\"bg-blue-600 text-white px-2 rounded\" onClick={() => setZoneIndex(i=>Math.min(i+1, zones.length-1))}>&gt;</button>\n                  </div>\n                  <div className=\"w-full bg-gray-600 h-2 rounded\">\n                    <div className=\"bg-purple-500 h-2 rounded\" style={{width:`${(zoneIndex/(zones.length-1))*100}%`}} />\n                  </div>\n                </div>\n              )}\n              <label className=\"flex items-center space-x-1 text-xs\">\n                <input type=\"checkbox\" checked={materialPreview} onChange={(e)=>setMaterialPreview(e.target.checked)} />\n                <span>Material preview</span>\n              </label>\n              <label className=\"flex items-center space-x-1 text-xs\">\n                <input type=\"checkbox\" checked={showAnalytics} onChange={(e)=>setShowAnalytics(e.target.checked)} />\n                <span>Load overlay</span>\n              </label>\n              <div className=\"flex space-x-1 mt-1\">\n                <button className=\"bg-gray-700 px-1 rounded\" onClick={() => {setMeasurementMode('distance'); setMeasurementPoints([]); setMeasurementValue(null); log('measure distance');}}>Dist</button>\n                <button className=\"bg-gray-700 px-1 rounded\" onClick={() => {setMeasurementMode('angle'); setMeasurementPoints([]); setMeasurementValue(null); log('measure angle');}}>Angle</button>\n                <button className=\"bg-gray-700 px-1 rounded\" onClick={() => {setMeasurementMode('none'); setMeasurementPoints([]); setMeasurementValue(null);}}>Clear</button>\n                <button className=\"bg-gray-700 px-1 rounded\" onClick={() => {noteMode.current = true; log('add note');}}>Note</button>\n              </div>\n            </div>\n          )}\n          {showAIDiag && aiDiagnostics.length > 0 && (\n            <div className=\"mt-2\">\n              <div className=\"font-bold text-xs\">AI Diagnostics</div>\n              <ul className=\"space-y-1\">\n                {aiDiagnostics.map((d, i) => (\n                  <li key={i}>\n                    <button\n                      className=\"underline\"\n                      onClick={() => {\n                        if (controlsRef.current) {\n                          controlsRef.current.target.copy(d.position);\n                          controlsRef.current.update();\n                        }\n                      }}\n                    >\n                      {d.message}\n                    </button>\n                  </li>\n                ))}\n              </ul>\n            </div>\n          )}\n          <div className=\"mt-2 space-y-1\">\n            <input\n              type=\"text\"\n              placeholder=\"Project Name\"\n              value={projectName}\n              onChange={(e) => setProjectName(e.target.value)}\n              className=\"w-full text-black p-1 text-xs\"\n            />\n            <textarea\n              placeholder=\"Notes\"\n              value={notes}\n              onChange={(e) => setNotes(e.target.value)}\n              rows={2}\n              className=\"w-full text-black p-1 text-xs\"\n            />\n            <button\n              className=\"bg-gray-700 px-2 py-1 text-white rounded w-full\"\n              onClick={exportSnapshot}\n            >\n              Snapshot\n            </button>\n            <button\n              className=\"bg-gray-700 px-2 py-1 text-white rounded w-full\"\n              onClick={exportReport}\n            >\n              Export Report\n            </button>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n"
+  },
+  {
+    "filename": "DiagnosticsPanel.test.jsx",
+    "full_content": "import React from 'react';\nimport { render, screen, fireEvent } from '@testing-library/react';\nimport DiagnosticsPanel from './DiagnosticsPanel';\njest.mock('./logger', () => jest.fn());\nimport log from './logger';\n\ntest('diagnostics actions log events', () => {\n  render(<DiagnosticsPanel />);\n  fireEvent.click(screen.getByTestId('run-tests'));\n  fireEvent.click(screen.getByTestId('gen-report'));\n  expect(log).toHaveBeenCalledWith('diagnostics run tests');\n  expect(log).toHaveBeenCalledWith('diagnostics report');\n});\n"
+  },
+  {
+    "filename": "SurfaceAnalyzer.jsx",
+    "full_content": "import React, { useMemo, useEffect, useRef, useState } from 'react';\nimport log from './logger';\n\n/**\n * Analyze G-code against a heightmap and highlight problem areas.\n * Collisions appear in red while segments above clearance are blue.\n */\nexport default function SurfaceAnalyzer({ gcode = '', heightmap = { points: [] }, clearance = 0.1 }) {\n  // Parse G-code lines into coordinate points\n  const points = useMemo(() => {\n    const pts = [];\n    let x = 0, y = 0, z = 0;\n    gcode.split(/\\r?\\n/).forEach(line => {\n      line = line.trim();\n      if (!/^G0|^G1/.test(line)) return;\n      const mx = line.match(/X([-0-9.]+)/i);\n      const my = line.match(/Y([-0-9.]+)/i);\n      const mz = line.match(/Z([-0-9.]+)/i);\n      if (mx) x = parseFloat(mx[1]);\n      if (my) y = parseFloat(my[1]);\n      if (mz) z = parseFloat(mz[1]);\n      pts.push({ x, y, z });\n    });\n    return pts;\n  }, [gcode]);\n\n  // Build lookup table for heightmap Z values\n  const hmap = useMemo(() => {\n    const m = new Map();\n    (heightmap.points || []).forEach(p => {\n      m.set(`${p.x},${p.y}`, parseFloat(p.z));\n    });\n    return m;\n  }, [heightmap]);\n\n  const canvasRef = useRef(null);\n  const [issues, setIssues] = useState([]);\n\n  // Draw overlay with color-coded markers\n  const draw = (cols, high, ok) => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n    const ctx = canvas.getContext('2d');\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n    const cx = canvas.width / 2;\n    const cy = canvas.height / 2;\n\n    ctx.strokeStyle = '#666';\n    ctx.beginPath();\n    points.forEach((p, i) => {\n      const sx = p.x + cx;\n      const sy = cy - p.y;\n      if (i === 0) ctx.moveTo(sx, sy); else ctx.lineTo(sx, sy);\n    });\n    ctx.stroke();\n\n    function drawDots(arr, color) {\n      ctx.fillStyle = color;\n      arr.forEach(p => {\n        const sx = p.x + cx;\n        const sy = cy - p.y;\n        ctx.beginPath();\n        ctx.arc(sx, sy, 3, 0, Math.PI * 2);\n        ctx.fill();\n      });\n    }\n\n    drawDots(ok, 'green');\n    drawDots(high, 'blue');\n    drawDots(cols, 'red');\n  };\n\n  // Analyze when inputs change\n  useEffect(() => {\n    const cols = [];\n    const high = [];\n    const ok = [];\n    const issuesList = [];\n\n    points.forEach(p => {\n      const surf = hmap.get(`${p.x},${p.y}`) ?? 0;\n      const diff = p.z - surf;\n      if (diff < 0) {\n        cols.push(p);\n        issuesList.push({ type: 'COLLISION', x: p.x, y: p.y, diff });\n      } else if (diff > clearance) {\n        high.push(p);\n        issuesList.push({ type: 'NO_CONTACT', x: p.x, y: p.y, diff });\n      } else {\n        ok.push(p);\n      }\n    });\n\n    setIssues(issuesList);\n    draw(cols, high, ok);\n    log(`analysis complete: ${cols.length} collisions, ${high.length} high points`);\n  }, [points, hmap, clearance]);\n\n  return (\n    <div className=\"space-y-2 p-4 max-w-md mx-auto\">\n      <canvas ref={canvasRef} width={300} height={300} className=\"border w-full\" />\n      <div className=\"text-sm font-medium\">Analysis Results:</div>\n      <ul className=\"text-sm list-disc pl-4\" data-testid=\"issues\">\n        {issues.length === 0 && <li>No issues found</li>}\n        {issues.map((i, idx) => (\n          <li key={idx}>{`${i.type} at X${i.x} Y${i.y} Î${i.diff.toFixed(2)}`}</li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n"
+  },
+  {
+    "filename": "LayerPreview.test.jsx",
+    "full_content": "import React from 'react';\nimport { render, screen, fireEvent, act } from '@testing-library/react';\nimport LayerPreview from './LayerPreview';\njest.useFakeTimers();\njest.mock('./logger', () => jest.fn());\nimport log from './logger';\n\ntest('changes layer and plays preview', () => {\n  const layers = [\n    [[[0,0,0],[10,0,0]]],\n    [[[0,0,0],[0,10,-1]]]\n  ];\n  render(<LayerPreview layers={layers} />);\n  // change via slider\n  const slider = screen.getByRole('slider');\n  fireEvent.change(slider, { target: { value: '1' } });\n  expect(slider.value).toBe('1');\n  expect(screen.getAllByTestId('line')).toHaveLength(1);\n  // play preview\n  fireEvent.click(screen.getByText('Play preview'));\n  act(() => {\n    jest.advanceTimersByTime(600);\n  });\n  expect(log).toHaveBeenCalledWith('Play preview');\n});\n"
+  },
+  {
+    "filename": "GcodeStreamer.jsx",
+    "full_content": "import React, { useState, useEffect, useRef } from 'react';\nimport log from './logger';\n\n/**\n * Stream G-code lines in blocks of 5 with basic controls.\n */\nexport default function GcodeStreamer({ gcodeLines = [], fileName = 'unknown' }) {\n  const [index, setIndex] = useState(0); // next line index\n  const [streaming, setStreaming] = useState(false);\n  const [paused, setPaused] = useState(false);\n  const timerRef = useRef(null);\n  const [error, setError] = useState('');\n\n  // start streaming lines\n  const start = () => {\n    if (streaming) return;\n    if (!gcodeLines.length) {\n      setError('No G-code to stream');\n      return;\n    }\n    log(`Start streaming ${fileName}`);\n    setStreaming(true);\n    setPaused(false);\n    setError('');\n  };\n\n  // pause streaming\n  const pause = () => {\n    if (!streaming) return;\n    log('stream paused');\n    setPaused(true);\n  };\n\n  // stop streaming and reset\n  const stop = () => {\n    if (!streaming && index === 0) return;\n    log('stream stopped');\n    clearInterval(timerRef.current);\n    setStreaming(false);\n    setPaused(false);\n    setIndex(0);\n  };\n\n  // restart from beginning\n  const restart = () => {\n    log('stream restarted');\n    clearInterval(timerRef.current);\n    setIndex(0);\n    setPaused(false);\n    setStreaming(true);\n  };\n\n  // handle streaming timer\n  useEffect(() => {\n    if (streaming && !paused) {\n      timerRef.current = setInterval(() => {\n        try {\n          setIndex((prev) => {\n            const next = Math.min(prev + 5, gcodeLines.length);\n            log(`stream lines ${prev}-${next}`);\n            if (next === gcodeLines.length) {\n              clearInterval(timerRef.current);\n              setStreaming(false);\n            }\n            return next;\n          });\n        } catch (err) {\n          setError('Streaming error');\n          log(`Streaming error: ${err.message}`);\n          clearInterval(timerRef.current);\n          setStreaming(false);\n        }\n      }, 200);\n    }\n    return () => clearInterval(timerRef.current);\n  }, [streaming, paused, gcodeLines.length]);\n\n  const progress = gcodeLines.length\n    ? Math.round((index / gcodeLines.length) * 100)\n    : 0;\n  const recent = gcodeLines.slice(Math.max(0, index - 3), index);\n\n  return (\n    <div className=\"p-4 space-y-4 max-w-md mx-auto\">\n      <div className=\"text-lg font-semibold\">{fileName}</div>\n      <div>Total lines: {gcodeLines.length}</div>\n      <div className=\"w-full bg-gray-200 h-4 rounded\">\n        <div\n          className=\"bg-green-500 h-4 rounded\"\n          style={{ width: `${progress}%` }}\n          data-testid=\"progress-bar\"\n        />\n      </div>\n      <div className=\"flex space-x-2\">\n        <button\n          onClick={start}\n          className=\"bg-blue-600 text-white px-3 py-1 rounded hover:bg-blue-700\"\n        >\n          Start Streaming\n        </button>\n        <button\n          onClick={pause}\n          className=\"bg-yellow-500 text-white px-3 py-1 rounded hover:bg-yellow-600\"\n        >\n          Pause\n        </button>\n        <button\n          onClick={stop}\n          className=\"bg-gray-500 text-white px-3 py-1 rounded hover:bg-gray-600\"\n        >\n          Stop\n        </button>\n        <button\n          onClick={restart}\n          className=\"bg-purple-600 text-white px-3 py-1 rounded hover:bg-purple-700\"\n        >\n          Restart\n        </button>\n      </div>\n      <div>\n        <h3 className=\"font-medium\">Last lines</h3>\n        <ul className=\"text-sm font-mono\" data-testid=\"last-lines\">\n          {recent.map((line, i) => (\n            <li key={i}>{line}</li>\n          ))}\n        </ul>\n      </div>\n      {error && (\n        <div className=\"text-red-600\" data-testid=\"stream-error\">{error}</div>\n      )}\n    </div>\n  );\n}\n"
+  },
+  {
+    "filename": "ZoneSummary.test.jsx",
+    "full_content": "import React from 'react';\nimport { render, screen } from '@testing-library/react';\nimport ZoneSummary from './ZoneSummary';\njest.mock('./logger', () => jest.fn());\n\nconst zones = [\n  { base: [0, 0], toolpath: [[0,0,0]], move_cmds: ['MOVE_BASE X0 Y0'] },\n  { base: [100, 0], toolpath: [[100,0,0]], move_cmds: ['G1 Z50', 'MOVE_BASE X100 Y0'] },\n];\n\ntest('renders list of zones', () => {\n  render(<ZoneSummary zones={zones} />);\n  expect(screen.getByTestId('zone-list').children.length).toBe(2);\n});\n"
+  },
+  {
+    "filename": "GeoFenceOverlay.tsx",
+    "full_content": "import React from 'react';\nimport * as THREE from 'three';\n\ninterface Props {\n  forbidden: [number, number, number, number][];\n  airMove?: [number, number, number, number][];\n  visible?: boolean;\n}\n\n/**\n * Render GeoFence zones as colored rectangles in the viewport.\n */\nexport default function GeoFenceOverlay({\n  forbidden,\n  airMove = [],\n  visible = true,\n}: Props) {\n  if (!visible) return null;\n\n  const toMesh = (b: [number, number, number, number], color: string, key: string) => {\n    const [x1, y1, x2, y2] = b;\n    const w = Math.abs(x2 - x1);\n    const h = Math.abs(y2 - y1);\n    const cx = (x1 + x2) / 2;\n    const cy = (y1 + y2) / 2;\n    return (\n      <mesh key={key} position={[cx, 0, cy]}>\n        <boxGeometry args={[w, 0.1, h]} />\n        <meshBasicMaterial color={color} opacity={0.3} transparent />\n      </mesh>\n    );\n  };\n\n  return (\n    <group>\n      {forbidden.map((b, i) => toMesh(b, 'red', `f${i}`))}\n      {airMove.map((b, i) => toMesh(b, 'blue', `a${i}`))}\n    </group>\n  );\n}\n"
+  },
+  {
+    "filename": "ResumeJobButton.jsx",
+    "full_content": "import React, { useEffect, useState } from 'react';\nimport log from './logger';\n\n/**\n * Show details from last_block.json and allow resuming.\n */\nexport default function ResumeJobButton({ onResume, checkpoint = 'last_block.json' }) {\n  const [info, setInfo] = useState(null);\n\n  useEffect(() => {\n    fetch(checkpoint)\n      .then((r) => r.json())\n      .then(setInfo)\n      .catch(() => setInfo(null));\n  }, [checkpoint]);\n\n  const resume = () => {\n    log('resume job clicked');\n    if (onResume) onResume(info);\n  };\n\n  if (!info) {\n    return (\n      <button disabled className=\"bg-gray-400 text-white px-3 py-1 rounded\">\n        No checkpoint\n      </button>\n    );\n  }\n\n  return (\n    <div className=\"space-y-2\">\n      <div className=\"text-sm\">Last line: {info.line}</div>\n      <button\n        onClick={resume}\n        className=\"bg-green-600 text-white px-3 py-1 rounded hover:bg-green-700\"\n      >\n        Resume interrupted job\n      </button>\n    </div>\n  );\n}\n"
+  },
+  {
+    "filename": "ToolpathRenderer.test.jsx",
+    "full_content": "import React from 'react';\nimport { render } from '@testing-library/react';\nimport ToolpathRenderer from './ToolpathRenderer';\nimport * as THREE from 'three';\n\ntest('shows head mesh when animating', () => {\n  const line = new THREE.Line(new THREE.BufferGeometry(), new THREE.LineBasicMaterial());\n  const tp = { object: line, points: [new THREE.Vector3(), new THREE.Vector3(1,0,0)], type: 'milling', head: 'spindle', bbox: new THREE.Box3(), name: 'path', layers:[[new THREE.Vector3(), new THREE.Vector3(1,0,0)]], diagnostics:[] };\n  const { container } = render(\n    <ToolpathRenderer\n      toolpaths={[tp]}\n      visible={{ milling: true, drilling: true, engraving: true, laser_cut: true, laser_mark: true }}\n      headsVisible={{ spindle: true, laser: true, picker: true }}\n      animating={true}\n      activeLayer={0}\n      activeSegment={0}\n      mode=\"layer\"\n      diagnostics={false}\n    />\n  );\n  expect(container.querySelector('mesh')).not.toBeNull();\n});\n\ntest('clicking diagnostic calls onFocus', () => {\n  const line = new THREE.Line(new THREE.BufferGeometry(), new THREE.LineBasicMaterial());\n  const tp = {\n    object: line,\n    points: [new THREE.Vector3(), new THREE.Vector3(1, 0, 0)],\n    type: 'milling',\n    head: 'spindle',\n    bbox: new THREE.Box3(),\n    name: 'path',\n    layers: [[new THREE.Vector3(), new THREE.Vector3(1, 0, 0)]],\n    diagnostics: [\n      {\n        layer: 0,\n        index: 1,\n        position: new THREE.Vector3(0.5, 0, 0),\n        message: 'sharp corner',\n      },\n    ],\n  };\n  const onFocus = jest.fn();\n  const { container } = render(\n    <ToolpathRenderer\n      toolpaths={[tp]}\n      visible={{ milling: true, drilling: true, engraving: true, laser_cut: true, laser_mark: true }}\n      headsVisible={{ spindle: true, laser: true, picker: true }}\n      animating={false}\n      activeLayer={0}\n      activeSegment={0}\n      mode=\"layer\"\n      diagnostics={true}\n      onFocus={onFocus}\n    />\n  );\n  const mesh = container.querySelector('mesh');\n  if (mesh) {\n    mesh.dispatchEvent(new MouseEvent('click', { bubbles: true }));\n  }\n  expect(onFocus).toHaveBeenCalled();\n});\n"
+  },
+  {
+    "filename": "README.md",
+    "full_content": "# React Dashboard\n\nFull documentation: https://example.github.io/cam_slicer/\n\nThis folder contains a simple dashboard component for the CAM Slicer project. It uses TailwindCSS for styling and displays a sidebar, main heading, button and recent project list. Clicking **New Project** is logged to `logs/central.log` using the small logger utility. The logger writes asynchronously so UI interactions stay responsive.\n\n## Usage\n\n```\nimport Dashboard from './Dashboard';\n\nconst projects = [\n  { name: 'Panel Cut', date: '2025-07-01', type: 'GCODE' },\n  { name: 'Logo Engrave', date: '2025-06-24', type: 'SVG' },\n  { name: 'Bracket', date: '2025-06-20', type: 'DXF' },\n];\n\n<Dashboard projects={projects} /> // displays at most 3 entries\n```\n\nInclude TailwindCSS via CDN or your build pipeline to style the component.\n\n## File Uploader\n\n`FileUploader` provides a drag-and-drop area for importing CAM files. It logs the chosen file and the continue action to `logs/central.log`, shows a simple preview, and displays a button to continue once a file is selected. Unsupported or oversized files show a clear error message. Supported formats are SVG, DXF, DWG, STL, OBJ, G-code and common image files.\n\n```jsx\nimport FileUploader from './FileUploader';\n\n<FileUploader onContinue={(file) => console.log(file.name)} />\n```\n\n## Toolpath Transform Controls\n\n`ToolpathTransform` lets you rotate, scale and translate a toolpath interactively. Each change is logged to `logs/central.log`.\n\n```jsx\nimport ToolpathTransform from './ToolpathTransform';\n\n<ToolpathTransform onChange={(t) => console.log(t)} />\n```\n\n## G-code Streamer\n\n`GcodeStreamer` streams a G-code array in blocks of five lines. It shows progress and the last streamed lines while logging actions to `logs/central.log`.\n\n```jsx\nimport GcodeStreamer from './GcodeStreamer';\n\nconst lines = [\"G1 X0 Y0\", \"G1 X1 Y0\", \"G1 X2 Y0\", ...];\n\n<GcodeStreamer gcodeLines={lines} fileName=\"demo.gcode\" />\n```\n\n## Job Recovery Button\n\n`ResumeJobButton` reads `last_block.json` and calls your callback when the user\nchooses to resume a job.\n\n```jsx\nimport ResumeJobButton from './ResumeJobButton';\n\n<ResumeJobButton onResume={(info) => console.log('resume', info)} />\n```\n\n## Machine Monitor\n\n`MachineMonitor` displays dummy machine status that updates every second.\n\n```jsx\nimport MachineMonitor from './MachineMonitor';\n\n<MachineMonitor />\n```\n\n## Webcam Detector\n\n`WebcamDetector` shows a live webcam feed and simulates object detection. Click **Start Object Detection** to enable the camera. When a person or hand is detected a red warning banner appears and a message is logged to `logs/central.log`.\n\n```jsx\nimport WebcamDetector from './WebcamDetector';\n\n<WebcamDetector />\n```\n\n## Project Saver\n\n`ProjectSaver` lets you save a project with optional notes and export G-code. Errors during export are shown as red text and all clicks are logged to `logs/central.log`.\n\n```jsx\nimport ProjectSaver from './ProjectSaver';\n\nconst lines = ['G1 X0 Y0', 'G1 X1 Y0'];\n\n<ProjectSaver gcodeLines={lines} />\n```\n\n`FeedbackForm` allows beta users to send notes that are appended to `logs/central.log`.\n\n```jsx\nimport FeedbackForm from './FeedbackForm';\n\n<FeedbackForm />\n```\n\n\n## Project Manager\n\n`ProjectManager` saves and loads complete project data as JSON using FileSaver.js. Actions are logged to `logs/central.log` and invalid or oversized files show an error.\n\n```jsx\nimport ProjectManager from './ProjectManager';\n\n<ProjectManager toolpaths={paths} material=\"MDF\" machineProfile={profile} settings={{feed:1000}} onLoad={data => console.log(data)} />\n```\n## Material Selector\n\n`MaterialSelector` offers a dropdown for common materials and shows recommended spindle speed and feedrate. Selecting **Custom** displays an input field for your own material name. Every selection is logged to `logs/central.log`.\n\n```jsx\nimport MaterialSelector from './MaterialSelector';\n\n<MaterialSelector />\n```\n\n## Machine Profile Selector\n\n`MachineProfileSelector` provides presets for GRBL and Smoothieware machines or a **Custom** profile. Values are stored in `localStorage` and each selection is logged.\n\n```jsx\nimport MachineProfileSelector from './MachineProfileSelector';\n\n<MachineProfileSelector />\n```\n\n## Multi-machine overview\n\nThe dashboard can manage several machines at once. Use `MachineMonitor` to show\nstatus and assign jobs using the backend `MachineManager`.\n\n```jsx\nimport MachineMonitor from './MachineMonitor';\n\n<MachineMonitor name=\"router1\" status={{state: 'idle'}} />\n```\n\n## Cutting Strategy Selector\n\n`CuttingStrategySelector` lets the user pick a cutting approach. Each radio option shows a small icon and short description. The selected strategy is logged to `logs/central.log`.\n\n```jsx\nimport CuttingStrategySelector from './CuttingStrategySelector';\n\n<CuttingStrategySelector onChange={(s) => console.log(s)} />\n```\n\n## Layer Preview\n\n`LayerPreview` shows sliced toolpath layers with a slider and play button.\n```jsx\nimport LayerPreview from './LayerPreview';\n\nconst layers = [\n  [[[0,0,0],[10,0,0]]],\n  [[[0,0,0],[0,10,-1]]]\n];\n\n<LayerPreview layers={layers} />\n```\n\n## Tool List\n\n`ToolList` manages a list of tools with name, diameter, type and maximum RPM. Tools are saved to `localStorage` so the list persists across reloads. Adding or removing a tool writes to `logs/central.log`.\n\n```jsx\nimport ToolList from './ToolList';\n\n<ToolList />\n```\n\n## Heightmap Viewer\n\n`HeightmapViewer` loads a JSON heightmap and renders it as a 3D surface with Three.js. Colors range from green (low) to red (high) and hovering shows coordinates.\n\n```jsx\nimport HeightmapViewer from './HeightmapViewer';\n\n<HeightmapViewer />\n```\n\n## Heightmap Editor\n\n`HeightmapEditor` shows a colored grid for height values. Click a cell to edit\nthe Z level. Changes are logged via `/log`.\n\n```jsx\nimport HeightmapEditor from './src/HeightmapEditor';\n\nconst data = [\n  [0, 1],\n  [2, 3],\n];\n\n<HeightmapEditor heightmapData={data} />\n```\n\n## 3D Viewport\n\n`Viewport3D` shows a CNC work area using **react-three-fiber** with orbit controls and a 400Ã400&nbsp;mm grid. Drag STL, OBJ, SVG, DXF or G-code onto the canvas to import a model. Imported items appear centered and listed with their dimensions and a Select button. When selected, on-canvas transform controls allow moving or rotating the model.\n\n```tsx\nimport Viewport3D from './Viewport3D';\n\n<Viewport3D />\n```\n\nWhen dropping a G-code file, its toolpaths appear in color on the model. Each\noperation type can be shown or hidden, and the **Play** button animates the\ntoolhead along the visible path.\n\nUse the slider to step through toolpath **layers** or **segments**. Pick the mode\nfrom the dropdown beside the slider. Enable **Diagnostics** to show warning\nmarkers for sharp corners or low Z moves. Enable **AI Diagnostics** to run a\nbasic analysis on imported models and toolpaths and display colored markers for\nout-of-bound moves or deep cuts. Clicking a marker zooms the view to that\nlocation and logs the action.\n\nUse **Snapshot** to export the current viewport as PNG. **Export Report**\ngenerates a PDF with the snapshot, model info and AI diagnostics, including\ntimestamp, project name and optional notes.\n\nClick **Dist** or **Angle** to measure between picked points directly in the\nviewport. Use **Note** to drop a yellow label anywhere on the scene. These\nhelpers log their actions to `logs/central.log`.\n\nThe viewport now shows multiple toolheads. Paths are coloured by head type and\nicons mark each start point. Toggle heads in the sidebar and click **Optimize\nOrder** to reorder paths. *Material preview* tints the model based on the\noperation.\n\nRendering is delegated to the modular `ToolpathRenderer` component so additional toolheads can be integrated.\nThe parser understands A/B/C rotations, allowing preview of 4â and 5âaxis programs with correct head orientation.\n## Toolpath Simulator\n\n`ToolpathSimulator` animates toolhead movement from a G-code string. Use the play, pause and step buttons to inspect each point. Actions are logged to `logs/central.log`.\n\nThe main `Viewport3D` component now supports full process simulation. Hit **Play** in the sidebar to watch material being removed in real time. Faded lines indicate remaining moves while completed sections are highlighted. You can pause or step through individual commands and progress is shown with a small bar.\n\n```jsx\nimport ToolpathSimulator from './ToolpathSimulator';\n\nconst code = 'G1 X0 Y0\\nG1 X10 Y0\\nG1 X10 Y10';\n\n<ToolpathSimulator gcode={code} />\n```\n## Toolpath Preview\n`ToolpathPreview` draws a 2D SVG of the X/Y moves from a G-code string and allows a simple animation. The preview is scrollable and Play/Pause actions are logged to `web/log.txt`.\n\n```jsx\nimport ToolpathPreview from './src/ToolpathPreview';\n\nconst code = 'G1 X0 Y0\\nG1 X10 Y0\\nG1 X10 Y10';\n\n<ToolpathPreview gcode={code} />\n```\n## Cut Stock Simulator\n`CutStockSimulator` runs a simple voxel-based removal simulation and lets you export the remaining stock to STL.\n\n```jsx\nimport CutStockSimulator from \"./CutStockSimulator\";\n\n<CutStockSimulator toolpaths={paths} stock={{x:50,y:50,z:10}} toolRadius={2} />\n```\n\n## VR / AR Viewer\n\n`VRViewer` uses WebXR to preview toolpaths in a headset or AR-capable browser. A small sphere moves along the path and you can enable VR or AR mode.\n\n```jsx\nimport VRViewer from './VRViewer';\n\nconst points = [ {x:0,y:0,z:0}, {x:20,y:0,z:0}, {x:20,y:20,z:-5} ];\n\n<VRViewer points={points} mode=\"vr\" />\n```\n\nPress **Play** to animate and use the displayed VR/AR button to enter immersive mode. Logging captures when the viewer starts and stops.\n\n\n## Surface Analyzer\n\n`SurfaceAnalyzer` compares a G-code string with a loaded heightmap and highlights collisions or areas where the tool loses contact. Results are logged to `logs/central.log`.\n\n```jsx\nimport SurfaceAnalyzer from './SurfaceAnalyzer';\n\nconst gcode = 'G1 X0 Y0 Z0\\nG1 X1 Y0 Z-1';\nconst map = { points: [ {x:0,y:0,z:0}, {x:1,y:0,z:0} ] };\n\n<SurfaceAnalyzer gcode={gcode} heightmap={map} />\n```\n\n## Toolpath Optimizer\n\n`ToolpathOptimizer` uses a dummy API call to adjust a toolpath based on material, depth per pass and risk. It logs the optimization and shows before/after previews.\nThe **Experimental features** panel exposes an *Adaptive Toolpath* checkbox which enables experimental surface-aware generation when checked.\n\n```jsx\nimport ToolpathOptimizer from './ToolpathOptimizer';\n\nconst gcode = 'G1 X0 Y0\\nG1 X1 Y0';\nconst heightmap = { points: [{x:0,y:0,z:0},{x:1,y:0,z:-0.1}] };\n\n<ToolpathOptimizer gcode={gcode} heightmap={heightmap} />\n```\n\n## Setup Wizard\n\n`SetupWizard` guides new users through importing a design, selecting material and tool, choosing a machine profile and finally exporting G-code. Navigation is done with **Next** and **Back** buttons while the progress bar at the top shows the current step. Actions are logged to `logs/central.log`.\n\n```jsx\nimport SetupWizard from './SetupWizard';\n\nconst gcode = ['G1 X0 Y0', 'G1 X1 Y0'];\n\n<SetupWizard gcodeLines={gcode} />\n```\n\n## Vector Editor\n\n`VectorEditor` imports raster or vector files and provides node editing, path operations and a basic layer system. Raster images are traced using **OpenCV.js**. Set the threshold and choose outline or centerline extraction. You can duplicate or mirror paths, drag nodes, and every step is kept in an undo history and written to `logs/central.log`.\n\n```jsx\nimport VectorEditor from './VectorEditor';\n\n<VectorEditor />\n```\n\n\n## Haptic Toolpath Editor\n\n`HapticToolpathEditor` lets you sketch paths freely with mouse or touch. Each stroke is placed on its own layer and you can undo/redo changes. Visible layers can be exported as G-code or previewed with the built in simulator. All actions are logged to `logs/central.log`.\n\n```jsx\nimport HapticToolpathEditor from './HapticToolpathEditor';\n\n## Operation Assigner\n\n`OperationAssigner` lets you choose an operation (Cut, Engrave, Mill, Print) and assign a tool head (Laser, Spindle, Print Head) for each imported path. The `Tools & Operations` section of `CuraSlicerUI` embeds this component and also shows per-path parameters.\n\n```jsx\nimport OperationAssigner from './OperationAssigner';\n\nconst paths = [[{x:0,y:0},{x:1,y:0}], [{x:0,y:1},{x:1,y:1}]];\n\n<OperationAssigner paths={paths} />\n```\n\n## Cura Style UI\n\n`CuraSlicerUI` provides a full layout inspired by Cura with a scrollable sidebar.\nEach section expands to reveal options and logging occurs whenever you select a section or use the import/export buttons. The sidebar includes groups such as *Import & Model*, *Tools & Operations*, *Hybrid Operations*, *Toolpath Optimization*, *Surface & Sensors*, *Simulation*, *AI Analyze & Optimize*, *Export & Streaming*, *Monitoring*, *Experimental features* and *Diagnostics*. Each group shows a small emoji icon. The Toolpath Optimization section simply points to the AI panel for optimizers. The Simulation section lets you preview an animated toolpath and shows basic statistics.\n\nThe **AI Analyze & Optimize** panel lists loaded plugins with enable toggles and provides quick buttons for AI analysis or auto optimisation. The **Experimental features** panel hosts toggles like **Adaptive Toolpath**. The **Diagnostics** panel offers actions to run the project tests and generate a system report, logging everything to `logs/central.log`.\nThe new **Experimental AI** panel bundles the `SurfaceAnalyzer`, `ToolpathOptimizer` and a placeholder AI Feedback widget for advanced users.\n\nThe **Export & Streaming** section exports G-code for **GRBL**, **Marlin** or **Klipper**, optionally with a custom postprocessor, and can stream the code directly with a progress log or run a dry-run.\n\nThe **Monitoring** section displays dummy machine position, feed and state updating every second.\n\nThe **Tools & Operations** menu lets you assign operations and tool heads to paths, while **Hybrid Operations** previews those assignments overlayed on the canvas so you can verify the correct head is used for each path.\nThe **Experimental features** section holds toggles like *Adaptive Toolpath* and other workâinâprogress options.\n\nDrag a supported file (SVG, DXF, DWG, OBJ, STL, JPG, PNG) onto the main canvas to import it. A preview appears centered on the canvas and the right panel lists file details with transform controls.\n\n```jsx\nimport CuraSlicerUI from './CuraSlicerUI';\n\n<CuraSlicerUI />\n```\n\n## Workspace scanning\n\n`WorkspaceScanner` lets you choose **Camera only**, **Probe only** or\n**Hybrid** scanning. The selected mode is logged and results appear as overlays\nin `Viewport3D` when combined with your frontend logic.\n\n```jsx\nimport WorkspaceScanner from './WorkspaceScanner';\n\n<WorkspaceScanner onScan={(data) => console.log(data)} />\n```\n\n## Log Export\n\n`LogExportButton` lets users download `logs/central.log` with one click so they can send it for support.\n```jsx\nimport LogExportButton from \"./LogExportButton\";\n\n<LogExportButton />\n```\n\n## Robot Arm Panel\n\n`RobotArmPanel` manages robotic arm profiles and diagnostics. Enable robot mode,\nrun a **Dry run** for calibration and view real-time joint status. Profiles can\nbe edited, saved to `localStorage`, imported or exported. The panel warns about\noverload, collisions or joint limit problems. Commands may be streamed directly\nto the robot or exported from the panel.\nThe bottom of the panel includes a diagnostics dashboard and bug report form for beta feedback.\n\n```jsx\nimport RobotArmPanel from './RobotArmPanel';\n\n<RobotArmPanel />\n```\n\n### Robot Trajectory Optimizer\n`RobotTrajectoryOptimizer` calls the backend `/robot_optimize` endpoint to smooth\nrobot arm paths and shows warnings for risky moves. Users can preview the\noptimized path and accept or reject the suggestions.\n\n### Base Position Planner\n`plan_base_zones(toolpath, profile, [0,1000], [0,1000])` splits large jobs into\nzones so the portal moves between optimal base positions automatically. Use\n`optimize_base_position_ai` when debris or fixtures are detected via\n`GeoFence` to select a safer base. The viewport highlights each zone and the\nplanned gantry coordinates.\n\n### Workspace Zoning\n`plan_workspace_zones` returns an ordered list of zones with move commands for\nthe gantry. Display this summary before running the job so the operator can\nconfirm each reposition step.\n\n```jsx\nimport ZoneSummary from './ZoneSummary';\n\n<ZoneSummary zones={zonePlan} />\n```\n\nTo preview moves visually drop the zone JSON onto `Viewport3D` and enable the\nzone controls. The **ZoneVisualizer** component animates base transitions and\nlets you drag each cube to adjust the plan.\n\nDetected debris or clamps can be previewed with **GeoFenceOverlay** which draws\nred or blue rectangles over the workspace so the operator can confirm zones\nbefore starting the job.\n\n```jsx\nimport RobotTrajectoryOptimizer from './RobotTrajectoryOptimizer';\n\n<RobotTrajectoryOptimizer toolpath={[[0,0,0],[10,0,0]]} profile={{}} />\n```\n\n## Sidebar Navigation\n\n`Sidebar` provides quick access to common sections of the dashboard. Each menu\nitem calls your callback with the chosen section key. The last clicked item is\nhighlighted for clarity.\n\n```jsx\nimport Sidebar from './src/Sidebar';\n\nfunction onNavigate(section) {\n  console.log('navigate to', section);\n}\n\n<Sidebar onNavigate={onNavigate} />\n```\n\n## AI Analyzer\n\n`AIAnalyzer` posts a selected analyzer name and toolpath points to `/optimize` and shows the JSON result. Each run logs a message via `/log`.\n\n```jsx\nimport AIAnalyzer from './src/AIAnalyzer';\n\n<AIAnalyzer />\n```\n\n## G-code Exporter\n\n`GCodeExporter` converts toolpath JSON into G-code and uses `/export` to return plain text. It can send the result to a machine. It fetches available serial ports from `/ports` and logs actions via `/log`.\nUse the **Refresh** button to reload the list of ports if devices are plugged in after page load.\n\n```jsx\nimport GCodeExporter from './src/GCodeExporter';\n\n<GCodeExporter />\n```\n\n## Settings Panel\n\n`SettingsPanel` stores the chosen theme and API URL in `localStorage` and logs\nthe action via `/log`.\n\n```jsx\nimport SettingsPanel from './src/SettingsPanel';\n\n<SettingsPanel />\n```\n\n## Plugin Panel\n\n`PluginPanel` loads available plugins from `/plugins` and lets you run them. Each action\nis logged via `/log` and the plugin result appears below the list.\n\n```jsx\nimport PluginPanel from './src/PluginPanel';\n\n<PluginPanel />\n```\n\n## ROS2 Bridge\n\nConnect the UI with a ROS2 controller via the backend `ROSBridge`. Status\nupdates appear in real time and control commands are forwarded to the machine.\n\n\n### Mobile Performance\n`ToolpathRenderer` uses reduced animation speed on small screens and is exported with `React.memo` to avoid unnecessary re-renders.\n\n## Vite Development Setup\n\nRun the dashboard with Vite for hot reload:\n\n```bash\ncd web\nnpm install\nnpm run dev\n```\n\nBuild for production with `npm run build` and preview the result using `npm run preview`.\n"
+  },
+  {
+    "filename": "ToolpathOptimizer.jsx",
+    "full_content": "import React, { useState } from 'react';\nimport log from './logger';\n\n/**\n * Apply AI optimization to a toolpath using a mock API call.\n */\nexport default function ToolpathOptimizer({ gcode = '', heightmap = {} }) {\n  const [material, setMaterial] = useState('Plywood');\n  const [depth, setDepth] = useState(1);\n  const [risk, setRisk] = useState('Low');\n  const [optimized, setOptimized] = useState('');\n  const [loading, setLoading] = useState(false);\n\n  const optimize = () => {\n    log(`optimize request: ${material} depth ${depth} risk ${risk}`);\n    setLoading(true);\n    setTimeout(() => {\n      const lines = gcode.split(/\\r?\\n/).map(l => l.trim()).filter(Boolean);\n      const out = lines.map(line => `${line} ;OPT`);\n      setOptimized(out.join('\\n'));\n      setLoading(false);\n      log('optimization complete');\n    }, 300);\n  };\n\n  const preview = gcode.split(/\\r?\\n/).slice(0, 5).join('\\n');\n  const optimizedPreview = optimized.split(/\\r?\\n/).slice(0, 5).join('\\n');\n\n  return (\n    <div className=\"p-4 space-y-4 max-w-md mx-auto\">\n      <div>\n        <label className=\"block text-sm font-medium\">Material</label>\n        <select\n          value={material}\n          onChange={(e) => setMaterial(e.target.value)}\n          className=\"border rounded p-2 w-full\"\n          data-testid=\"material\"\n        >\n          {['Plywood', 'MDF', 'Aluminum', 'Acrylic'].map((m) => (\n            <option key={m} value={m}>{m}</option>\n          ))}\n        </select>\n      </div>\n      <div>\n        <label className=\"block text-sm font-medium\">Max Depth per Pass (mm)</label>\n        <input\n          type=\"number\"\n          value={depth}\n          onChange={(e) => setDepth(Number(e.target.value))}\n          className=\"border rounded p-2 w-full\"\n          data-testid=\"depth\"\n        />\n      </div>\n      <div>\n        <label className=\"block text-sm font-medium\">Risk Level</label>\n        <select\n          value={risk}\n          onChange={(e) => setRisk(e.target.value)}\n          className=\"border rounded p-2 w-full\"\n          data-testid=\"risk\"\n        >\n          {['Low', 'Medium', 'High'].map((r) => (\n            <option key={r} value={r}>{r}</option>\n          ))}\n        </select>\n      </div>\n      <button\n        onClick={optimize}\n        disabled={loading}\n        className=\"bg-blue-600 text-white px-3 py-1 rounded hover:bg-blue-700\"\n        data-testid=\"opt-button\"\n      >\n        {loading ? 'Optimizing...' : 'Optimize'}\n      </button>\n      <div className=\"flex space-x-4\">\n        <div className=\"flex-1\">\n          <div className=\"font-medium\">Before</div>\n          <pre className=\"text-xs border p-2\" data-testid=\"before\">{preview}</pre>\n        </div>\n        <div className=\"flex-1\">\n          <div className=\"font-medium\">After</div>\n          <pre className=\"text-xs border p-2\" data-testid=\"after\">{optimizedPreview}</pre>\n        </div>\n      </div>\n    </div>\n  );\n}\n"
+  },
+  {
+    "filename": "babel.config.js",
+    "full_content": "module.exports = {\n  presets: ['@babel/preset-env', '@babel/preset-react'],\n};\n"
+  },
+  {
+    "filename": "DiagnosticsPanel.jsx",
+    "full_content": "import React from 'react';\nimport log from './logger';\n\n/**\n * DiagnosticsPanel\n * ----------------\n * Run project tests and generate system report. Only logs the actions.\n */\nexport default function DiagnosticsPanel() {\n  const runTests = () => {\n    log('diagnostics run tests');\n  };\n  const genReport = () => {\n    log('diagnostics report');\n  };\n  return (\n    <div className=\"p-4 space-y-2 max-w-md mx-auto\">\n      <button\n        onClick={runTests}\n        className=\"bg-blue-600 text-white px-3 py-1 rounded\"\n        data-testid=\"run-tests\"\n      >\n        Run Tests\n      </button>\n      <button\n        onClick={genReport}\n        className=\"bg-green-600 text-white px-3 py-1 rounded\"\n        data-testid=\"gen-report\"\n      >\n        System Report\n      </button>\n    </div>\n  );\n}\n"
+  },
+  {
+    "filename": "OperationAssigner.jsx",
+    "full_content": "import React, { useState, useEffect } from 'react';\nimport log from './logger';\n\n// Supported operations and available tool heads\nconst OPERATIONS = ['Cut', 'Engrave', 'Mill', 'Print'];\nconst TOOL_HEADS = ['Laser', 'Spindle', 'Print Head'];\n// Default head for each operation\nconst DEFAULT_MAP = {\n  Cut: 'Spindle',\n  Engrave: 'Laser',\n  Mill: 'Spindle',\n  Print: 'Print Head',\n};\n\n/**\n * OperationAssigner\n * -----------------\n * Assign operations and tool heads to imported vector paths.\n * Selection changes are logged to logs/central.log and a summary is displayed.\n */\nexport default function OperationAssigner({ paths = [], onChange }) {\n  const [assignments, setAssignments] = useState(() =>\n    paths.map(() => ({ operation: 'Cut', head: DEFAULT_MAP.Cut }))\n  );\n\n  // reset assignments when path count changes\n  useEffect(() => {\n    setAssignments(paths.map(() => ({ operation: 'Cut', head: DEFAULT_MAP.Cut })));\n  }, [paths.length]);\n\n  // notify parent on change\n  useEffect(() => {\n    if (onChange) onChange(assignments);\n  }, [assignments, onChange]);\n\n  const setOperation = (idx, op) => {\n    setAssignments((prev) => {\n      const next = [...prev];\n      next[idx] = { operation: op, head: DEFAULT_MAP[op] };\n      log(`Path ${idx} operation -> ${op}`);\n      return next;\n    });\n  };\n\n  const setHead = (idx, head) => {\n    setAssignments((prev) => {\n      const next = [...prev];\n      next[idx] = { ...next[idx], head };\n      log(`Path ${idx} head -> ${head}`);\n      return next;\n    });\n  };\n\n  const summary = assignments.reduce(\n    (acc, a) => {\n      acc.heads[a.head] = (acc.heads[a.head] || 0) + 1;\n      acc.ops[a.operation] = (acc.ops[a.operation] || 0) + 1;\n      return acc;\n    },\n    { heads: {}, ops: {} }\n  );\n\n  return (\n    <div className=\"p-4 space-y-4 max-w-md mx-auto\">\n      {paths.map((p, idx) => (\n        <div key={idx} className=\"border rounded p-2 space-y-1\">\n          <div className=\"font-medium\">Path {idx + 1}</div>\n          <div className=\"flex space-x-2\">\n            <select\n              value={assignments[idx]?.operation}\n              onChange={(e) => setOperation(idx, e.target.value)}\n              className=\"border rounded p-1\"\n              data-testid={`op-${idx}`}\n            >\n              {OPERATIONS.map((o) => (\n                <option key={o} value={o}>\n                  {o}\n                </option>\n              ))}\n            </select>\n            <select\n              value={assignments[idx]?.head}\n              onChange={(e) => setHead(idx, e.target.value)}\n              className=\"border rounded p-1\"\n              data-testid={`head-${idx}`}\n            >\n              {TOOL_HEADS.map((h) => (\n                <option key={h} value={h}>\n                  {h}\n                </option>\n              ))}\n            </select>\n          </div>\n        </div>\n      ))}\n      <div className=\"border-t pt-2\">\n        <h3 className=\"font-medium\">Summary</h3>\n        <div className=\"flex space-x-8 text-sm\" data-testid=\"summary\">\n          <ul>\n            {OPERATIONS.map((o) => (\n              <li key={o}>\n                {o}: {summary.ops[o] || 0}\n              </li>\n            ))}\n          </ul>\n          <ul>\n            {TOOL_HEADS.map((h) => (\n              <li key={h}>\n                {h}: {summary.heads[h] || 0}\n              </li>\n            ))}\n          </ul>\n        </div>\n      </div>\n    </div>\n  );\n}\n"
+  },
+  {
+    "filename": "package-lock.json",
+    "full_content": "{\n  \"name\": \"cam-dashboard\",\n  \"version\": \"1.0.0\",\n  \"lockfileVersion\": 3,\n  \"requires\": true,\n  \"packages\": {\n    \"\": {\n      \"name\": \"cam-dashboard\",\n      \"version\": \"1.0.0\",\n      \"dependencies\": {\n        \"@react-three/drei\": \"^9.56.4\",\n        \"@react-three/fiber\": \"^8.13.0\",\n        \"file-saver\": \"^2.0.5\",\n        \"jspdf\": \"^2.5.1\",\n        \"react\": \"^18.2.0\",\n        \"react-dom\": \"^18.2.0\",\n        \"three\": \"^0.160.0\"\n      },\n      \"devDependencies\": {\n        \"@testing-library/jest-dom\": \"^6.0.0\",\n        \"@testing-library/react\": \"^14.0.0\",\n        \"autoprefixer\": \"^10.4.0\",\n        \"jest\": \"^29.0.0\",\n        \"postcss\": \"^8.4.0\",\n        \"tailwindcss\": \"^3.4.0\"\n      }\n    },\n    \"node_modules/@adobe/css-tools\": {\n      \"version\": \"4.4.3\",\n      \"resolved\": \"https://registry.npmjs.org/@adobe/css-tools/-/css-tools-4.4.3.tgz\",\n      \"integrity\": \"sha512-VQKMkwriZbaOgVCby1UDY/LDk5fIjhQicCvVPFqfe+69fWaPWydbWJ3wRt59/YzIwda1I81loas3oCoHxnqvdA==\",\n      \"dev\": true\n    },\n    \"node_modules/@alloc/quick-lru\": {\n      \"version\": \"5.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/@alloc/quick-lru/-/quick-lru-5.2.0.tgz\",\n      \"integrity\": \"sha512-UrcABB+4bUrFABwbluTIBErXwvbsU/V7TZWfmbgJfbkwiBuziS9gxdODUyuiecfdGQ85jglMW6juS3+z5TsKLw==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=10\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    },\n    \"node_modules/@ampproject/remapping\": {\n      \"version\": \"2.3.0\",\n      \"resolved\": \"https://registry.npmjs.org/@ampproject/remapping/-/remapping-2.3.0.tgz\",\n      \"integrity\": \"sha512-30iZtAPgz+LTIYoeivqYo853f02jBYSd5uGnGpkFV0M3xOt9aN73erkgYAmZU43x4VfqcnLxW9Kpg3R5LC4YYw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@jridgewell/gen-mapping\": \"^0.3.5\",\n        \"@jridgewell/trace-mapping\": \"^0.3.24\"\n      },\n      \"engines\": {\n        \"node\": \">=6.0.0\"\n      }\n    },\n    \"node_modules/@babel/code-frame\": {\n      \"version\": \"7.27.1\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/code-frame/-/code-frame-7.27.1.tgz\",\n      \"integrity\": \"sha512-cjQ7ZlQ0Mv3b47hABuTevyTuYN4i+loJKGeV9flcCgIK37cCXRh+L1bd3iBHlynerhQ7BhCkn2BPbQUL+rGqFg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@babel/helper-validator-identifier\": \"^7.27.1\",\n        \"js-tokens\": \"^4.0.0\",\n        \"picocolors\": \"^1.1.1\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      }\n    },\n    \"node_modules/@babel/compat-data\": {\n      \"version\": \"7.28.0\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/compat-data/-/compat-data-7.28.0.tgz\",\n      \"integrity\": \"sha512-60X7qkglvrap8mn1lh2ebxXdZYtUcpd7gsmy9kLaBJ4i/WdY8PqTSdxyA8qraikqKQK5C1KRBKXqznrVapyNaw==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      }\n    },\n    \"node_modules/@babel/core\": {\n      \"version\": \"7.28.0\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/core/-/core-7.28.0.tgz\",\n      \"integrity\": \"sha512-UlLAnTPrFdNGoFtbSXwcGFQBtQZJCNjaN6hQNP3UPvuNXT1i82N26KL3dZeIpNalWywr9IuQuncaAfUaS1g6sQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@ampproject/remapping\": \"^2.2.0\",\n        \"@babel/code-frame\": \"^7.27.1\",\n        \"@babel/generator\": \"^7.28.0\",\n        \"@babel/helper-compilation-targets\": \"^7.27.2\",\n        \"@babel/helper-module-transforms\": \"^7.27.3\",\n        \"@babel/helpers\": \"^7.27.6\",\n        \"@babel/parser\": \"^7.28.0\",\n        \"@babel/template\": \"^7.27.2\",\n        \"@babel/traverse\": \"^7.28.0\",\n        \"@babel/types\": \"^7.28.0\",\n        \"convert-source-map\": \"^2.0.0\",\n        \"debug\": \"^4.1.0\",\n        \"gensync\": \"^1.0.0-beta.2\",\n        \"json5\": \"^2.2.3\",\n        \"semver\": \"^6.3.1\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      },\n      \"funding\": {\n        \"type\": \"opencollective\",\n        \"url\": \"https://opencollective.com/babel\"\n      }\n    },\n    \"node_modules/@babel/generator\": {\n      \"version\": \"7.28.0\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/generator/-/generator-7.28.0.tgz\",\n      \"integrity\": \"sha512-lJjzvrbEeWrhB4P3QBsH7tey117PjLZnDbLiQEKjQ/fNJTjuq4HSqgFA+UNSwZT8D7dxxbnuSBMsa1lrWzKlQg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@babel/parser\": \"^7.28.0\",\n        \"@babel/types\": \"^7.28.0\",\n        \"@jridgewell/gen-mapping\": \"^0.3.12\",\n        \"@jridgewell/trace-mapping\": \"^0.3.28\",\n        \"jsesc\": \"^3.0.2\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      }\n    },\n    \"node_modules/@babel/helper-compilation-targets\": {\n      \"version\": \"7.27.2\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/helper-compilation-targets/-/helper-compilation-targets-7.27.2.tgz\",\n      \"integrity\": \"sha512-2+1thGUUWWjLTYTHZWK1n8Yga0ijBz1XAhUXcKy81rd5g6yh7hGqMp45v7cadSbEHc9G3OTv45SyneRN3ps4DQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@babel/compat-data\": \"^7.27.2\",\n        \"@babel/helper-validator-option\": \"^7.27.1\",\n        \"browserslist\": \"^4.24.0\",\n        \"lru-cache\": \"^5.1.1\",\n        \"semver\": \"^6.3.1\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      }\n    },\n    \"node_modules/@babel/helper-globals\": {\n      \"version\": \"7.28.0\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/helper-globals/-/helper-globals-7.28.0.tgz\",\n      \"integrity\": \"sha512-+W6cISkXFa1jXsDEdYA8HeevQT/FULhxzR99pxphltZcVaugps53THCeiWA8SguxxpSp3gKPiuYfSWopkLQ4hw==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      }\n    },\n    \"node_modules/@babel/helper-module-imports\": {\n      \"version\": \"7.27.1\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/helper-module-imports/-/helper-module-imports-7.27.1.tgz\",\n      \"integrity\": \"sha512-0gSFWUPNXNopqtIPQvlD5WgXYI5GY2kP2cCvoT8kczjbfcfuIljTbcWrulD1CIPIX2gt1wghbDy08yE1p+/r3w==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@babel/traverse\": \"^7.27.1\",\n        \"@babel/types\": \"^7.27.1\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      }\n    },\n    \"node_modules/@babel/helper-module-transforms\": {\n      \"version\": \"7.27.3\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/helper-module-transforms/-/helper-module-transforms-7.27.3.tgz\",\n      \"integrity\": \"sha512-dSOvYwvyLsWBeIRyOeHXp5vPj5l1I011r52FM1+r1jCERv+aFXYk4whgQccYEGYxK2H3ZAIA8nuPkQ0HaUo3qg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@babel/helper-module-imports\": \"^7.27.1\",\n        \"@babel/helper-validator-identifier\": \"^7.27.1\",\n        \"@babel/traverse\": \"^7.27.3\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      },\n      \"peerDependencies\": {\n        \"@babel/core\": \"^7.0.0\"\n      }\n    },\n    \"node_modules/@babel/helper-plugin-utils\": {\n      \"version\": \"7.27.1\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/helper-plugin-utils/-/helper-plugin-utils-7.27.1.tgz\",\n      \"integrity\": \"sha512-1gn1Up5YXka3YYAHGKpbideQ5Yjf1tDa9qYcgysz+cNCXukyLl6DjPXhD3VRwSb8c0J9tA4b2+rHEZtc6R0tlw==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      }\n    },\n    \"node_modules/@babel/helper-string-parser\": {\n      \"version\": \"7.27.1\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/helper-string-parser/-/helper-string-parser-7.27.1.tgz\",\n      \"integrity\": \"sha512-qMlSxKbpRlAridDExk92nSobyDdpPijUq2DW6oDnUqd0iOGxmQjyqhMIihI9+zv4LPyZdRje2cavWPbCbWm3eA==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      }\n    },\n    \"node_modules/@babel/helper-validator-identifier\": {\n      \"version\": \"7.27.1\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/helper-validator-identifier/-/helper-validator-identifier-7.27.1.tgz\",\n      \"integrity\": \"sha512-D2hP9eA+Sqx1kBZgzxZh0y1trbuU+JoDkiEwqhQ36nodYqJwyEIhPSdMNd7lOm/4io72luTPWH20Yda0xOuUow==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      }\n    },\n    \"node_modules/@babel/helper-validator-option\": {\n      \"version\": \"7.27.1\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/helper-validator-option/-/helper-validator-option-7.27.1.tgz\",\n      \"integrity\": \"sha512-YvjJow9FxbhFFKDSuFnVCe2WxXk1zWc22fFePVNEaWJEu8IrZVlda6N0uHwzZrUM1il7NC9Mlp4MaJYbYd9JSg==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      }\n    },\n    \"node_modules/@babel/helpers\": {\n      \"version\": \"7.27.6\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/helpers/-/helpers-7.27.6.tgz\",\n      \"integrity\": \"sha512-muE8Tt8M22638HU31A3CgfSUciwz1fhATfoVai05aPXGor//CdWDCbnlY1yvBPo07njuVOCNGCSp/GTt12lIug==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@babel/template\": \"^7.27.2\",\n        \"@babel/types\": \"^7.27.6\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      }\n    },\n    \"node_modules/@babel/parser\": {\n      \"version\": \"7.28.0\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/parser/-/parser-7.28.0.tgz\",\n      \"integrity\": \"sha512-jVZGvOxOuNSsuQuLRTh13nU0AogFlw32w/MT+LV6D3sP5WdbW61E77RnkbaO2dUvmPAYrBDJXGn5gGS6tH4j8g==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@babel/types\": \"^7.28.0\"\n      },\n      \"bin\": {\n        \"parser\": \"bin/babel-parser.js\"\n      },\n      \"engines\": {\n        \"node\": \">=6.0.0\"\n      }\n    },\n    \"node_modules/@babel/plugin-syntax-async-generators\": {\n      \"version\": \"7.8.4\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-syntax-async-generators/-/plugin-syntax-async-generators-7.8.4.tgz\",\n      \"integrity\": \"sha512-tycmZxkGfZaxhMRbXlPXuVFpdWlXpir2W4AMhSJgRKzk/eDlIXOhb2LHWoLpDF7TEHylV5zNhykX6KAgHJmTNw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@babel/helper-plugin-utils\": \"^7.8.0\"\n      },\n      \"peerDependencies\": {\n        \"@babel/core\": \"^7.0.0-0\"\n      }\n    },\n    \"node_modules/@babel/plugin-syntax-bigint\": {\n      \"version\": \"7.8.3\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-syntax-bigint/-/plugin-syntax-bigint-7.8.3.tgz\",\n      \"integrity\": \"sha512-wnTnFlG+YxQm3vDxpGE57Pj0srRU4sHE/mDkt1qv2YJJSeUAec2ma4WLUnUPeKjyrfntVwe/N6dCXpU+zL3Npg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@babel/helper-plugin-utils\": \"^7.8.0\"\n      },\n      \"peerDependencies\": {\n        \"@babel/core\": \"^7.0.0-0\"\n      }\n    },\n    \"node_modules/@babel/plugin-syntax-class-properties\": {\n      \"version\": \"7.12.13\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-syntax-class-properties/-/plugin-syntax-class-properties-7.12.13.tgz\",\n      \"integrity\": \"sha512-fm4idjKla0YahUNgFNLCB0qySdsoPiZP3iQE3rky0mBUtMZ23yDJ9SJdg6dXTSDnulOVqiF3Hgr9nbXvXTQZYA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@babel/helper-plugin-utils\": \"^7.12.13\"\n      },\n      \"peerDependencies\": {\n        \"@babel/core\": \"^7.0.0-0\"\n      }\n    },\n    \"node_modules/@babel/plugin-syntax-class-static-block\": {\n      \"version\": \"7.14.5\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-syntax-class-static-block/-/plugin-syntax-class-static-block-7.14.5.tgz\",\n      \"integrity\": \"sha512-b+YyPmr6ldyNnM6sqYeMWE+bgJcJpO6yS4QD7ymxgH34GBPNDM/THBh8iunyvKIZztiwLH4CJZ0RxTk9emgpjw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@babel/helper-plugin-utils\": \"^7.14.5\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      },\n      \"peerDependencies\": {\n        \"@babel/core\": \"^7.0.0-0\"\n      }\n    },\n    \"node_modules/@babel/plugin-syntax-import-attributes\": {\n      \"version\": \"7.27.1\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-syntax-import-attributes/-/plugin-syntax-import-attributes-7.27.1.tgz\",\n      \"integrity\": \"sha512-oFT0FrKHgF53f4vOsZGi2Hh3I35PfSmVs4IBFLFj4dnafP+hIWDLg3VyKmUHfLoLHlyxY4C7DGtmHuJgn+IGww==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@babel/helper-plugin-utils\": \"^7.27.1\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      },\n      \"peerDependencies\": {\n        \"@babel/core\": \"^7.0.0-0\"\n      }\n    },\n    \"node_modules/@babel/plugin-syntax-import-meta\": {\n      \"version\": \"7.10.4\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-syntax-import-meta/-/plugin-syntax-import-meta-7.10.4.tgz\",\n      \"integrity\": \"sha512-Yqfm+XDx0+Prh3VSeEQCPU81yC+JWZ2pDPFSS4ZdpfZhp4MkFMaDC1UqseovEKwSUpnIL7+vK+Clp7bfh0iD7g==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@babel/helper-plugin-utils\": \"^7.10.4\"\n      },\n      \"peerDependencies\": {\n        \"@babel/core\": \"^7.0.0-0\"\n      }\n    },\n    \"node_modules/@babel/plugin-syntax-json-strings\": {\n      \"version\": \"7.8.3\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-syntax-json-strings/-/plugin-syntax-json-strings-7.8.3.tgz\",\n      \"integrity\": \"sha512-lY6kdGpWHvjoe2vk4WrAapEuBR69EMxZl+RoGRhrFGNYVK8mOPAW8VfbT/ZgrFbXlDNiiaxQnAtgVCZ6jv30EA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@babel/helper-plugin-utils\": \"^7.8.0\"\n      },\n      \"peerDependencies\": {\n        \"@babel/core\": \"^7.0.0-0\"\n      }\n    },\n    \"node_modules/@babel/plugin-syntax-jsx\": {\n      \"version\": \"7.27.1\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-syntax-jsx/-/plugin-syntax-jsx-7.27.1.tgz\",\n      \"integrity\": \"sha512-y8YTNIeKoyhGd9O0Jiyzyyqk8gdjnumGTQPsz0xOZOQ2RmkVJeZ1vmmfIvFEKqucBG6axJGBZDE/7iI5suUI/w==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@babel/helper-plugin-utils\": \"^7.27.1\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      },\n      \"peerDependencies\": {\n        \"@babel/core\": \"^7.0.0-0\"\n      }\n    },\n    \"node_modules/@babel/plugin-syntax-logical-assignment-operators\": {\n      \"version\": \"7.10.4\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-syntax-logical-assignment-operators/-/plugin-syntax-logical-assignment-operators-7.10.4.tgz\",\n      \"integrity\": \"sha512-d8waShlpFDinQ5MtvGU9xDAOzKH47+FFoney2baFIoMr952hKOLp1HR7VszoZvOsV/4+RRszNY7D17ba0te0ig==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@babel/helper-plugin-utils\": \"^7.10.4\"\n      },\n      \"peerDependencies\": {\n        \"@babel/core\": \"^7.0.0-0\"\n      }\n    },\n    \"node_modules/@babel/plugin-syntax-nullish-coalescing-operator\": {\n      \"version\": \"7.8.3\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-syntax-nullish-coalescing-operator/-/plugin-syntax-nullish-coalescing-operator-7.8.3.tgz\",\n      \"integrity\": \"sha512-aSff4zPII1u2QD7y+F8oDsz19ew4IGEJg9SVW+bqwpwtfFleiQDMdzA/R+UlWDzfnHFCxxleFT0PMIrR36XLNQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@babel/helper-plugin-utils\": \"^7.8.0\"\n      },\n      \"peerDependencies\": {\n        \"@babel/core\": \"^7.0.0-0\"\n      }\n    },\n    \"node_modules/@babel/plugin-syntax-numeric-separator\": {\n      \"version\": \"7.10.4\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-syntax-numeric-separator/-/plugin-syntax-numeric-separator-7.10.4.tgz\",\n      \"integrity\": \"sha512-9H6YdfkcK/uOnY/K7/aA2xpzaAgkQn37yzWUMRK7OaPOqOpGS1+n0H5hxT9AUw9EsSjPW8SVyMJwYRtWs3X3ug==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@babel/helper-plugin-utils\": \"^7.10.4\"\n      },\n      \"peerDependencies\": {\n        \"@babel/core\": \"^7.0.0-0\"\n      }\n    },\n    \"node_modules/@babel/plugin-syntax-object-rest-spread\": {\n      \"version\": \"7.8.3\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-syntax-object-rest-spread/-/plugin-syntax-object-rest-spread-7.8.3.tgz\",\n      \"integrity\": \"sha512-XoqMijGZb9y3y2XskN+P1wUGiVwWZ5JmoDRwx5+3GmEplNyVM2s2Dg8ILFQm8rWM48orGy5YpI5Bl8U1y7ydlA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@babel/helper-plugin-utils\": \"^7.8.0\"\n      },\n      \"peerDependencies\": {\n        \"@babel/core\": \"^7.0.0-0\"\n      }\n    },\n    \"node_modules/@babel/plugin-syntax-optional-catch-binding\": {\n      \"version\": \"7.8.3\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-syntax-optional-catch-binding/-/plugin-syntax-optional-catch-binding-7.8.3.tgz\",\n      \"integrity\": \"sha512-6VPD0Pc1lpTqw0aKoeRTMiB+kWhAoT24PA+ksWSBrFtl5SIRVpZlwN3NNPQjehA2E/91FV3RjLWoVTglWcSV3Q==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@babel/helper-plugin-utils\": \"^7.8.0\"\n      },\n      \"peerDependencies\": {\n        \"@babel/core\": \"^7.0.0-0\"\n      }\n    },\n    \"node_modules/@babel/plugin-syntax-optional-chaining\": {\n      \"version\": \"7.8.3\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-syntax-optional-chaining/-/plugin-syntax-optional-chaining-7.8.3.tgz\",\n      \"integrity\": \"sha512-KoK9ErH1MBlCPxV0VANkXW2/dw4vlbGDrFgz8bmUsBGYkFRcbRwMh6cIJubdPrkxRwuGdtCk0v/wPTKbQgBjkg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@babel/helper-plugin-utils\": \"^7.8.0\"\n      },\n      \"peerDependencies\": {\n        \"@babel/core\": \"^7.0.0-0\"\n      }\n    },\n    \"node_modules/@babel/plugin-syntax-private-property-in-object\": {\n      \"version\": \"7.14.5\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-syntax-private-property-in-object/-/plugin-syntax-private-property-in-object-7.14.5.tgz\",\n      \"integrity\": \"sha512-0wVnp9dxJ72ZUJDV27ZfbSj6iHLoytYZmh3rFcxNnvsJF3ktkzLDZPy/mA17HGsaQT3/DQsWYX1f1QGWkCoVUg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@babel/helper-plugin-utils\": \"^7.14.5\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      },\n      \"peerDependencies\": {\n        \"@babel/core\": \"^7.0.0-0\"\n      }\n    },\n    \"node_modules/@babel/plugin-syntax-top-level-await\": {\n      \"version\": \"7.14.5\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-syntax-top-level-await/-/plugin-syntax-top-level-await-7.14.5.tgz\",\n      \"integrity\": \"sha512-hx++upLv5U1rgYfwe1xBQUhRmU41NEvpUvrp8jkrSCdvGSnM5/qdRMtylJ6PG5OFkBaHkbTAKTnd3/YyESRHFw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@babel/helper-plugin-utils\": \"^7.14.5\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      },\n      \"peerDependencies\": {\n        \"@babel/core\": \"^7.0.0-0\"\n      }\n    },\n    \"node_modules/@babel/plugin-syntax-typescript\": {\n      \"version\": \"7.27.1\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/plugin-syntax-typescript/-/plugin-syntax-typescript-7.27.1.tgz\",\n      \"integrity\": \"sha512-xfYCBMxveHrRMnAWl1ZlPXOZjzkN82THFvLhQhFXFt81Z5HnN+EtUkZhv/zcKpmT3fzmWZB0ywiBrbC3vogbwQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@babel/helper-plugin-utils\": \"^7.27.1\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      },\n      \"peerDependencies\": {\n        \"@babel/core\": \"^7.0.0-0\"\n      }\n    },\n    \"node_modules/@babel/runtime\": {\n      \"version\": \"7.27.6\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/runtime/-/runtime-7.27.6.tgz\",\n      \"integrity\": \"sha512-vbavdySgbTTrmFE+EsiqUTzlOr5bzlnJtUv9PynGCAKvfQqjIXbvFdumPM/GxMDfyuGMJaJAU6TO4zc1Jf1i8Q==\",\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      }\n    },\n    \"node_modules/@babel/template\": {\n      \"version\": \"7.27.2\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/template/-/template-7.27.2.tgz\",\n      \"integrity\": \"sha512-LPDZ85aEJyYSd18/DkjNh4/y1ntkE5KwUHWTiqgRxruuZL2F1yuHligVHLvcHY2vMHXttKFpJn6LwfI7cw7ODw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@babel/code-frame\": \"^7.27.1\",\n        \"@babel/parser\": \"^7.27.2\",\n        \"@babel/types\": \"^7.27.1\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      }\n    },\n    \"node_modules/@babel/traverse\": {\n      \"version\": \"7.28.0\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/traverse/-/traverse-7.28.0.tgz\",\n      \"integrity\": \"sha512-mGe7UK5wWyh0bKRfupsUchrQGqvDbZDbKJw+kcRGSmdHVYrv+ltd0pnpDTVpiTqnaBru9iEvA8pz8W46v0Amwg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@babel/code-frame\": \"^7.27.1\",\n        \"@babel/generator\": \"^7.28.0\",\n        \"@babel/helper-globals\": \"^7.28.0\",\n        \"@babel/parser\": \"^7.28.0\",\n        \"@babel/template\": \"^7.27.2\",\n        \"@babel/types\": \"^7.28.0\",\n        \"debug\": \"^4.3.1\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      }\n    },\n    \"node_modules/@babel/types\": {\n      \"version\": \"7.28.1\",\n      \"resolved\": \"https://registry.npmjs.org/@babel/types/-/types-7.28.1.tgz\",\n      \"integrity\": \"sha512-x0LvFTekgSX+83TI28Y9wYPUfzrnl2aT5+5QLnO6v7mSJYtEEevuDRN0F0uSHRk1G1IWZC43o00Y0xDDrpBGPQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@babel/helper-string-parser\": \"^7.27.1\",\n        \"@babel/helper-validator-identifier\": \"^7.27.1\"\n      },\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      }\n    },\n    \"node_modules/@bcoe/v8-coverage\": {\n      \"version\": \"0.2.3\",\n      \"resolved\": \"https://registry.npmjs.org/@bcoe/v8-coverage/-/v8-coverage-0.2.3.tgz\",\n      \"integrity\": \"sha512-0hYQ8SB4Db5zvZB4axdMHGwEaQjkZzFjQiN9LVYvIFB2nSUHW9tYpxWriPrWDASIxiaXax83REcLxuSdnGPZtw==\",\n      \"dev\": true\n    },\n    \"node_modules/@dimforge/rapier3d-compat\": {\n      \"version\": \"0.12.0\",\n      \"resolved\": \"https://registry.npmjs.org/@dimforge/rapier3d-compat/-/rapier3d-compat-0.12.0.tgz\",\n      \"integrity\": \"sha512-uekIGetywIgopfD97oDL5PfeezkFpNhwlzlaEYNOA0N6ghdsOvh/HYjSMek5Q2O1PYvRSDFcqFVJl4r4ZBwOow==\"\n    },\n    \"node_modules/@isaacs/cliui\": {\n      \"version\": \"8.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/@isaacs/cliui/-/cliui-8.0.2.tgz\",\n      \"integrity\": \"sha512-O8jcjabXaleOG9DQ0+ARXWZBTfnP4WNAqzuiJK7ll44AmxGKv/J2M4TPjxjY3znBCfvBXFzucm1twdyFybFqEA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"string-width\": \"^5.1.2\",\n        \"string-width-cjs\": \"npm:string-width@^4.2.0\",\n        \"strip-ansi\": \"^7.0.1\",\n        \"strip-ansi-cjs\": \"npm:strip-ansi@^6.0.1\",\n        \"wrap-ansi\": \"^8.1.0\",\n        \"wrap-ansi-cjs\": \"npm:wrap-ansi@^7.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=12\"\n      }\n    },\n    \"node_modules/@isaacs/cliui/node_modules/ansi-regex\": {\n      \"version\": \"6.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/ansi-regex/-/ansi-regex-6.1.0.tgz\",\n      \"integrity\": \"sha512-7HSX4QQb4CspciLpVFwyRe79O3xsIZDDLER21kERQ71oaPodF8jL725AgJMFAYbooIqolJoRLuM81SpeUkpkvA==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=12\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/chalk/ansi-regex?sponsor=1\"\n      }\n    },\n    \"node_modules/@isaacs/cliui/node_modules/ansi-styles\": {\n      \"version\": \"6.2.1\",\n      \"resolved\": \"https://registry.npmjs.org/ansi-styles/-/ansi-styles-6.2.1.tgz\",\n      \"integrity\": \"sha512-bN798gFfQX+viw3R7yrGWRqnrN2oRkEkUjjl4JNn4E8GxxbjtG3FbrEIIY3l8/hrwUwIeCZvi4QuOTP4MErVug==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=12\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/chalk/ansi-styles?sponsor=1\"\n      }\n    },\n    \"node_modules/@isaacs/cliui/node_modules/emoji-regex\": {\n      \"version\": \"9.2.2\",\n      \"resolved\": \"https://registry.npmjs.org/emoji-regex/-/emoji-regex-9.2.2.tgz\",\n      \"integrity\": \"sha512-L18DaJsXSUk2+42pv8mLs5jJT2hqFkFE4j21wOmgbUqsZ2hL72NsUU785g9RXgo3s0ZNgVl42TiHp3ZtOv/Vyg==\",\n      \"dev\": true\n    },\n    \"node_modules/@isaacs/cliui/node_modules/string-width\": {\n      \"version\": \"5.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/string-width/-/string-width-5.1.2.tgz\",\n      \"integrity\": \"sha512-HnLOCR3vjcY8beoNLtcjZ5/nxn2afmME6lhrDrebokqMap+XbeW8n9TXpPDOqdGK5qcI3oT0GKTW6wC7EMiVqA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"eastasianwidth\": \"^0.2.0\",\n        \"emoji-regex\": \"^9.2.2\",\n        \"strip-ansi\": \"^7.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">=12\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    },\n    \"node_modules/@isaacs/cliui/node_modules/strip-ansi\": {\n      \"version\": \"7.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/strip-ansi/-/strip-ansi-7.1.0.tgz\",\n      \"integrity\": \"sha512-iq6eVVI64nQQTRYq2KtEg2d2uU7LElhTJwsH4YzIHZshxlgZms/wIc4VoDQTlG/IvVIrBKG06CrZnp0qv7hkcQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"ansi-regex\": \"^6.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">=12\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/chalk/strip-ansi?sponsor=1\"\n      }\n    },\n    \"node_modules/@isaacs/cliui/node_modules/wrap-ansi\": {\n      \"version\": \"8.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/wrap-ansi/-/wrap-ansi-8.1.0.tgz\",\n      \"integrity\": \"sha512-si7QWI6zUMq56bESFvagtmzMdGOtoxfR+Sez11Mobfc7tm+VkUckk9bW2UeffTGVUbOksxmSw0AA2gs8g71NCQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"ansi-styles\": \"^6.1.0\",\n        \"string-width\": \"^5.0.1\",\n        \"strip-ansi\": \"^7.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">=12\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/chalk/wrap-ansi?sponsor=1\"\n      }\n    },\n    \"node_modules/@istanbuljs/load-nyc-config\": {\n      \"version\": \"1.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/@istanbuljs/load-nyc-config/-/load-nyc-config-1.1.0.tgz\",\n      \"integrity\": \"sha512-VjeHSlIzpv/NyD3N0YuHfXOPDIixcA1q2ZV98wsMqcYlPmv2n3Yb2lYP9XMElnaFVXg5A7YLTeLu6V84uQDjmQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"camelcase\": \"^5.3.1\",\n        \"find-up\": \"^4.1.0\",\n        \"get-package-type\": \"^0.1.0\",\n        \"js-yaml\": \"^3.13.1\",\n        \"resolve-from\": \"^5.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/@istanbuljs/schema\": {\n      \"version\": \"0.1.3\",\n      \"resolved\": \"https://registry.npmjs.org/@istanbuljs/schema/-/schema-0.1.3.tgz\",\n      \"integrity\": \"sha512-ZXRY4jNvVgSVQ8DL3LTcakaAtXwTVUxE81hslsyD2AtoXW/wVob10HkOJ1X/pAlcI7D+2YoZKg5do8G/w6RYgA==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/@jest/console\": {\n      \"version\": \"29.7.0\",\n      \"resolved\": \"https://registry.npmjs.org/@jest/console/-/console-29.7.0.tgz\",\n      \"integrity\": \"sha512-5Ni4CU7XHQi32IJ398EEP4RrB8eV09sXP2ROqD4bksHrnTree52PsxvX8tpL8LvTZ3pFzXyPbNQReSN41CAhOg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@jest/types\": \"^29.6.3\",\n        \"@types/node\": \"*\",\n        \"chalk\": \"^4.0.0\",\n        \"jest-message-util\": \"^29.7.0\",\n        \"jest-util\": \"^29.7.0\",\n        \"slash\": \"^3.0.0\"\n      },\n      \"engines\": {\n        \"node\": \"^14.15.0 || ^16.10.0 || >=18.0.0\"\n      }\n    },\n    \"node_modules/@jest/console/node_modules/chalk\": {\n      \"version\": \"4.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/chalk/-/chalk-4.1.2.tgz\",\n      \"integrity\": \"sha512-oKnbhFyRIXpUuez8iBMmyEa4nbj4IOQyuhc/wy9kY7/WVPcwIO9VA668Pu8RkO7+0G76SLROeyw9CpQ061i4mA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"ansi-styles\": \"^4.1.0\",\n        \"supports-color\": \"^7.1.0\"\n      },\n      \"engines\": {\n        \"node\": \">=10\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/chalk/chalk?sponsor=1\"\n      }\n    },\n    \"node_modules/@jest/core\": {\n      \"version\": \"29.7.0\",\n      \"resolved\": \"https://registry.npmjs.org/@jest/core/-/core-29.7.0.tgz\",\n      \"integrity\": \"sha512-n7aeXWKMnGtDA48y8TLWJPJmLmmZ642Ceo78cYWEpiD7FzDgmNDV/GCVRorPABdXLJZ/9wzzgZAlHjXjxDHGsg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@jest/console\": \"^29.7.0\",\n        \"@jest/reporters\": \"^29.7.0\",\n        \"@jest/test-result\": \"^29.7.0\",\n        \"@jest/transform\": \"^29.7.0\",\n        \"@jest/types\": \"^29.6.3\",\n        \"@types/node\": \"*\",\n        \"ansi-escapes\": \"^4.2.1\",\n        \"chalk\": \"^4.0.0\",\n        \"ci-info\": \"^3.2.0\",\n        \"exit\": \"^0.1.2\",\n        \"graceful-fs\": \"^4.2.9\",\n        \"jest-changed-files\": \"^29.7.0\",\n        \"jest-config\": \"^29.7.0\",\n        \"jest-haste-map\": \"^29.7.0\",\n        \"jest-message-util\": \"^29.7.0\",\n        \"jest-regex-util\": \"^29.6.3\",\n        \"jest-resolve\": \"^29.7.0\",\n        \"jest-resolve-dependencies\": \"^29.7.0\",\n        \"jest-runner\": \"^29.7.0\",\n        \"jest-runtime\": \"^29.7.0\",\n        \"jest-snapshot\": \"^29.7.0\",\n        \"jest-util\": \"^29.7.0\",\n        \"jest-validate\": \"^29.7.0\",\n        \"jest-watcher\": \"^29.7.0\",\n        \"micromatch\": \"^4.0.4\",\n        \"pretty-format\": \"^29.7.0\",\n        \"slash\": \"^3.0.0\",\n        \"strip-ansi\": \"^6.0.0\"\n      },\n      \"engines\": {\n        \"node\": \"^14.15.0 || ^16.10.0 || >=18.0.0\"\n      },\n      \"peerDependencies\": {\n        \"node-notifier\": \"^8.0.1 || ^9.0.0 || ^10.0.0\"\n      },\n      \"peerDependenciesMeta\": {\n        \"node-notifier\": {\n          \"optional\": true\n        }\n      }\n    },\n    \"node_modules/@jest/core/node_modules/chalk\": {\n      \"version\": \"4.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/chalk/-/chalk-4.1.2.tgz\",\n      \"integrity\": \"sha512-oKnbhFyRIXpUuez8iBMmyEa4nbj4IOQyuhc/wy9kY7/WVPcwIO9VA668Pu8RkO7+0G76SLROeyw9CpQ061i4mA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"ansi-styles\": \"^4.1.0\",\n        \"supports-color\": \"^7.1.0\"\n      },\n      \"engines\": {\n        \"node\": \">=10\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/chalk/chalk?sponsor=1\"\n      }\n    },\n    \"node_modules/@jest/core/node_modules/pretty-format\": {\n      \"version\": \"29.7.0\",\n      \"resolved\": \"https://registry.npmjs.org/pretty-format/-/pretty-format-29.7.0.tgz\",\n      \"integrity\": \"sha512-Pdlw/oPxN+aXdmM9R00JVC9WVFoCLTKJvDVLgmJ+qAffBMxsV85l/Lu7sNx4zSzPyoL2euImuEwHhOXdEgNFZQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@jest/schemas\": \"^29.6.3\",\n        \"ansi-styles\": \"^5.0.0\",\n        \"react-is\": \"^18.0.0\"\n      },\n      \"engines\": {\n        \"node\": \"^14.15.0 || ^16.10.0 || >=18.0.0\"\n      }\n    },\n    \"node_modules/@jest/core/node_modules/pretty-format/node_modules/ansi-styles\": {\n      \"version\": \"5.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/ansi-styles/-/ansi-styles-5.2.0.tgz\",\n      \"integrity\": \"sha512-Cxwpt2SfTzTtXcfOlzGEee8O+c+MmUgGrNiBcXnuWxuFJHe6a5Hz7qwhwe5OgaSYI0IJvkLqWX1ASG+cJOkEiA==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=10\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/chalk/ansi-styles?sponsor=1\"\n      }\n    },\n    \"node_modules/@jest/core/node_modules/react-is\": {\n      \"version\": \"18.3.1\",\n      \"resolved\": \"https://registry.npmjs.org/react-is/-/react-is-18.3.1.tgz\",\n      \"integrity\": \"sha512-/LLMVyas0ljjAtoYiPqYiL8VWXzUUdThrmU5+n20DZv+a+ClRoevUzw5JxU+Ieh5/c87ytoTBV9G1FiKfNJdmg==\",\n      \"dev\": true\n    },\n    \"node_modules/@jest/environment\": {\n      \"version\": \"29.7.0\",\n      \"resolved\": \"https://registry.npmjs.org/@jest/environment/-/environment-29.7.0.tgz\",\n      \"integrity\": \"sha512-aQIfHDq33ExsN4jP1NWGXhxgQ/wixs60gDiKO+XVMd8Mn0NWPWgc34ZQDTb2jKaUWQ7MuwoitXAsN2XVXNMpAw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@jest/fake-timers\": \"^29.7.0\",\n        \"@jest/types\": \"^29.6.3\",\n        \"@types/node\": \"*\",\n        \"jest-mock\": \"^29.7.0\"\n      },\n      \"engines\": {\n        \"node\": \"^14.15.0 || ^16.10.0 || >=18.0.0\"\n      }\n    },\n    \"node_modules/@jest/expect\": {\n      \"version\": \"29.7.0\",\n      \"resolved\": \"https://registry.npmjs.org/@jest/expect/-/expect-29.7.0.tgz\",\n      \"integrity\": \"sha512-8uMeAMycttpva3P1lBHB8VciS9V0XAr3GymPpipdyQXbBcuhkLQOSe8E/p92RyAdToS6ZD1tFkX+CkhoECE0dQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"expect\": \"^29.7.0\",\n        \"jest-snapshot\": \"^29.7.0\"\n      },\n      \"engines\": {\n        \"node\": \"^14.15.0 || ^16.10.0 || >=18.0.0\"\n      }\n    },\n    \"node_modules/@jest/expect-utils\": {\n      \"version\": \"29.7.0\",\n      \"resolved\": \"https://registry.npmjs.org/@jest/expect-utils/-/expect-utils-29.7.0.tgz\",\n      \"integrity\": \"sha512-GlsNBWiFQFCVi9QVSx7f5AgMeLxe9YCCs5PuP2O2LdjDAA8Jh9eX7lA1Jq/xdXw3Wb3hyvlFNfZIfcRetSzYcA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"jest-get-type\": \"^29.6.3\"\n      },\n      \"engines\": {\n        \"node\": \"^14.15.0 || ^16.10.0 || >=18.0.0\"\n      }\n    },\n    \"node_modules/@jest/fake-timers\": {\n      \"version\": \"29.7.0\",\n      \"resolved\": \"https://registry.npmjs.org/@jest/fake-timers/-/fake-timers-29.7.0.tgz\",\n      \"integrity\": \"sha512-q4DH1Ha4TTFPdxLsqDXK1d3+ioSL7yL5oCMJZgDYm6i+6CygW5E5xVr/D1HdsGxjt1ZWSfUAs9OxSB/BNelWrQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@jest/types\": \"^29.6.3\",\n        \"@sinonjs/fake-timers\": \"^10.0.2\",\n        \"@types/node\": \"*\",\n        \"jest-message-util\": \"^29.7.0\",\n        \"jest-mock\": \"^29.7.0\",\n        \"jest-util\": \"^29.7.0\"\n      },\n      \"engines\": {\n        \"node\": \"^14.15.0 || ^16.10.0 || >=18.0.0\"\n      }\n    },\n    \"node_modules/@jest/globals\": {\n      \"version\": \"29.7.0\",\n      \"resolved\": \"https://registry.npmjs.org/@jest/globals/-/globals-29.7.0.tgz\",\n      \"integrity\": \"sha512-mpiz3dutLbkW2MNFubUGUEVLkTGiqW6yLVTA+JbP6fI6J5iL9Y0Nlg8k95pcF8ctKwCS7WVxteBs29hhfAotzQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@jest/environment\": \"^29.7.0\",\n        \"@jest/expect\": \"^29.7.0\",\n        \"@jest/types\": \"^29.6.3\",\n        \"jest-mock\": \"^29.7.0\"\n      },\n      \"engines\": {\n        \"node\": \"^14.15.0 || ^16.10.0 || >=18.0.0\"\n      }\n    },\n    \"node_modules/@jest/reporters\": {\n      \"version\": \"29.7.0\",\n      \"resolved\": \"https://registry.npmjs.org/@jest/reporters/-/reporters-29.7.0.tgz\",\n      \"integrity\": \"sha512-DApq0KJbJOEzAFYjHADNNxAE3KbhxQB1y5Kplb5Waqw6zVbuWatSnMjE5gs8FUgEPmNsnZA3NCWl9NG0ia04Pg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@bcoe/v8-coverage\": \"^0.2.3\",\n        \"@jest/console\": \"^29.7.0\",\n        \"@jest/test-result\": \"^29.7.0\",\n        \"@jest/transform\": \"^29.7.0\",\n        \"@jest/types\": \"^29.6.3\",\n        \"@jridgewell/trace-mapping\": \"^0.3.18\",\n        \"@types/node\": \"*\",\n        \"chalk\": \"^4.0.0\",\n        \"collect-v8-coverage\": \"^1.0.0\",\n        \"exit\": \"^0.1.2\",\n        \"glob\": \"^7.1.3\",\n        \"graceful-fs\": \"^4.2.9\",\n        \"istanbul-lib-coverage\": \"^3.0.0\",\n        \"istanbul-lib-instrument\": \"^6.0.0\",\n        \"istanbul-lib-report\": \"^3.0.0\",\n        \"istanbul-lib-source-maps\": \"^4.0.0\",\n        \"istanbul-reports\": \"^3.1.3\",\n        \"jest-message-util\": \"^29.7.0\",\n        \"jest-util\": \"^29.7.0\",\n        \"jest-worker\": \"^29.7.0\",\n        \"slash\": \"^3.0.0\",\n        \"string-length\": \"^4.0.1\",\n        \"strip-ansi\": \"^6.0.0\",\n        \"v8-to-istanbul\": \"^9.0.1\"\n      },\n      \"engines\": {\n        \"node\": \"^14.15.0 || ^16.10.0 || >=18.0.0\"\n      },\n      \"peerDependencies\": {\n        \"node-notifier\": \"^8.0.1 || ^9.0.0 || ^10.0.0\"\n      },\n      \"peerDependenciesMeta\": {\n        \"node-notifier\": {\n          \"optional\": true\n        }\n      }\n    },\n    \"node_modules/@jest/reporters/node_modules/chalk\": {\n      \"version\": \"4.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/chalk/-/chalk-4.1.2.tgz\",\n      \"integrity\": \"sha512-oKnbhFyRIXpUuez8iBMmyEa4nbj4IOQyuhc/wy9kY7/WVPcwIO9VA668Pu8RkO7+0G76SLROeyw9CpQ061i4mA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"ansi-styles\": \"^4.1.0\",\n        \"supports-color\": \"^7.1.0\"\n      },\n      \"engines\": {\n        \"node\": \">=10\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/chalk/chalk?sponsor=1\"\n      }\n    },\n    \"node_modules/@jest/schemas\": {\n      \"version\": \"29.6.3\",\n      \"resolved\": \"https://registry.npmjs.org/@jest/schemas/-/schemas-29.6.3.tgz\",\n      \"integrity\": \"sha512-mo5j5X+jIZmJQveBKeS/clAueipV7KgiX1vMgCxam1RNYiqE1w62n0/tJJnHtjW8ZHcQco5gY85jA3mi0L+nSA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@sinclair/typebox\": \"^0.27.8\"\n      },\n      \"engines\": {\n        \"node\": \"^14.15.0 || ^16.10.0 || >=18.0.0\"\n      }\n    },\n    \"node_modules/@jest/source-map\": {\n      \"version\": \"29.6.3\",\n      \"resolved\": \"https://registry.npmjs.org/@jest/source-map/-/source-map-29.6.3.tgz\",\n      \"integrity\": \"sha512-MHjT95QuipcPrpLM+8JMSzFx6eHp5Bm+4XeFDJlwsvVBjmKNiIAvasGK2fxz2WbGRlnvqehFbh07MMa7n3YJnw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@jridgewell/trace-mapping\": \"^0.3.18\",\n        \"callsites\": \"^3.0.0\",\n        \"graceful-fs\": \"^4.2.9\"\n      },\n      \"engines\": {\n        \"node\": \"^14.15.0 || ^16.10.0 || >=18.0.0\"\n      }\n    },\n    \"node_modules/@jest/test-result\": {\n      \"version\": \"29.7.0\",\n      \"resolved\": \"https://registry.npmjs.org/@jest/test-result/-/test-result-29.7.0.tgz\",\n      \"integrity\": \"sha512-Fdx+tv6x1zlkJPcWXmMDAG2HBnaR9XPSd5aDWQVsfrZmLVT3lU1cwyxLgRmXR9yrq4NBoEm9BMsfgFzTQAbJYA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@jest/console\": \"^29.7.0\",\n        \"@jest/types\": \"^29.6.3\",\n        \"@types/istanbul-lib-coverage\": \"^2.0.0\",\n        \"collect-v8-coverage\": \"^1.0.0\"\n      },\n      \"engines\": {\n        \"node\": \"^14.15.0 || ^16.10.0 || >=18.0.0\"\n      }\n    },\n    \"node_modules/@jest/test-sequencer\": {\n      \"version\": \"29.7.0\",\n      \"resolved\": \"https://registry.npmjs.org/@jest/test-sequencer/-/test-sequencer-29.7.0.tgz\",\n      \"integrity\": \"sha512-GQwJ5WZVrKnOJuiYiAF52UNUJXgTZx1NHjFSEB0qEMmSZKAkdMoIzw/Cj6x6NF4AvV23AUqDpFzQkN/eYCYTxw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@jest/test-result\": \"^29.7.0\",\n        \"graceful-fs\": \"^4.2.9\",\n        \"jest-haste-map\": \"^29.7.0\",\n        \"slash\": \"^3.0.0\"\n      },\n      \"engines\": {\n        \"node\": \"^14.15.0 || ^16.10.0 || >=18.0.0\"\n      }\n    },\n    \"node_modules/@jest/transform\": {\n      \"version\": \"29.7.0\",\n      \"resolved\": \"https://registry.npmjs.org/@jest/transform/-/transform-29.7.0.tgz\",\n      \"integrity\": \"sha512-ok/BTPFzFKVMwO5eOHRrvnBVHdRy9IrsrW1GpMaQ9MCnilNLXQKmAX8s1YXDFaai9xJpac2ySzV0YeRRECr2Vw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@babel/core\": \"^7.11.6\",\n        \"@jest/types\": \"^29.6.3\",\n        \"@jridgewell/trace-mapping\": \"^0.3.18\",\n        \"babel-plugin-istanbul\": \"^6.1.1\",\n        \"chalk\": \"^4.0.0\",\n        \"convert-source-map\": \"^2.0.0\",\n        \"fast-json-stable-stringify\": \"^2.1.0\",\n        \"graceful-fs\": \"^4.2.9\",\n        \"jest-haste-map\": \"^29.7.0\",\n        \"jest-regex-util\": \"^29.6.3\",\n        \"jest-util\": \"^29.7.0\",\n        \"micromatch\": \"^4.0.4\",\n        \"pirates\": \"^4.0.4\",\n        \"slash\": \"^3.0.0\",\n        \"write-file-atomic\": \"^4.0.2\"\n      },\n      \"engines\": {\n        \"node\": \"^14.15.0 || ^16.10.0 || >=18.0.0\"\n      }\n    },\n    \"node_modules/@jest/transform/node_modules/chalk\": {\n      \"version\": \"4.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/chalk/-/chalk-4.1.2.tgz\",\n      \"integrity\": \"sha512-oKnbhFyRIXpUuez8iBMmyEa4nbj4IOQyuhc/wy9kY7/WVPcwIO9VA668Pu8RkO7+0G76SLROeyw9CpQ061i4mA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"ansi-styles\": \"^4.1.0\",\n        \"supports-color\": \"^7.1.0\"\n      },\n      \"engines\": {\n        \"node\": \">=10\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/chalk/chalk?sponsor=1\"\n      }\n    },\n    \"node_modules/@jest/types\": {\n      \"version\": \"29.6.3\",\n      \"resolved\": \"https://registry.npmjs.org/@jest/types/-/types-29.6.3.tgz\",\n      \"integrity\": \"sha512-u3UPsIilWKOM3F9CXtrG8LEJmNxwoCQC/XVj4IKYXvvpx7QIi/Kg1LI5uDmDpKlac62NUtX7eLjRh+jVZcLOzw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@jest/schemas\": \"^29.6.3\",\n        \"@types/istanbul-lib-coverage\": \"^2.0.0\",\n        \"@types/istanbul-reports\": \"^3.0.0\",\n        \"@types/node\": \"*\",\n        \"@types/yargs\": \"^17.0.8\",\n        \"chalk\": \"^4.0.0\"\n      },\n      \"engines\": {\n        \"node\": \"^14.15.0 || ^16.10.0 || >=18.0.0\"\n      }\n    },\n    \"node_modules/@jest/types/node_modules/chalk\": {\n      \"version\": \"4.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/chalk/-/chalk-4.1.2.tgz\",\n      \"integrity\": \"sha512-oKnbhFyRIXpUuez8iBMmyEa4nbj4IOQyuhc/wy9kY7/WVPcwIO9VA668Pu8RkO7+0G76SLROeyw9CpQ061i4mA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"ansi-styles\": \"^4.1.0\",\n        \"supports-color\": \"^7.1.0\"\n      },\n      \"engines\": {\n        \"node\": \">=10\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/chalk/chalk?sponsor=1\"\n      }\n    },\n    \"node_modules/@jridgewell/gen-mapping\": {\n      \"version\": \"0.3.12\",\n      \"resolved\": \"https://registry.npmjs.org/@jridgewell/gen-mapping/-/gen-mapping-0.3.12.tgz\",\n      \"integrity\": \"sha512-OuLGC46TjB5BbN1dH8JULVVZY4WTdkF7tV9Ys6wLL1rubZnCMstOhNHueU5bLCrnRuDhKPDM4g6sw4Bel5Gzqg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@jridgewell/sourcemap-codec\": \"^1.5.0\",\n        \"@jridgewell/trace-mapping\": \"^0.3.24\"\n      }\n    },\n    \"node_modules/@jridgewell/resolve-uri\": {\n      \"version\": \"3.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/@jridgewell/resolve-uri/-/resolve-uri-3.1.2.tgz\",\n      \"integrity\": \"sha512-bRISgCIjP20/tbWSPWMEi54QVPRZExkuD9lJL+UIxUKtwVJA8wW1Trb1jMs1RFXo1CBTNZ/5hpC9QvmKWdopKw==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=6.0.0\"\n      }\n    },\n    \"node_modules/@jridgewell/sourcemap-codec\": {\n      \"version\": \"1.5.4\",\n      \"resolved\": \"https://registry.npmjs.org/@jridgewell/sourcemap-codec/-/sourcemap-codec-1.5.4.tgz\",\n      \"integrity\": \"sha512-VT2+G1VQs/9oz078bLrYbecdZKs912zQlkelYpuf+SXF+QvZDYJlbx/LSx+meSAwdDFnF8FVXW92AVjjkVmgFw==\",\n      \"dev\": true\n    },\n    \"node_modules/@jridgewell/trace-mapping\": {\n      \"version\": \"0.3.29\",\n      \"resolved\": \"https://registry.npmjs.org/@jridgewell/trace-mapping/-/trace-mapping-0.3.29.tgz\",\n      \"integrity\": \"sha512-uw6guiW/gcAGPDhLmd77/6lW8QLeiV5RUTsAX46Db6oLhGaVj4lhnPwb184s1bkc8kdVg/+h988dro8GRDpmYQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@jridgewell/resolve-uri\": \"^3.1.0\",\n        \"@jridgewell/sourcemap-codec\": \"^1.4.14\"\n      }\n    },\n    \"node_modules/@mediapipe/tasks-vision\": {\n      \"version\": \"0.10.17\",\n      \"resolved\": \"https://registry.npmjs.org/@mediapipe/tasks-vision/-/tasks-vision-0.10.17.tgz\",\n      \"integrity\": \"sha512-CZWV/q6TTe8ta61cZXjfnnHsfWIdFhms03M9T7Cnd5y2mdpylJM0rF1qRq+wsQVRMLz1OYPVEBU9ph2Bx8cxrg==\"\n    },\n    \"node_modules/@monogrid/gainmap-js\": {\n      \"version\": \"3.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/@monogrid/gainmap-js/-/gainmap-js-3.1.0.tgz\",\n      \"integrity\": \"sha512-Obb0/gEd/HReTlg8ttaYk+0m62gQJmCblMOjHSMHRrBP2zdfKMHLCRbh/6ex9fSUJMKdjjIEiohwkbGD3wj2Nw==\",\n      \"dependencies\": {\n        \"promise-worker-transferable\": \"^1.0.4\"\n      },\n      \"peerDependencies\": {\n        \"three\": \">= 0.159.0\"\n      }\n    },\n    \"node_modules/@nodelib/fs.scandir\": {\n      \"version\": \"2.1.5\",\n      \"resolved\": \"https://registry.npmjs.org/@nodelib/fs.scandir/-/fs.scandir-2.1.5.tgz\",\n      \"integrity\": \"sha512-vq24Bq3ym5HEQm2NKCr3yXDwjc7vTsEThRDnkp2DK9p1uqLR+DHurm/NOTo0KG7HYHU7eppKZj3MyqYuMBf62g==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@nodelib/fs.stat\": \"2.0.5\",\n        \"run-parallel\": \"^1.1.9\"\n      },\n      \"engines\": {\n        \"node\": \">= 8\"\n      }\n    },\n    \"node_modules/@nodelib/fs.stat\": {\n      \"version\": \"2.0.5\",\n      \"resolved\": \"https://registry.npmjs.org/@nodelib/fs.stat/-/fs.stat-2.0.5.tgz\",\n      \"integrity\": \"sha512-RkhPPp2zrqDAQA/2jNhnztcPAlv64XdhIp7a7454A5ovI7Bukxgt7MX7udwAu3zg1DcpPU0rz3VV1SeaqvY4+A==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">= 8\"\n      }\n    },\n    \"node_modules/@nodelib/fs.walk\": {\n      \"version\": \"1.2.8\",\n      \"resolved\": \"https://registry.npmjs.org/@nodelib/fs.walk/-/fs.walk-1.2.8.tgz\",\n      \"integrity\": \"sha512-oGB+UxlgWcgQkgwo8GcEGwemoTFt3FIO9ababBmaGwXIoBKZ+GTy0pP185beGg7Llih/NSHSV2XAs1lnznocSg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@nodelib/fs.scandir\": \"2.1.5\",\n        \"fastq\": \"^1.6.0\"\n      },\n      \"engines\": {\n        \"node\": \">= 8\"\n      }\n    },\n    \"node_modules/@pkgjs/parseargs\": {\n      \"version\": \"0.11.0\",\n      \"resolved\": \"https://registry.npmjs.org/@pkgjs/parseargs/-/parseargs-0.11.0.tgz\",\n      \"integrity\": \"sha512-+1VkjdD0QBLPodGrJUeqarH8VAIvQODIbwh9XpP5Syisf7YoQgsJKPNFoqqLQlu+VQ/tVSshMR6loPMn8U+dPg==\",\n      \"dev\": true,\n      \"optional\": true,\n      \"engines\": {\n        \"node\": \">=14\"\n      }\n    },\n    \"node_modules/@react-spring/animated\": {\n      \"version\": \"9.7.5\",\n      \"resolved\": \"https://registry.npmjs.org/@react-spring/animated/-/animated-9.7.5.tgz\",\n      \"integrity\": \"sha512-Tqrwz7pIlsSDITzxoLS3n/v/YCUHQdOIKtOJf4yL6kYVSDTSmVK1LI1Q3M/uu2Sx4X3pIWF3xLUhlsA6SPNTNg==\",\n      \"dependencies\": {\n        \"@react-spring/shared\": \"~9.7.5\",\n        \"@react-spring/types\": \"~9.7.5\"\n      },\n      \"peerDependencies\": {\n        \"react\": \"^16.8.0 || ^17.0.0 || ^18.0.0\"\n      }\n    },\n    \"node_modules/@react-spring/core\": {\n      \"version\": \"9.7.5\",\n      \"resolved\": \"https://registry.npmjs.org/@react-spring/core/-/core-9.7.5.tgz\",\n      \"integrity\": \"sha512-rmEqcxRcu7dWh7MnCcMXLvrf6/SDlSokLaLTxiPlAYi11nN3B5oiCUAblO72o+9z/87j2uzxa2Inm8UbLjXA+w==\",\n      \"dependencies\": {\n        \"@react-spring/animated\": \"~9.7.5\",\n        \"@react-spring/shared\": \"~9.7.5\",\n        \"@react-spring/types\": \"~9.7.5\"\n      },\n      \"funding\": {\n        \"type\": \"opencollective\",\n        \"url\": \"https://opencollective.com/react-spring/donate\"\n      },\n      \"peerDependencies\": {\n        \"react\": \"^16.8.0 || ^17.0.0 || ^18.0.0\"\n      }\n    },\n    \"node_modules/@react-spring/rafz\": {\n      \"version\": \"9.7.5\",\n      \"resolved\": \"https://registry.npmjs.org/@react-spring/rafz/-/rafz-9.7.5.tgz\",\n      \"integrity\": \"sha512-5ZenDQMC48wjUzPAm1EtwQ5Ot3bLIAwwqP2w2owG5KoNdNHpEJV263nGhCeKKmuA3vG2zLLOdu3or6kuDjA6Aw==\"\n    },\n    \"node_modules/@react-spring/shared\": {\n      \"version\": \"9.7.5\",\n      \"resolved\": \"https://registry.npmjs.org/@react-spring/shared/-/shared-9.7.5.tgz\",\n      \"integrity\": \"sha512-wdtoJrhUeeyD/PP/zo+np2s1Z820Ohr/BbuVYv+3dVLW7WctoiN7std8rISoYoHpUXtbkpesSKuPIw/6U1w1Pw==\",\n      \"dependencies\": {\n        \"@react-spring/rafz\": \"~9.7.5\",\n        \"@react-spring/types\": \"~9.7.5\"\n      },\n      \"peerDependencies\": {\n        \"react\": \"^16.8.0 || ^17.0.0 || ^18.0.0\"\n      }\n    },\n    \"node_modules/@react-spring/three\": {\n      \"version\": \"9.7.5\",\n      \"resolved\": \"https://registry.npmjs.org/@react-spring/three/-/three-9.7.5.tgz\",\n      \"integrity\": \"sha512-RxIsCoQfUqOS3POmhVHa1wdWS0wyHAUway73uRLp3GAL5U2iYVNdnzQsep6M2NZ994BlW8TcKuMtQHUqOsy6WA==\",\n      \"dependencies\": {\n        \"@react-spring/animated\": \"~9.7.5\",\n        \"@react-spring/core\": \"~9.7.5\",\n        \"@react-spring/shared\": \"~9.7.5\",\n        \"@react-spring/types\": \"~9.7.5\"\n      },\n      \"peerDependencies\": {\n        \"@react-three/fiber\": \">=6.0\",\n        \"react\": \"^16.8.0 || ^17.0.0 || ^18.0.0\",\n        \"three\": \">=0.126\"\n      }\n    },\n    \"node_modules/@react-spring/types\": {\n      \"version\": \"9.7.5\",\n      \"resolved\": \"https://registry.npmjs.org/@react-spring/types/-/types-9.7.5.tgz\",\n      \"integrity\": \"sha512-HVj7LrZ4ReHWBimBvu2SKND3cDVUPWKLqRTmWe/fNY6o1owGOX0cAHbdPDTMelgBlVbrTKrre6lFkhqGZErK/g==\"\n    },\n    \"node_modules/@react-three/drei\": {\n      \"version\": \"9.122.0\",\n      \"resolved\": \"https://registry.npmjs.org/@react-three/drei/-/drei-9.122.0.tgz\",\n      \"integrity\": \"sha512-SEO/F/rBCTjlLez7WAlpys+iGe9hty4rNgjZvgkQeXFSiwqD4Hbk/wNHMAbdd8vprO2Aj81mihv4dF5bC7D0CA==\",\n      \"dependencies\": {\n        \"@babel/runtime\": \"^7.26.0\",\n        \"@mediapipe/tasks-vision\": \"0.10.17\",\n        \"@monogrid/gainmap-js\": \"^3.0.6\",\n        \"@react-spring/three\": \"~9.7.5\",\n        \"@use-gesture/react\": \"^10.3.1\",\n        \"camera-controls\": \"^2.9.0\",\n        \"cross-env\": \"^7.0.3\",\n        \"detect-gpu\": \"^5.0.56\",\n        \"glsl-noise\": \"^0.0.0\",\n        \"hls.js\": \"^1.5.17\",\n        \"maath\": \"^0.10.8\",\n        \"meshline\": \"^3.3.1\",\n        \"react-composer\": \"^5.0.3\",\n        \"stats-gl\": \"^2.2.8\",\n        \"stats.js\": \"^0.17.0\",\n        \"suspend-react\": \"^0.1.3\",\n        \"three-mesh-bvh\": \"^0.7.8\",\n        \"three-stdlib\": \"^2.35.6\",\n        \"troika-three-text\": \"^0.52.0\",\n        \"tunnel-rat\": \"^0.1.2\",\n        \"utility-types\": \"^3.11.0\",\n        \"zustand\": \"^5.0.1\"\n      },\n      \"peerDependencies\": {\n        \"@react-three/fiber\": \"^8\",\n        \"react\": \"^18\",\n        \"react-dom\": \"^18\",\n        \"three\": \">=0.137\"\n      },\n      \"peerDependenciesMeta\": {\n        \"react-dom\": {\n          \"optional\": true\n        }\n      }\n    },\n    \"node_modules/@react-three/fiber\": {\n      \"version\": \"8.18.0\",\n      \"resolved\": \"https://registry.npmjs.org/@react-three/fiber/-/fiber-8.18.0.tgz\",\n      \"integrity\": \"sha512-FYZZqD0UUHUswKz3LQl2Z7H24AhD14XGTsIRw3SJaXUxyfVMi+1yiZGmqTcPt/CkPpdU7rrxqcyQ1zJE5DjvIQ==\",\n      \"dependencies\": {\n        \"@babel/runtime\": \"^7.17.8\",\n        \"@types/react-reconciler\": \"^0.26.7\",\n        \"@types/webxr\": \"*\",\n        \"base64-js\": \"^1.5.1\",\n        \"buffer\": \"^6.0.3\",\n        \"its-fine\": \"^1.0.6\",\n        \"react-reconciler\": \"^0.27.0\",\n        \"react-use-measure\": \"^2.1.7\",\n        \"scheduler\": \"^0.21.0\",\n        \"suspend-react\": \"^0.1.3\",\n        \"zustand\": \"^3.7.1\"\n      },\n      \"peerDependencies\": {\n        \"expo\": \">=43.0\",\n        \"expo-asset\": \">=8.4\",\n        \"expo-file-system\": \">=11.0\",\n        \"expo-gl\": \">=11.0\",\n        \"react\": \">=18 <19\",\n        \"react-dom\": \">=18 <19\",\n        \"react-native\": \">=0.64\",\n        \"three\": \">=0.133\"\n      },\n      \"peerDependenciesMeta\": {\n        \"expo\": {\n          \"optional\": true\n        },\n        \"expo-asset\": {\n          \"optional\": true\n        },\n        \"expo-file-system\": {\n          \"optional\": true\n        },\n        \"expo-gl\": {\n          \"optional\": true\n        },\n        \"react-dom\": {\n          \"optional\": true\n        },\n        \"react-native\": {\n          \"optional\": true\n        }\n      }\n    },\n    \"node_modules/@react-three/fiber/node_modules/zustand\": {\n      \"version\": \"3.7.2\",\n      \"resolved\": \"https://registry.npmjs.org/zustand/-/zustand-3.7.2.tgz\",\n      \"integrity\": \"sha512-PIJDIZKtokhof+9+60cpockVOq05sJzHCriyvaLBmEJixseQ1a5Kdov6fWZfWOu5SK9c+FhH1jU0tntLxRJYMA==\",\n      \"engines\": {\n        \"node\": \">=12.7.0\"\n      },\n      \"peerDependencies\": {\n        \"react\": \">=16.8\"\n      },\n      \"peerDependenciesMeta\": {\n        \"react\": {\n          \"optional\": true\n        }\n      }\n    },\n    \"node_modules/@sinclair/typebox\": {\n      \"version\": \"0.27.8\",\n      \"resolved\": \"https://registry.npmjs.org/@sinclair/typebox/-/typebox-0.27.8.tgz\",\n      \"integrity\": \"sha512-+Fj43pSMwJs4KRrH/938Uf+uAELIgVBmQzg/q1YG10djyfA3TnrU8N8XzqCh/okZdszqBQTZf96idMfE5lnwTA==\",\n      \"dev\": true\n    },\n    \"node_modules/@sinonjs/commons\": {\n      \"version\": \"3.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/@sinonjs/commons/-/commons-3.0.1.tgz\",\n      \"integrity\": \"sha512-K3mCHKQ9sVh8o1C9cxkwxaOmXoAMlDxC1mYyHrjqOWEcBjYr76t96zL2zlj5dUGZ3HSw240X1qgH3Mjf1yJWpQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"type-detect\": \"4.0.8\"\n      }\n    },\n    \"node_modules/@sinonjs/fake-timers\": {\n      \"version\": \"10.3.0\",\n      \"resolved\": \"https://registry.npmjs.org/@sinonjs/fake-timers/-/fake-timers-10.3.0.tgz\",\n      \"integrity\": \"sha512-V4BG07kuYSUkTCSBHG8G8TNhM+F19jXFWnQtzj+we8DrkpSBCee9Z3Ms8yiGer/dlmhe35/Xdgyo3/0rQKg7YA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@sinonjs/commons\": \"^3.0.0\"\n      }\n    },\n    \"node_modules/@testing-library/dom\": {\n      \"version\": \"9.3.4\",\n      \"resolved\": \"https://registry.npmjs.org/@testing-library/dom/-/dom-9.3.4.tgz\",\n      \"integrity\": \"sha512-FlS4ZWlp97iiNWig0Muq8p+3rVDjRiYE+YKGbAqXOu9nwJFFOdL00kFpz42M+4huzYi86vAK1sOOfyOG45muIQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@babel/code-frame\": \"^7.10.4\",\n        \"@babel/runtime\": \"^7.12.5\",\n        \"@types/aria-query\": \"^5.0.1\",\n        \"aria-query\": \"5.1.3\",\n        \"chalk\": \"^4.1.0\",\n        \"dom-accessibility-api\": \"^0.5.9\",\n        \"lz-string\": \"^1.5.0\",\n        \"pretty-format\": \"^27.0.2\"\n      },\n      \"engines\": {\n        \"node\": \">=14\"\n      }\n    },\n    \"node_modules/@testing-library/dom/node_modules/aria-query\": {\n      \"version\": \"5.1.3\",\n      \"resolved\": \"https://registry.npmjs.org/aria-query/-/aria-query-5.1.3.tgz\",\n      \"integrity\": \"sha512-R5iJ5lkuHybztUfuOAznmboyjWq8O6sqNqtK7CLOqdydi54VNbORp49mb14KbWgG1QD3JFO9hJdZ+y4KutfdOQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"deep-equal\": \"^2.0.5\"\n      }\n    },\n    \"node_modules/@testing-library/dom/node_modules/chalk\": {\n      \"version\": \"4.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/chalk/-/chalk-4.1.2.tgz\",\n      \"integrity\": \"sha512-oKnbhFyRIXpUuez8iBMmyEa4nbj4IOQyuhc/wy9kY7/WVPcwIO9VA668Pu8RkO7+0G76SLROeyw9CpQ061i4mA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"ansi-styles\": \"^4.1.0\",\n        \"supports-color\": \"^7.1.0\"\n      },\n      \"engines\": {\n        \"node\": \">=10\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/chalk/chalk?sponsor=1\"\n      }\n    },\n    \"node_modules/@testing-library/dom/node_modules/dom-accessibility-api\": {\n      \"version\": \"0.5.16\",\n      \"resolved\": \"https://registry.npmjs.org/dom-accessibility-api/-/dom-accessibility-api-0.5.16.tgz\",\n      \"integrity\": \"sha512-X7BJ2yElsnOJ30pZF4uIIDfBEVgF4XEBxL9Bxhy6dnrm5hkzqmsWHGTiHqRiITNhMyFLyAiWndIJP7Z1NTteDg==\",\n      \"dev\": true\n    },\n    \"node_modules/@testing-library/jest-dom\": {\n      \"version\": \"6.6.3\",\n      \"resolved\": \"https://registry.npmjs.org/@testing-library/jest-dom/-/jest-dom-6.6.3.tgz\",\n      \"integrity\": \"sha512-IteBhl4XqYNkM54f4ejhLRJiZNqcSCoXUOG2CPK7qbD322KjQozM4kHQOfkG2oln9b9HTYqs+Sae8vBATubxxA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@adobe/css-tools\": \"^4.4.0\",\n        \"aria-query\": \"^5.0.0\",\n        \"chalk\": \"^3.0.0\",\n        \"css.escape\": \"^1.5.1\",\n        \"dom-accessibility-api\": \"^0.6.3\",\n        \"lodash\": \"^4.17.21\",\n        \"redent\": \"^3.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=14\",\n        \"npm\": \">=6\",\n        \"yarn\": \">=1\"\n      }\n    },\n    \"node_modules/@testing-library/react\": {\n      \"version\": \"14.3.1\",\n      \"resolved\": \"https://registry.npmjs.org/@testing-library/react/-/react-14.3.1.tgz\",\n      \"integrity\": \"sha512-H99XjUhWQw0lTgyMN05W3xQG1Nh4lq574D8keFf1dDoNTJgp66VbJozRaczoF+wsiaPJNt/TcnfpLGufGxSrZQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@babel/runtime\": \"^7.12.5\",\n        \"@testing-library/dom\": \"^9.0.0\",\n        \"@types/react-dom\": \"^18.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=14\"\n      },\n      \"peerDependencies\": {\n        \"react\": \"^18.0.0\",\n        \"react-dom\": \"^18.0.0\"\n      }\n    },\n    \"node_modules/@tweenjs/tween.js\": {\n      \"version\": \"23.1.3\",\n      \"resolved\": \"https://registry.npmjs.org/@tweenjs/tween.js/-/tween.js-23.1.3.tgz\",\n      \"integrity\": \"sha512-vJmvvwFxYuGnF2axRtPYocag6Clbb5YS7kLL+SO/TeVFzHqDIWrNKYtcsPMibjDx9O+bu+psAy9NKfWklassUA==\"\n    },\n    \"node_modules/@types/aria-query\": {\n      \"version\": \"5.0.4\",\n      \"resolved\": \"https://registry.npmjs.org/@types/aria-query/-/aria-query-5.0.4.tgz\",\n      \"integrity\": \"sha512-rfT93uj5s0PRL7EzccGMs3brplhcrghnDoV26NqKhCAS1hVo+WdNsPvE/yb6ilfr5hi2MEk6d5EWJTKdxg8jVw==\",\n      \"dev\": true\n    },\n    \"node_modules/@types/babel__core\": {\n      \"version\": \"7.20.5\",\n      \"resolved\": \"https://registry.npmjs.org/@types/babel__core/-/babel__core-7.20.5.tgz\",\n      \"integrity\": \"sha512-qoQprZvz5wQFJwMDqeseRXWv3rqMvhgpbXFfVyWhbx9X47POIA6i/+dXefEmZKoAgOaTdaIgNSMqMIU61yRyzA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@babel/parser\": \"^7.20.7\",\n        \"@babel/types\": \"^7.20.7\",\n        \"@types/babel__generator\": \"*\",\n        \"@types/babel__template\": \"*\",\n        \"@types/babel__traverse\": \"*\"\n      }\n    },\n    \"node_modules/@types/babel__generator\": {\n      \"version\": \"7.27.0\",\n      \"resolved\": \"https://registry.npmjs.org/@types/babel__generator/-/babel__generator-7.27.0.tgz\",\n      \"integrity\": \"sha512-ufFd2Xi92OAVPYsy+P4n7/U7e68fex0+Ee8gSG9KX7eo084CWiQ4sdxktvdl0bOPupXtVJPY19zk6EwWqUQ8lg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@babel/types\": \"^7.0.0\"\n      }\n    },\n    \"node_modules/@types/babel__template\": {\n      \"version\": \"7.4.4\",\n      \"resolved\": \"https://registry.npmjs.org/@types/babel__template/-/babel__template-7.4.4.tgz\",\n      \"integrity\": \"sha512-h/NUaSyG5EyxBIp8YRxo4RMe2/qQgvyowRwVMzhYhBCONbW8PUsg4lkFMrhgZhUe5z3L3MiLDuvyJ/CaPa2A8A==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@babel/parser\": \"^7.1.0\",\n        \"@babel/types\": \"^7.0.0\"\n      }\n    },\n    \"node_modules/@types/babel__traverse\": {\n      \"version\": \"7.20.7\",\n      \"resolved\": \"https://registry.npmjs.org/@types/babel__traverse/-/babel__traverse-7.20.7.tgz\",\n      \"integrity\": \"sha512-dkO5fhS7+/oos4ciWxyEyjWe48zmG6wbCheo/G2ZnHx4fs3EU6YC6UM8rk56gAjNJ9P3MTH2jo5jb92/K6wbng==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@babel/types\": \"^7.20.7\"\n      }\n    },\n    \"node_modules/@types/draco3d\": {\n      \"version\": \"1.4.10\",\n      \"resolved\": \"https://registry.npmjs.org/@types/draco3d/-/draco3d-1.4.10.tgz\",\n      \"integrity\": \"sha512-AX22jp8Y7wwaBgAixaSvkoG4M/+PlAcm3Qs4OW8yT9DM4xUpWKeFhLueTAyZF39pviAdcDdeJoACapiAceqNcw==\"\n    },\n    \"node_modules/@types/graceful-fs\": {\n      \"version\": \"4.1.9\",\n      \"resolved\": \"https://registry.npmjs.org/@types/graceful-fs/-/graceful-fs-4.1.9.tgz\",\n      \"integrity\": \"sha512-olP3sd1qOEe5dXTSaFvQG+02VdRXcdytWLAZsAq1PecU8uqQAhkrnbli7DagjtXKW/Bl7YJbUsa8MPcuc8LHEQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@types/node\": \"*\"\n      }\n    },\n    \"node_modules/@types/istanbul-lib-coverage\": {\n      \"version\": \"2.0.6\",\n      \"resolved\": \"https://registry.npmjs.org/@types/istanbul-lib-coverage/-/istanbul-lib-coverage-2.0.6.tgz\",\n      \"integrity\": \"sha512-2QF/t/auWm0lsy8XtKVPG19v3sSOQlJe/YHZgfjb/KBBHOGSV+J2q/S671rcq9uTBrLAXmZpqJiaQbMT+zNU1w==\",\n      \"dev\": true\n    },\n    \"node_modules/@types/istanbul-lib-report\": {\n      \"version\": \"3.0.3\",\n      \"resolved\": \"https://registry.npmjs.org/@types/istanbul-lib-report/-/istanbul-lib-report-3.0.3.tgz\",\n      \"integrity\": \"sha512-NQn7AHQnk/RSLOxrBbGyJM/aVQ+pjj5HCgasFxc0K/KhoATfQ/47AyUl15I2yBUpihjmas+a+VJBOqecrFH+uA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@types/istanbul-lib-coverage\": \"*\"\n      }\n    },\n    \"node_modules/@types/istanbul-reports\": {\n      \"version\": \"3.0.4\",\n      \"resolved\": \"https://registry.npmjs.org/@types/istanbul-reports/-/istanbul-reports-3.0.4.tgz\",\n      \"integrity\": \"sha512-pk2B1NWalF9toCRu6gjBzR69syFjP4Od8WRAX+0mmf9lAjCRicLOWc+ZrxZHx/0XRjotgkF9t6iaMJ+aXcOdZQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@types/istanbul-lib-report\": \"*\"\n      }\n    },\n    \"node_modules/@types/node\": {\n      \"version\": \"24.0.13\",\n      \"resolved\": \"https://registry.npmjs.org/@types/node/-/node-24.0.13.tgz\",\n      \"integrity\": \"sha512-Qm9OYVOFHFYg3wJoTSrz80hoec5Lia/dPp84do3X7dZvLikQvM1YpmvTBEdIr/e+U8HTkFjLHLnl78K/qjf+jQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"undici-types\": \"~7.8.0\"\n      }\n    },\n    \"node_modules/@types/offscreencanvas\": {\n      \"version\": \"2019.7.3\",\n      \"resolved\": \"https://registry.npmjs.org/@types/offscreencanvas/-/offscreencanvas-2019.7.3.tgz\",\n      \"integrity\": \"sha512-ieXiYmgSRXUDeOntE1InxjWyvEelZGP63M+cGuquuRLuIKKT1osnkXjxev9B7d1nXSug5vpunx+gNlbVxMlC9A==\"\n    },\n    \"node_modules/@types/prop-types\": {\n      \"version\": \"15.7.15\",\n      \"resolved\": \"https://registry.npmjs.org/@types/prop-types/-/prop-types-15.7.15.tgz\",\n      \"integrity\": \"sha512-F6bEyamV9jKGAFBEmlQnesRPGOQqS2+Uwi0Em15xenOxHaf2hv6L8YCVn3rPdPJOiJfPiCnLIRyvwVaqMY3MIw==\"\n    },\n    \"node_modules/@types/raf\": {\n      \"version\": \"3.4.3\",\n      \"resolved\": \"https://registry.npmjs.org/@types/raf/-/raf-3.4.3.tgz\",\n      \"integrity\": \"sha512-c4YAvMedbPZ5tEyxzQdMoOhhJ4RD3rngZIdwC2/qDN3d7JpEhB6fiBRKVY1lg5B7Wk+uPBjn5f39j1/2MY1oOw==\",\n      \"optional\": true\n    },\n    \"node_modules/@types/react\": {\n      \"version\": \"18.3.23\",\n      \"resolved\": \"https://registry.npmjs.org/@types/react/-/react-18.3.23.tgz\",\n      \"integrity\": \"sha512-/LDXMQh55EzZQ0uVAZmKKhfENivEvWz6E+EYzh+/MCjMhNsotd+ZHhBGIjFDTi6+fz0OhQQQLbTgdQIxxCsC0w==\",\n      \"dependencies\": {\n        \"@types/prop-types\": \"*\",\n        \"csstype\": \"^3.0.2\"\n      }\n    },\n    \"node_modules/@types/react-dom\": {\n      \"version\": \"18.3.7\",\n      \"resolved\": \"https://registry.npmjs.org/@types/react-dom/-/react-dom-18.3.7.tgz\",\n      \"integrity\": \"sha512-MEe3UeoENYVFXzoXEWsvcpg6ZvlrFNlOQ7EOsvhI3CfAXwzPfO8Qwuxd40nepsYKqyyVQnTdEfv68q91yLcKrQ==\",\n      \"dev\": true,\n      \"peerDependencies\": {\n        \"@types/react\": \"^18.0.0\"\n      }\n    },\n    \"node_modules/@types/react-reconciler\": {\n      \"version\": \"0.26.7\",\n      \"resolved\": \"https://registry.npmjs.org/@types/react-reconciler/-/react-reconciler-0.26.7.tgz\",\n      \"integrity\": \"sha512-mBDYl8x+oyPX/VBb3E638N0B7xG+SPk/EAMcVPeexqus/5aTpTphQi0curhhshOqRrc9t6OPoJfEUkbymse/lQ==\",\n      \"dependencies\": {\n        \"@types/react\": \"*\"\n      }\n    },\n    \"node_modules/@types/stack-utils\": {\n      \"version\": \"2.0.3\",\n      \"resolved\": \"https://registry.npmjs.org/@types/stack-utils/-/stack-utils-2.0.3.tgz\",\n      \"integrity\": \"sha512-9aEbYZ3TbYMznPdcdr3SmIrLXwC/AKZXQeCf9Pgao5CKb8CyHuEX5jzWPTkvregvhRJHcpRO6BFoGW9ycaOkYw==\",\n      \"dev\": true\n    },\n    \"node_modules/@types/stats.js\": {\n      \"version\": \"0.17.4\",\n      \"resolved\": \"https://registry.npmjs.org/@types/stats.js/-/stats.js-0.17.4.tgz\",\n      \"integrity\": \"sha512-jIBvWWShCvlBqBNIZt0KAshWpvSjhkwkEu4ZUcASoAvhmrgAUI2t1dXrjSL4xXVLB4FznPrIsX3nKXFl/Dt4vA==\"\n    },\n    \"node_modules/@types/three\": {\n      \"version\": \"0.178.1\",\n      \"resolved\": \"https://registry.npmjs.org/@types/three/-/three-0.178.1.tgz\",\n      \"integrity\": \"sha512-WSabew1mgWgRx2RfLfKY+9h4wyg6U94JfLbZEGU245j/WY2kXqU0MUfghS+3AYMV5ET1VlILAgpy77cB6a3Itw==\",\n      \"dependencies\": {\n        \"@dimforge/rapier3d-compat\": \"~0.12.0\",\n        \"@tweenjs/tween.js\": \"~23.1.3\",\n        \"@types/stats.js\": \"*\",\n        \"@types/webxr\": \"*\",\n        \"@webgpu/types\": \"*\",\n        \"fflate\": \"~0.8.2\",\n        \"meshoptimizer\": \"~0.18.1\"\n      }\n    },\n    \"node_modules/@types/webxr\": {\n      \"version\": \"0.5.22\",\n      \"resolved\": \"https://registry.npmjs.org/@types/webxr/-/webxr-0.5.22.tgz\",\n      \"integrity\": \"sha512-Vr6Stjv5jPRqH690f5I5GLjVk8GSsoQSYJ2FVd/3jJF7KaqfwPi3ehfBS96mlQ2kPCwZaX6U0rG2+NGHBKkA/A==\"\n    },\n    \"node_modules/@types/yargs\": {\n      \"version\": \"17.0.33\",\n      \"resolved\": \"https://registry.npmjs.org/@types/yargs/-/yargs-17.0.33.tgz\",\n      \"integrity\": \"sha512-WpxBCKWPLr4xSsHgz511rFJAM+wS28w2zEO1QDNY5zM/S8ok70NNfztH0xwhqKyaK0OHCbN98LDAZuy1ctxDkA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@types/yargs-parser\": \"*\"\n      }\n    },\n    \"node_modules/@types/yargs-parser\": {\n      \"version\": \"21.0.3\",\n      \"resolved\": \"https://registry.npmjs.org/@types/yargs-parser/-/yargs-parser-21.0.3.tgz\",\n      \"integrity\": \"sha512-I4q9QU9MQv4oEOz4tAHJtNz1cwuLxn2F3xcc2iV5WdqLPpUnj30aUuxt1mAxYTG+oe8CZMV/+6rU4S4gRDzqtQ==\",\n      \"dev\": true\n    },\n    \"node_modules/@use-gesture/core\": {\n      \"version\": \"10.3.1\",\n      \"resolved\": \"https://registry.npmjs.org/@use-gesture/core/-/core-10.3.1.tgz\",\n      \"integrity\": \"sha512-WcINiDt8WjqBdUXye25anHiNxPc0VOrlT8F6LLkU6cycrOGUDyY/yyFmsg3k8i5OLvv25llc0QC45GhR/C8llw==\"\n    },\n    \"node_modules/@use-gesture/react\": {\n      \"version\": \"10.3.1\",\n      \"resolved\": \"https://registry.npmjs.org/@use-gesture/react/-/react-10.3.1.tgz\",\n      \"integrity\": \"sha512-Yy19y6O2GJq8f7CHf7L0nxL8bf4PZCPaVOCgJrusOeFHY1LvHgYXnmnXg6N5iwAnbgbZCDjo60SiM6IPJi9C5g==\",\n      \"dependencies\": {\n        \"@use-gesture/core\": \"10.3.1\"\n      },\n      \"peerDependencies\": {\n        \"react\": \">= 16.8.0\"\n      }\n    },\n    \"node_modules/@webgpu/types\": {\n      \"version\": \"0.1.64\",\n      \"resolved\": \"https://registry.npmjs.org/@webgpu/types/-/types-0.1.64.tgz\",\n      \"integrity\": \"sha512-84kRIAGV46LJTlJZWxShiOrNL30A+9KokD7RB3dRCIqODFjodS5tCD5yyiZ8kIReGVZSDfA3XkkwyyOIF6K62A==\"\n    },\n    \"node_modules/ansi-escapes\": {\n      \"version\": \"4.3.2\",\n      \"resolved\": \"https://registry.npmjs.org/ansi-escapes/-/ansi-escapes-4.3.2.tgz\",\n      \"integrity\": \"sha512-gKXj5ALrKWQLsYG9jlTRmR/xKluxHV+Z9QEwNIgCfM1/uwPMCuzVVnh5mwTd+OuBZcwSIMbqssNWRm1lE51QaQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"type-fest\": \"^0.21.3\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    },\n    \"node_modules/ansi-regex\": {\n      \"version\": \"5.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/ansi-regex/-/ansi-regex-5.0.1.tgz\",\n      \"integrity\": \"sha512-quJQXlTSUGL2LH9SUXo8VwsY4soanhgo6LNSm84E1LBcE8s3O0wpdiRzyR9z/ZZJMlMWv37qOOb9pdJlMUEKFQ==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/ansi-styles\": {\n      \"version\": \"4.3.0\",\n      \"resolved\": \"https://registry.npmjs.org/ansi-styles/-/ansi-styles-4.3.0.tgz\",\n      \"integrity\": \"sha512-zbB9rCJAT1rbjiVDb2hqKFHNYLxgtk8NURxZ3IZwD3F6NtxbXZQCnnSi1Lkx+IDohdPlFp222wVALIheZJQSEg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"color-convert\": \"^2.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/chalk/ansi-styles?sponsor=1\"\n      }\n    },\n    \"node_modules/any-promise\": {\n      \"version\": \"1.3.0\",\n      \"resolved\": \"https://registry.npmjs.org/any-promise/-/any-promise-1.3.0.tgz\",\n      \"integrity\": \"sha512-7UvmKalWRt1wgjL1RrGxoSJW/0QZFIegpeGvZG9kjp8vrRu55XTHbwnqq2GpXm9uLbcuhxm3IqX9OB4MZR1b2A==\",\n      \"dev\": true\n    },\n    \"node_modules/anymatch\": {\n      \"version\": \"3.1.3\",\n      \"resolved\": \"https://registry.npmjs.org/anymatch/-/anymatch-3.1.3.tgz\",\n      \"integrity\": \"sha512-KMReFUr0B4t+D+OBkjR3KYqvocp2XaSzO55UcB6mgQMd3KbcE+mWTyvVV7D/zsdEbNnV6acZUutkiHQXvTr1Rw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"normalize-path\": \"^3.0.0\",\n        \"picomatch\": \"^2.0.4\"\n      },\n      \"engines\": {\n        \"node\": \">= 8\"\n      }\n    },\n    \"node_modules/arg\": {\n      \"version\": \"5.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/arg/-/arg-5.0.2.tgz\",\n      \"integrity\": \"sha512-PYjyFOLKQ9y57JvQ6QLo8dAgNqswh8M1RMJYdQduT6xbWSgK36P/Z/v+p888pM69jMMfS8Xd8F6I1kQ/I9HUGg==\",\n      \"dev\": true\n    },\n    \"node_modules/argparse\": {\n      \"version\": \"1.0.10\",\n      \"resolved\": \"https://registry.npmjs.org/argparse/-/argparse-1.0.10.tgz\",\n      \"integrity\": \"sha512-o5Roy6tNG4SL/FOkCAN6RzjiakZS25RLYFrcMttJqbdd8BWrnA+fGz57iN5Pb06pvBGvl5gQ0B48dJlslXvoTg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"sprintf-js\": \"~1.0.2\"\n      }\n    },\n    \"node_modules/aria-query\": {\n      \"version\": \"5.3.2\",\n      \"resolved\": \"https://registry.npmjs.org/aria-query/-/aria-query-5.3.2.tgz\",\n      \"integrity\": \"sha512-COROpnaoap1E2F000S62r6A60uHZnmlvomhfyT2DlTcrY1OrBKn2UhH7qn5wTC9zMvD0AY7csdPSNwKP+7WiQw==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      }\n    },\n    \"node_modules/array-buffer-byte-length\": {\n      \"version\": \"1.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/array-buffer-byte-length/-/array-buffer-byte-length-1.0.2.tgz\",\n      \"integrity\": \"sha512-LHE+8BuR7RYGDKvnrmcuSq3tDcKv9OFEXQt/HpbZhY7V6h0zlUXutnAD82GiFx9rdieCMjkvtcsPqBwgUl1Iiw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"call-bound\": \"^1.0.3\",\n        \"is-array-buffer\": \"^3.0.5\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/atob\": {\n      \"version\": \"2.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/atob/-/atob-2.1.2.tgz\",\n      \"integrity\": \"sha512-Wm6ukoaOGJi/73p/cl2GvLjTI5JM1k/O14isD73YML8StrH/7/lRFgmg8nICZgD3bZZvjwCGxtMOD3wWNAu8cg==\",\n      \"bin\": {\n        \"atob\": \"bin/atob.js\"\n      },\n      \"engines\": {\n        \"node\": \">= 4.5.0\"\n      }\n    },\n    \"node_modules/autoprefixer\": {\n      \"version\": \"10.4.21\",\n      \"resolved\": \"https://registry.npmjs.org/autoprefixer/-/autoprefixer-10.4.21.tgz\",\n      \"integrity\": \"sha512-O+A6LWV5LDHSJD3LjHYoNi4VLsj/Whi7k6zG12xTYaU4cQ8oxQGckXNX8cRHK5yOZ/ppVHe0ZBXGzSV9jXdVbQ==\",\n      \"dev\": true,\n      \"funding\": [\n        {\n          \"type\": \"opencollective\",\n          \"url\": \"https://opencollective.com/postcss/\"\n        },\n        {\n          \"type\": \"tidelift\",\n          \"url\": \"https://tidelift.com/funding/github/npm/autoprefixer\"\n        },\n        {\n          \"type\": \"github\",\n          \"url\": \"https://github.com/sponsors/ai\"\n        }\n      ],\n      \"dependencies\": {\n        \"browserslist\": \"^4.24.4\",\n        \"caniuse-lite\": \"^1.0.30001702\",\n        \"fraction.js\": \"^4.3.7\",\n        \"normalize-range\": \"^0.1.2\",\n        \"picocolors\": \"^1.1.1\",\n        \"postcss-value-parser\": \"^4.2.0\"\n      },\n      \"bin\": {\n        \"autoprefixer\": \"bin/autoprefixer\"\n      },\n      \"engines\": {\n        \"node\": \"^10 || ^12 || >=14\"\n      },\n      \"peerDependencies\": {\n        \"postcss\": \"^8.1.0\"\n      }\n    },\n    \"node_modules/available-typed-arrays\": {\n      \"version\": \"1.0.7\",\n      \"resolved\": \"https://registry.npmjs.org/available-typed-arrays/-/available-typed-arrays-1.0.7.tgz\",\n      \"integrity\": \"sha512-wvUjBtSGN7+7SjNpq/9M2Tg350UZD3q62IFZLbRAR1bSMlCo1ZaeW+BJ+D090e4hIIZLBcTDWe4Mh4jvUDajzQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"possible-typed-array-names\": \"^1.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/babel-jest\": {\n      \"version\": \"29.7.0\",\n      \"resolved\": \"https://registry.npmjs.org/babel-jest/-/babel-jest-29.7.0.tgz\",\n      \"integrity\": \"sha512-BrvGY3xZSwEcCzKvKsCi2GgHqDqsYkOP4/by5xCgIwGXQxIEh+8ew3gmrE1y7XRR6LHZIj6yLYnUi/mm2KXKBg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@jest/transform\": \"^29.7.0\",\n        \"@types/babel__core\": \"^7.1.14\",\n        \"babel-plugin-istanbul\": \"^6.1.1\",\n        \"babel-preset-jest\": \"^29.6.3\",\n        \"chalk\": \"^4.0.0\",\n        \"graceful-fs\": \"^4.2.9\",\n        \"slash\": \"^3.0.0\"\n      },\n      \"engines\": {\n        \"node\": \"^14.15.0 || ^16.10.0 || >=18.0.0\"\n      },\n      \"peerDependencies\": {\n        \"@babel/core\": \"^7.8.0\"\n      }\n    },\n    \"node_modules/babel-jest/node_modules/chalk\": {\n      \"version\": \"4.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/chalk/-/chalk-4.1.2.tgz\",\n      \"integrity\": \"sha512-oKnbhFyRIXpUuez8iBMmyEa4nbj4IOQyuhc/wy9kY7/WVPcwIO9VA668Pu8RkO7+0G76SLROeyw9CpQ061i4mA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"ansi-styles\": \"^4.1.0\",\n        \"supports-color\": \"^7.1.0\"\n      },\n      \"engines\": {\n        \"node\": \">=10\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/chalk/chalk?sponsor=1\"\n      }\n    },\n    \"node_modules/babel-plugin-istanbul\": {\n      \"version\": \"6.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/babel-plugin-istanbul/-/babel-plugin-istanbul-6.1.1.tgz\",\n      \"integrity\": \"sha512-Y1IQok9821cC9onCx5otgFfRm7Lm+I+wwxOx738M/WLPZ9Q42m4IG5W0FNX8WLL2gYMZo3JkuXIH2DOpWM+qwA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@babel/helper-plugin-utils\": \"^7.0.0\",\n        \"@istanbuljs/load-nyc-config\": \"^1.0.0\",\n        \"@istanbuljs/schema\": \"^0.1.2\",\n        \"istanbul-lib-instrument\": \"^5.0.4\",\n        \"test-exclude\": \"^6.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/babel-plugin-istanbul/node_modules/istanbul-lib-instrument\": {\n      \"version\": \"5.2.1\",\n      \"resolved\": \"https://registry.npmjs.org/istanbul-lib-instrument/-/istanbul-lib-instrument-5.2.1.tgz\",\n      \"integrity\": \"sha512-pzqtp31nLv/XFOzXGuvhCb8qhjmTVo5vjVk19XE4CRlSWz0KoeJ3bw9XsA7nOp9YBf4qHjwBxkDzKcME/J29Yg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@babel/core\": \"^7.12.3\",\n        \"@babel/parser\": \"^7.14.7\",\n        \"@istanbuljs/schema\": \"^0.1.2\",\n        \"istanbul-lib-coverage\": \"^3.2.0\",\n        \"semver\": \"^6.3.0\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/babel-plugin-jest-hoist\": {\n      \"version\": \"29.6.3\",\n      \"resolved\": \"https://registry.npmjs.org/babel-plugin-jest-hoist/-/babel-plugin-jest-hoist-29.6.3.tgz\",\n      \"integrity\": \"sha512-ESAc/RJvGTFEzRwOTT4+lNDk/GNHMkKbNzsvT0qKRfDyyYTskxB5rnU2njIDYVxXCBHHEI1c0YwHob3WaYujOg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@babel/template\": \"^7.3.3\",\n        \"@babel/types\": \"^7.3.3\",\n        \"@types/babel__core\": \"^7.1.14\",\n        \"@types/babel__traverse\": \"^7.0.6\"\n      },\n      \"engines\": {\n        \"node\": \"^14.15.0 || ^16.10.0 || >=18.0.0\"\n      }\n    },\n    \"node_modules/babel-preset-current-node-syntax\": {\n      \"version\": \"1.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/babel-preset-current-node-syntax/-/babel-preset-current-node-syntax-1.1.0.tgz\",\n      \"integrity\": \"sha512-ldYss8SbBlWva1bs28q78Ju5Zq1F+8BrqBZZ0VFhLBvhh6lCpC2o3gDJi/5DRLs9FgYZCnmPYIVFU4lRXCkyUw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@babel/plugin-syntax-async-generators\": \"^7.8.4\",\n        \"@babel/plugin-syntax-bigint\": \"^7.8.3\",\n        \"@babel/plugin-syntax-class-properties\": \"^7.12.13\",\n        \"@babel/plugin-syntax-class-static-block\": \"^7.14.5\",\n        \"@babel/plugin-syntax-import-attributes\": \"^7.24.7\",\n        \"@babel/plugin-syntax-import-meta\": \"^7.10.4\",\n        \"@babel/plugin-syntax-json-strings\": \"^7.8.3\",\n        \"@babel/plugin-syntax-logical-assignment-operators\": \"^7.10.4\",\n        \"@babel/plugin-syntax-nullish-coalescing-operator\": \"^7.8.3\",\n        \"@babel/plugin-syntax-numeric-separator\": \"^7.10.4\",\n        \"@babel/plugin-syntax-object-rest-spread\": \"^7.8.3\",\n        \"@babel/plugin-syntax-optional-catch-binding\": \"^7.8.3\",\n        \"@babel/plugin-syntax-optional-chaining\": \"^7.8.3\",\n        \"@babel/plugin-syntax-private-property-in-object\": \"^7.14.5\",\n        \"@babel/plugin-syntax-top-level-await\": \"^7.14.5\"\n      },\n      \"peerDependencies\": {\n        \"@babel/core\": \"^7.0.0\"\n      }\n    },\n    \"node_modules/babel-preset-jest\": {\n      \"version\": \"29.6.3\",\n      \"resolved\": \"https://registry.npmjs.org/babel-preset-jest/-/babel-preset-jest-29.6.3.tgz\",\n      \"integrity\": \"sha512-0B3bhxR6snWXJZtR/RliHTDPRgn1sNHOR0yVtq/IiQFyuOVjFS+wuio/R4gSNkyYmKmJB4wGZv2NZanmKmTnNA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"babel-plugin-jest-hoist\": \"^29.6.3\",\n        \"babel-preset-current-node-syntax\": \"^1.0.0\"\n      },\n      \"engines\": {\n        \"node\": \"^14.15.0 || ^16.10.0 || >=18.0.0\"\n      },\n      \"peerDependencies\": {\n        \"@babel/core\": \"^7.0.0\"\n      }\n    },\n    \"node_modules/balanced-match\": {\n      \"version\": \"1.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/balanced-match/-/balanced-match-1.0.2.tgz\",\n      \"integrity\": \"sha512-3oSeUO0TMV67hN1AmbXsK4yaqU7tjiHlbxRDZOpH0KW9+CeX4bRAaX0Anxt0tx2MrpRpWwQaPwIlISEJhYU5Pw==\",\n      \"dev\": true\n    },\n    \"node_modules/base64-arraybuffer\": {\n      \"version\": \"1.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/base64-arraybuffer/-/base64-arraybuffer-1.0.2.tgz\",\n      \"integrity\": \"sha512-I3yl4r9QB5ZRY3XuJVEPfc2XhZO6YweFPI+UovAzn+8/hb3oJ6lnysaFcjVpkCPfVWFUDvoZ8kmVDP7WyRtYtQ==\",\n      \"optional\": true,\n      \"engines\": {\n        \"node\": \">= 0.6.0\"\n      }\n    },\n    \"node_modules/base64-js\": {\n      \"version\": \"1.5.1\",\n      \"resolved\": \"https://registry.npmjs.org/base64-js/-/base64-js-1.5.1.tgz\",\n      \"integrity\": \"sha512-AKpaYlHn8t4SVbOHCy+b5+KKgvR4vrsD8vbvrbiQJps7fKDTkjkDry6ji0rUJjC0kzbNePLwzxq8iypo41qeWA==\",\n      \"funding\": [\n        {\n          \"type\": \"github\",\n          \"url\": \"https://github.com/sponsors/feross\"\n        },\n        {\n          \"type\": \"patreon\",\n          \"url\": \"https://www.patreon.com/feross\"\n        },\n        {\n          \"type\": \"consulting\",\n          \"url\": \"https://feross.org/support\"\n        }\n      ]\n    },\n    \"node_modules/bidi-js\": {\n      \"version\": \"1.0.3\",\n      \"resolved\": \"https://registry.npmjs.org/bidi-js/-/bidi-js-1.0.3.tgz\",\n      \"integrity\": \"sha512-RKshQI1R3YQ+n9YJz2QQ147P66ELpa1FQEg20Dk8oW9t2KgLbpDLLp9aGZ7y8WHSshDknG0bknqGw5/tyCs5tw==\",\n      \"dependencies\": {\n        \"require-from-string\": \"^2.0.2\"\n      }\n    },\n    \"node_modules/binary-extensions\": {\n      \"version\": \"2.3.0\",\n      \"resolved\": \"https://registry.npmjs.org/binary-extensions/-/binary-extensions-2.3.0.tgz\",\n      \"integrity\": \"sha512-Ceh+7ox5qe7LJuLHoY0feh3pHuUDHAcRUeyL2VYghZwfpkNIy/+8Ocg0a3UuSoYzavmylwuLWQOf3hl0jjMMIw==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=8\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    },\n    \"node_modules/brace-expansion\": {\n      \"version\": \"1.1.12\",\n      \"resolved\": \"https://registry.npmjs.org/brace-expansion/-/brace-expansion-1.1.12.tgz\",\n      \"integrity\": \"sha512-9T9UjW3r0UW5c1Q7GTwllptXwhvYmEzFhzMfZ9H7FQWt+uZePjZPjBP/W1ZEyZ1twGWom5/56TF4lPcqjnDHcg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"balanced-match\": \"^1.0.0\",\n        \"concat-map\": \"0.0.1\"\n      }\n    },\n    \"node_modules/braces\": {\n      \"version\": \"3.0.3\",\n      \"resolved\": \"https://registry.npmjs.org/braces/-/braces-3.0.3.tgz\",\n      \"integrity\": \"sha512-yQbXgO/OSZVD2IsiLlro+7Hf6Q18EJrKSEsdoMzKePKXct3gvD8oLcOQdIzGupr5Fj+EDe8gO/lxc1BzfMpxvA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"fill-range\": \"^7.1.1\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/browserslist\": {\n      \"version\": \"4.25.1\",\n      \"resolved\": \"https://registry.npmjs.org/browserslist/-/browserslist-4.25.1.tgz\",\n      \"integrity\": \"sha512-KGj0KoOMXLpSNkkEI6Z6mShmQy0bc1I+T7K9N81k4WWMrfz+6fQ6es80B/YLAeRoKvjYE1YSHHOW1qe9xIVzHw==\",\n      \"dev\": true,\n      \"funding\": [\n        {\n          \"type\": \"opencollective\",\n          \"url\": \"https://opencollective.com/browserslist\"\n        },\n        {\n          \"type\": \"tidelift\",\n          \"url\": \"https://tidelift.com/funding/github/npm/browserslist\"\n        },\n        {\n          \"type\": \"github\",\n          \"url\": \"https://github.com/sponsors/ai\"\n        }\n      ],\n      \"dependencies\": {\n        \"caniuse-lite\": \"^1.0.30001726\",\n        \"electron-to-chromium\": \"^1.5.173\",\n        \"node-releases\": \"^2.0.19\",\n        \"update-browserslist-db\": \"^1.1.3\"\n      },\n      \"bin\": {\n        \"browserslist\": \"cli.js\"\n      },\n      \"engines\": {\n        \"node\": \"^6 || ^7 || ^8 || ^9 || ^10 || ^11 || ^12 || >=13.7\"\n      }\n    },\n    \"node_modules/bser\": {\n      \"version\": \"2.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/bser/-/bser-2.1.1.tgz\",\n      \"integrity\": \"sha512-gQxTNE/GAfIIrmHLUE3oJyp5FO6HRBfhjnw4/wMmA63ZGDJnWBmgY/lyQBpnDUkGmAhbSe39tx2d/iTOAfglwQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"node-int64\": \"^0.4.0\"\n      }\n    },\n    \"node_modules/btoa\": {\n      \"version\": \"1.2.1\",\n      \"resolved\": \"https://registry.npmjs.org/btoa/-/btoa-1.2.1.tgz\",\n      \"integrity\": \"sha512-SB4/MIGlsiVkMcHmT+pSmIPoNDoHg+7cMzmt3Uxt628MTz2487DKSqK/fuhFBrkuqrYv5UCEnACpF4dTFNKc/g==\",\n      \"bin\": {\n        \"btoa\": \"bin/btoa.js\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4.0\"\n      }\n    },\n    \"node_modules/buffer\": {\n      \"version\": \"6.0.3\",\n      \"resolved\": \"https://registry.npmjs.org/buffer/-/buffer-6.0.3.tgz\",\n      \"integrity\": \"sha512-FTiCpNxtwiZZHEZbcbTIcZjERVICn9yq/pDFkTl95/AxzD1naBctN7YO68riM/gLSDY7sdrMby8hofADYuuqOA==\",\n      \"funding\": [\n        {\n          \"type\": \"github\",\n          \"url\": \"https://github.com/sponsors/feross\"\n        },\n        {\n          \"type\": \"patreon\",\n          \"url\": \"https://www.patreon.com/feross\"\n        },\n        {\n          \"type\": \"consulting\",\n          \"url\": \"https://feross.org/support\"\n        }\n      ],\n      \"dependencies\": {\n        \"base64-js\": \"^1.3.1\",\n        \"ieee754\": \"^1.2.1\"\n      }\n    },\n    \"node_modules/buffer-from\": {\n      \"version\": \"1.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/buffer-from/-/buffer-from-1.1.2.tgz\",\n      \"integrity\": \"sha512-E+XQCRwSbaaiChtv6k6Dwgc+bx+Bs6vuKJHHl5kox/BaKbhiXzqQOwK4cO22yElGp2OCmjwVhT3HmxgyPGnJfQ==\",\n      \"dev\": true\n    },\n    \"node_modules/call-bind\": {\n      \"version\": \"1.0.8\",\n      \"resolved\": \"https://registry.npmjs.org/call-bind/-/call-bind-1.0.8.tgz\",\n      \"integrity\": \"sha512-oKlSFMcMwpUg2ednkhQ454wfWiU/ul3CkJe/PEHcTKuiX6RpbehUiFMXu13HalGZxfUwCQzZG747YXBn1im9ww==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"call-bind-apply-helpers\": \"^1.0.0\",\n        \"es-define-property\": \"^1.0.0\",\n        \"get-intrinsic\": \"^1.2.4\",\n        \"set-function-length\": \"^1.2.2\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/call-bind-apply-helpers\": {\n      \"version\": \"1.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/call-bind-apply-helpers/-/call-bind-apply-helpers-1.0.2.tgz\",\n      \"integrity\": \"sha512-Sp1ablJ0ivDkSzjcaJdxEunN5/XvksFJ2sMBFfq6x0ryhQV/2b/KwFe21cMpmHtPOSij8K99/wSfoEuTObmuMQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"es-errors\": \"^1.3.0\",\n        \"function-bind\": \"^1.1.2\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      }\n    },\n    \"node_modules/call-bound\": {\n      \"version\": \"1.0.4\",\n      \"resolved\": \"https://registry.npmjs.org/call-bound/-/call-bound-1.0.4.tgz\",\n      \"integrity\": \"sha512-+ys997U96po4Kx/ABpBCqhA9EuxJaQWDQg7295H4hBphv3IZg0boBKuwYpt4YXp6MZ5AmZQnU/tyMTlRpaSejg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"call-bind-apply-helpers\": \"^1.0.2\",\n        \"get-intrinsic\": \"^1.3.0\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/callsites\": {\n      \"version\": \"3.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/callsites/-/callsites-3.1.0.tgz\",\n      \"integrity\": \"sha512-P8BjAsXvZS+VIDUI11hHCQEv74YT67YUi5JJFNWIqL235sBmjX4+qx9Muvls5ivyNENctx46xQLQ3aTuE7ssaQ==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=6\"\n      }\n    },\n    \"node_modules/camelcase\": {\n      \"version\": \"5.3.1\",\n      \"resolved\": \"https://registry.npmjs.org/camelcase/-/camelcase-5.3.1.tgz\",\n      \"integrity\": \"sha512-L28STB170nwWS63UjtlEOE3dldQApaJXZkOI1uMFfzf3rRuPegHaHesyee+YxQ+W6SvRDQV6UrdOdRiR153wJg==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=6\"\n      }\n    },\n    \"node_modules/camelcase-css\": {\n      \"version\": \"2.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/camelcase-css/-/camelcase-css-2.0.1.tgz\",\n      \"integrity\": \"sha512-QOSvevhslijgYwRx6Rv7zKdMF8lbRmx+uQGx2+vDc+KI/eBnsy9kit5aj23AgGu3pa4t9AgwbnXWqS+iOY+2aA==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">= 6\"\n      }\n    },\n    \"node_modules/camera-controls\": {\n      \"version\": \"2.10.1\",\n      \"resolved\": \"https://registry.npmjs.org/camera-controls/-/camera-controls-2.10.1.tgz\",\n      \"integrity\": \"sha512-KnaKdcvkBJ1Irbrzl8XD6WtZltkRjp869Jx8c0ujs9K+9WD+1D7ryBsCiVqJYUqt6i/HR5FxT7RLASieUD+Q5w==\",\n      \"peerDependencies\": {\n        \"three\": \">=0.126.1\"\n      }\n    },\n    \"node_modules/caniuse-lite\": {\n      \"version\": \"1.0.30001727\",\n      \"resolved\": \"https://registry.npmjs.org/caniuse-lite/-/caniuse-lite-1.0.30001727.tgz\",\n      \"integrity\": \"sha512-pB68nIHmbN6L/4C6MH1DokyR3bYqFwjaSs/sWDHGj4CTcFtQUQMuJftVwWkXq7mNWOybD3KhUv3oWHoGxgP14Q==\",\n      \"dev\": true,\n      \"funding\": [\n        {\n          \"type\": \"opencollective\",\n          \"url\": \"https://opencollective.com/browserslist\"\n        },\n        {\n          \"type\": \"tidelift\",\n          \"url\": \"https://tidelift.com/funding/github/npm/caniuse-lite\"\n        },\n        {\n          \"type\": \"github\",\n          \"url\": \"https://github.com/sponsors/ai\"\n        }\n      ]\n    },\n    \"node_modules/canvg\": {\n      \"version\": \"3.0.11\",\n      \"resolved\": \"https://registry.npmjs.org/canvg/-/canvg-3.0.11.tgz\",\n      \"integrity\": \"sha512-5ON+q7jCTgMp9cjpu4Jo6XbvfYwSB2Ow3kzHKfIyJfaCAOHLbdKPQqGKgfED/R5B+3TFFfe8pegYA+b423SRyA==\",\n      \"optional\": true,\n      \"dependencies\": {\n        \"@babel/runtime\": \"^7.12.5\",\n        \"@types/raf\": \"^3.4.0\",\n        \"core-js\": \"^3.8.3\",\n        \"raf\": \"^3.4.1\",\n        \"regenerator-runtime\": \"^0.13.7\",\n        \"rgbcolor\": \"^1.0.1\",\n        \"stackblur-canvas\": \"^2.0.0\",\n        \"svg-pathdata\": \"^6.0.3\"\n      },\n      \"engines\": {\n        \"node\": \">=10.0.0\"\n      }\n    },\n    \"node_modules/chalk\": {\n      \"version\": \"3.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/chalk/-/chalk-3.0.0.tgz\",\n      \"integrity\": \"sha512-4D3B6Wf41KOYRFdszmDqMCGq5VV/uMAB273JILmO+3jAlh8X4qDtdtgCR3fxtbLEMzSx22QdhnDcJvu2u1fVwg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"ansi-styles\": \"^4.1.0\",\n        \"supports-color\": \"^7.1.0\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/char-regex\": {\n      \"version\": \"1.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/char-regex/-/char-regex-1.0.2.tgz\",\n      \"integrity\": \"sha512-kWWXztvZ5SBQV+eRgKFeh8q5sLuZY2+8WUIzlxWVTg+oGwY14qylx1KbKzHd8P6ZYkAg0xyIDU9JMHhyJMZ1jw==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=10\"\n      }\n    },\n    \"node_modules/chokidar\": {\n      \"version\": \"3.6.0\",\n      \"resolved\": \"https://registry.npmjs.org/chokidar/-/chokidar-3.6.0.tgz\",\n      \"integrity\": \"sha512-7VT13fmjotKpGipCW9JEQAusEPE+Ei8nl6/g4FBAmIm0GOOLMua9NDDo/DWp0ZAxCr3cPq5ZpBqmPAQgDda2Pw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"anymatch\": \"~3.1.2\",\n        \"braces\": \"~3.0.2\",\n        \"glob-parent\": \"~5.1.2\",\n        \"is-binary-path\": \"~2.1.0\",\n        \"is-glob\": \"~4.0.1\",\n        \"normalize-path\": \"~3.0.0\",\n        \"readdirp\": \"~3.6.0\"\n      },\n      \"engines\": {\n        \"node\": \">= 8.10.0\"\n      },\n      \"funding\": {\n        \"url\": \"https://paulmillr.com/funding/\"\n      },\n      \"optionalDependencies\": {\n        \"fsevents\": \"~2.3.2\"\n      }\n    },\n    \"node_modules/chokidar/node_modules/glob-parent\": {\n      \"version\": \"5.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/glob-parent/-/glob-parent-5.1.2.tgz\",\n      \"integrity\": \"sha512-AOIgSQCepiJYwP3ARnGx+5VnTu2HBYdzbGP45eLw1vr3zB3vZLeyed1sC9hnbcOc9/SrMyM5RPQrkGz4aS9Zow==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"is-glob\": \"^4.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">= 6\"\n      }\n    },\n    \"node_modules/ci-info\": {\n      \"version\": \"3.9.0\",\n      \"resolved\": \"https://registry.npmjs.org/ci-info/-/ci-info-3.9.0.tgz\",\n      \"integrity\": \"sha512-NIxF55hv4nSqQswkAeiOi1r83xy8JldOFDTWiug55KBu9Jnblncd2U6ViHmYgHf01TPZS77NJBhBMKdWj9HQMQ==\",\n      \"dev\": true,\n      \"funding\": [\n        {\n          \"type\": \"github\",\n          \"url\": \"https://github.com/sponsors/sibiraj-s\"\n        }\n      ],\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/cjs-module-lexer\": {\n      \"version\": \"1.4.3\",\n      \"resolved\": \"https://registry.npmjs.org/cjs-module-lexer/-/cjs-module-lexer-1.4.3.tgz\",\n      \"integrity\": \"sha512-9z8TZaGM1pfswYeXrUpzPrkx8UnWYdhJclsiYMm6x/w5+nN+8Tf/LnAgfLGQCm59qAOxU8WwHEq2vNwF6i4j+Q==\",\n      \"dev\": true\n    },\n    \"node_modules/cliui\": {\n      \"version\": \"8.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/cliui/-/cliui-8.0.1.tgz\",\n      \"integrity\": \"sha512-BSeNnyus75C4//NQ9gQt1/csTXyo/8Sb+afLAkzAptFuMsod9HFokGNudZpi/oQV73hnVK+sR+5PVRMd+Dr7YQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"string-width\": \"^4.2.0\",\n        \"strip-ansi\": \"^6.0.1\",\n        \"wrap-ansi\": \"^7.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=12\"\n      }\n    },\n    \"node_modules/co\": {\n      \"version\": \"4.6.0\",\n      \"resolved\": \"https://registry.npmjs.org/co/-/co-4.6.0.tgz\",\n      \"integrity\": \"sha512-QVb0dM5HvG+uaxitm8wONl7jltx8dqhfU33DcqtOZcLSVIKSDDLDi7+0LbAKiyI8hD9u42m2YxXSkMGWThaecQ==\",\n      \"dev\": true,\n      \"engines\": {\n        \"iojs\": \">= 1.0.0\",\n        \"node\": \">= 0.12.0\"\n      }\n    },\n    \"node_modules/collect-v8-coverage\": {\n      \"version\": \"1.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/collect-v8-coverage/-/collect-v8-coverage-1.0.2.tgz\",\n      \"integrity\": \"sha512-lHl4d5/ONEbLlJvaJNtsF/Lz+WvB07u2ycqTYbdrq7UypDXailES4valYb2eWiJFxZlVmpGekfqoxQhzyFdT4Q==\",\n      \"dev\": true\n    },\n    \"node_modules/color-convert\": {\n      \"version\": \"2.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/color-convert/-/color-convert-2.0.1.tgz\",\n      \"integrity\": \"sha512-RRECPsj7iu/xb5oKYcsFHSppFNnsj/52OVTRKb4zP5onXwVF3zVmmToNcOfGC+CRDpfK/U584fMg38ZHCaElKQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"color-name\": \"~1.1.4\"\n      },\n      \"engines\": {\n        \"node\": \">=7.0.0\"\n      }\n    },\n    \"node_modules/color-name\": {\n      \"version\": \"1.1.4\",\n      \"resolved\": \"https://registry.npmjs.org/color-name/-/color-name-1.1.4.tgz\",\n      \"integrity\": \"sha512-dOy+3AuW3a2wNbZHIuMZpTcgjGuLU/uBL/ubcZF9OXbDo8ff4O8yVp5Bf0efS8uEoYo5q4Fx7dY9OgQGXgAsQA==\",\n      \"dev\": true\n    },\n    \"node_modules/commander\": {\n      \"version\": \"4.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/commander/-/commander-4.1.1.tgz\",\n      \"integrity\": \"sha512-NOKm8xhkzAjzFx8B2v5OAHT+u5pRQc2UCa2Vq9jYL/31o2wi9mxBA7LIFs3sV5VSC49z6pEhfbMULvShKj26WA==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">= 6\"\n      }\n    },\n    \"node_modules/concat-map\": {\n      \"version\": \"0.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/concat-map/-/concat-map-0.0.1.tgz\",\n      \"integrity\": \"sha512-/Srv4dswyQNBfohGpz9o6Yb3Gz3SrUDqBH5rTuhGR7ahtlbYKnVxw2bCFMRljaA7EXHaXZ8wsHdodFvbkhKmqg==\",\n      \"dev\": true\n    },\n    \"node_modules/convert-source-map\": {\n      \"version\": \"2.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/convert-source-map/-/convert-source-map-2.0.0.tgz\",\n      \"integrity\": \"sha512-Kvp459HrV2FEJ1CAsi1Ku+MY3kasH19TFykTz2xWmMeq6bk2NU3XXvfJ+Q61m0xktWwt+1HSYf3JZsTms3aRJg==\",\n      \"dev\": true\n    },\n    \"node_modules/core-js\": {\n      \"version\": \"3.44.0\",\n      \"resolved\": \"https://registry.npmjs.org/core-js/-/core-js-3.44.0.tgz\",\n      \"integrity\": \"sha512-aFCtd4l6GvAXwVEh3XbbVqJGHDJt0OZRa+5ePGx3LLwi12WfexqQxcsohb2wgsa/92xtl19Hd66G/L+TaAxDMw==\",\n      \"hasInstallScript\": true,\n      \"optional\": true,\n      \"funding\": {\n        \"type\": \"opencollective\",\n        \"url\": \"https://opencollective.com/core-js\"\n      }\n    },\n    \"node_modules/create-jest\": {\n      \"version\": \"29.7.0\",\n      \"resolved\": \"https://registry.npmjs.org/create-jest/-/create-jest-29.7.0.tgz\",\n      \"integrity\": \"sha512-Adz2bdH0Vq3F53KEMJOoftQFutWCukm6J24wbPWRO4k1kMY7gS7ds/uoJkNuV8wDCtWWnuwGcJwpWcih+zEW1Q==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@jest/types\": \"^29.6.3\",\n        \"chalk\": \"^4.0.0\",\n        \"exit\": \"^0.1.2\",\n        \"graceful-fs\": \"^4.2.9\",\n        \"jest-config\": \"^29.7.0\",\n        \"jest-util\": \"^29.7.0\",\n        \"prompts\": \"^2.0.1\"\n      },\n      \"bin\": {\n        \"create-jest\": \"bin/create-jest.js\"\n      },\n      \"engines\": {\n        \"node\": \"^14.15.0 || ^16.10.0 || >=18.0.0\"\n      }\n    },\n    \"node_modules/create-jest/node_modules/chalk\": {\n      \"version\": \"4.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/chalk/-/chalk-4.1.2.tgz\",\n      \"integrity\": \"sha512-oKnbhFyRIXpUuez8iBMmyEa4nbj4IOQyuhc/wy9kY7/WVPcwIO9VA668Pu8RkO7+0G76SLROeyw9CpQ061i4mA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"ansi-styles\": \"^4.1.0\",\n        \"supports-color\": \"^7.1.0\"\n      },\n      \"engines\": {\n        \"node\": \">=10\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/chalk/chalk?sponsor=1\"\n      }\n    },\n    \"node_modules/cross-env\": {\n      \"version\": \"7.0.3\",\n      \"resolved\": \"https://registry.npmjs.org/cross-env/-/cross-env-7.0.3.tgz\",\n      \"integrity\": \"sha512-+/HKd6EgcQCJGh2PSjZuUitQBQynKor4wrFbRg4DtAgS1aWO+gU52xpH7M9ScGgXSYmAVS9bIJ8EzuaGw0oNAw==\",\n      \"dependencies\": {\n        \"cross-spawn\": \"^7.0.1\"\n      },\n      \"bin\": {\n        \"cross-env\": \"src/bin/cross-env.js\",\n        \"cross-env-shell\": \"src/bin/cross-env-shell.js\"\n      },\n      \"engines\": {\n        \"node\": \">=10.14\",\n        \"npm\": \">=6\",\n        \"yarn\": \">=1\"\n      }\n    },\n    \"node_modules/cross-spawn\": {\n      \"version\": \"7.0.6\",\n      \"resolved\": \"https://registry.npmjs.org/cross-spawn/-/cross-spawn-7.0.6.tgz\",\n      \"integrity\": \"sha512-uV2QOWP2nWzsy2aMp8aRibhi9dlzF5Hgh5SHaB9OiTGEyDTiJJyx0uy51QXdyWbtAHNua4XJzUKca3OzKUd3vA==\",\n      \"dependencies\": {\n        \"path-key\": \"^3.1.0\",\n        \"shebang-command\": \"^2.0.0\",\n        \"which\": \"^2.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">= 8\"\n      }\n    },\n    \"node_modules/css-line-break\": {\n      \"version\": \"2.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/css-line-break/-/css-line-break-2.1.0.tgz\",\n      \"integrity\": \"sha512-FHcKFCZcAha3LwfVBhCQbW2nCNbkZXn7KVUJcsT5/P8YmfsVja0FMPJr0B903j/E69HUphKiV9iQArX8SDYA4w==\",\n      \"optional\": true,\n      \"dependencies\": {\n        \"utrie\": \"^1.0.2\"\n      }\n    },\n    \"node_modules/css.escape\": {\n      \"version\": \"1.5.1\",\n      \"resolved\": \"https://registry.npmjs.org/css.escape/-/css.escape-1.5.1.tgz\",\n      \"integrity\": \"sha512-YUifsXXuknHlUsmlgyY0PKzgPOr7/FjCePfHNt0jxm83wHZi44VDMQ7/fGNkjY3/jV1MC+1CmZbaHzugyeRtpg==\",\n      \"dev\": true\n    },\n    \"node_modules/cssesc\": {\n      \"version\": \"3.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/cssesc/-/cssesc-3.0.0.tgz\",\n      \"integrity\": \"sha512-/Tb/JcjK111nNScGob5MNtsntNM1aCNUDipB/TkwZFhyDrrE47SOx/18wF2bbjgc3ZzCSKW1T5nt5EbFoAz/Vg==\",\n      \"dev\": true,\n      \"bin\": {\n        \"cssesc\": \"bin/cssesc\"\n      },\n      \"engines\": {\n        \"node\": \">=4\"\n      }\n    },\n    \"node_modules/csstype\": {\n      \"version\": \"3.1.3\",\n      \"resolved\": \"https://registry.npmjs.org/csstype/-/csstype-3.1.3.tgz\",\n      \"integrity\": \"sha512-M1uQkMl8rQK/szD0LNhtqxIPLpimGm8sOBwU7lLnCpSbTyY3yeU1Vc7l4KT5zT4s/yOxHH5O7tIuuLOCnLADRw==\"\n    },\n    \"node_modules/debug\": {\n      \"version\": \"4.4.1\",\n      \"resolved\": \"https://registry.npmjs.org/debug/-/debug-4.4.1.tgz\",\n      \"integrity\": \"sha512-KcKCqiftBJcZr++7ykoDIEwSa3XWowTfNPo92BYxjXiyYEVrUQh2aLyhxBCwww+heortUFxEJYcRzosstTEBYQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"ms\": \"^2.1.3\"\n      },\n      \"engines\": {\n        \"node\": \">=6.0\"\n      },\n      \"peerDependenciesMeta\": {\n        \"supports-color\": {\n          \"optional\": true\n        }\n      }\n    },\n    \"node_modules/dedent\": {\n      \"version\": \"1.6.0\",\n      \"resolved\": \"https://registry.npmjs.org/dedent/-/dedent-1.6.0.tgz\",\n      \"integrity\": \"sha512-F1Z+5UCFpmQUzJa11agbyPVMbpgT/qA3/SKyJ1jyBgm7dUcUEa8v9JwDkerSQXfakBwFljIxhOJqGkjUwZ9FSA==\",\n      \"dev\": true,\n      \"peerDependencies\": {\n        \"babel-plugin-macros\": \"^3.1.0\"\n      },\n      \"peerDependenciesMeta\": {\n        \"babel-plugin-macros\": {\n          \"optional\": true\n        }\n      }\n    },\n    \"node_modules/deep-equal\": {\n      \"version\": \"2.2.3\",\n      \"resolved\": \"https://registry.npmjs.org/deep-equal/-/deep-equal-2.2.3.tgz\",\n      \"integrity\": \"sha512-ZIwpnevOurS8bpT4192sqAowWM76JDKSHYzMLty3BZGSswgq6pBaH3DhCSW5xVAZICZyKdOBPjwww5wfgT/6PA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"array-buffer-byte-length\": \"^1.0.0\",\n        \"call-bind\": \"^1.0.5\",\n        \"es-get-iterator\": \"^1.1.3\",\n        \"get-intrinsic\": \"^1.2.2\",\n        \"is-arguments\": \"^1.1.1\",\n        \"is-array-buffer\": \"^3.0.2\",\n        \"is-date-object\": \"^1.0.5\",\n        \"is-regex\": \"^1.1.4\",\n        \"is-shared-array-buffer\": \"^1.0.2\",\n        \"isarray\": \"^2.0.5\",\n        \"object-is\": \"^1.1.5\",\n        \"object-keys\": \"^1.1.1\",\n        \"object.assign\": \"^4.1.4\",\n        \"regexp.prototype.flags\": \"^1.5.1\",\n        \"side-channel\": \"^1.0.4\",\n        \"which-boxed-primitive\": \"^1.0.2\",\n        \"which-collection\": \"^1.0.1\",\n        \"which-typed-array\": \"^1.1.13\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/deepmerge\": {\n      \"version\": \"4.3.1\",\n      \"resolved\": \"https://registry.npmjs.org/deepmerge/-/deepmerge-4.3.1.tgz\",\n      \"integrity\": \"sha512-3sUqbMEc77XqpdNO7FRyRog+eW3ph+GYCbj+rK+uYyRMuwsVy0rMiVtPn+QJlKFvWP/1PYpapqYn0Me2knFn+A==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/define-data-property\": {\n      \"version\": \"1.1.4\",\n      \"resolved\": \"https://registry.npmjs.org/define-data-property/-/define-data-property-1.1.4.tgz\",\n      \"integrity\": \"sha512-rBMvIzlpA8v6E+SJZoo++HAYqsLrkg7MSfIinMPFhmkorw7X+dOXVJQs+QT69zGkzMyfDnIMN2Wid1+NbL3T+A==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"es-define-property\": \"^1.0.0\",\n        \"es-errors\": \"^1.3.0\",\n        \"gopd\": \"^1.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/define-properties\": {\n      \"version\": \"1.2.1\",\n      \"resolved\": \"https://registry.npmjs.org/define-properties/-/define-properties-1.2.1.tgz\",\n      \"integrity\": \"sha512-8QmQKqEASLd5nx0U1B1okLElbUuuttJ/AnYmRXbbbGDWh6uS208EjD4Xqq/I9wK7u0v6O08XhTWnt5XtEbR6Dg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"define-data-property\": \"^1.0.1\",\n        \"has-property-descriptors\": \"^1.0.0\",\n        \"object-keys\": \"^1.1.1\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/detect-gpu\": {\n      \"version\": \"5.0.70\",\n      \"resolved\": \"https://registry.npmjs.org/detect-gpu/-/detect-gpu-5.0.70.tgz\",\n      \"integrity\": \"sha512-bqerEP1Ese6nt3rFkwPnGbsUF9a4q+gMmpTVVOEzoCyeCc+y7/RvJnQZJx1JwhgQI5Ntg0Kgat8Uu7XpBqnz1w==\",\n      \"dependencies\": {\n        \"webgl-constants\": \"^1.1.1\"\n      }\n    },\n    \"node_modules/detect-newline\": {\n      \"version\": \"3.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/detect-newline/-/detect-newline-3.1.0.tgz\",\n      \"integrity\": \"sha512-TLz+x/vEXm/Y7P7wn1EJFNLxYpUD4TgMosxY6fAVJUnJMbupHBOncxyWUG9OpTaH9EBD7uFI5LfEgmMOc54DsA==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/didyoumean\": {\n      \"version\": \"1.2.2\",\n      \"resolved\": \"https://registry.npmjs.org/didyoumean/-/didyoumean-1.2.2.tgz\",\n      \"integrity\": \"sha512-gxtyfqMg7GKyhQmb056K7M3xszy/myH8w+B4RT+QXBQsvAOdc3XymqDDPHx1BgPgsdAA5SIifona89YtRATDzw==\",\n      \"dev\": true\n    },\n    \"node_modules/diff-sequences\": {\n      \"version\": \"29.6.3\",\n      \"resolved\": \"https://registry.npmjs.org/diff-sequences/-/diff-sequences-29.6.3.tgz\",\n      \"integrity\": \"sha512-EjePK1srD3P08o2j4f0ExnylqRs5B9tJjcp9t1krH2qRi8CCdsYfwe9JgSLurFBWwq4uOlipzfk5fHNvwFKr8Q==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \"^14.15.0 || ^16.10.0 || >=18.0.0\"\n      }\n    },\n    \"node_modules/dlv\": {\n      \"version\": \"1.1.3\",\n      \"resolved\": \"https://registry.npmjs.org/dlv/-/dlv-1.1.3.tgz\",\n      \"integrity\": \"sha512-+HlytyjlPKnIG8XuRG8WvmBP8xs8P71y+SKKS6ZXWoEgLuePxtDoUEiH7WkdePWrQ5JBpE6aoVqfZfJUQkjXwA==\",\n      \"dev\": true\n    },\n    \"node_modules/dom-accessibility-api\": {\n      \"version\": \"0.6.3\",\n      \"resolved\": \"https://registry.npmjs.org/dom-accessibility-api/-/dom-accessibility-api-0.6.3.tgz\",\n      \"integrity\": \"sha512-7ZgogeTnjuHbo+ct10G9Ffp0mif17idi0IyWNVA/wcwcm7NPOD/WEHVP3n7n3MhXqxoIYm8d6MuZohYWIZ4T3w==\",\n      \"dev\": true\n    },\n    \"node_modules/dompurify\": {\n      \"version\": \"2.5.8\",\n      \"resolved\": \"https://registry.npmjs.org/dompurify/-/dompurify-2.5.8.tgz\",\n      \"integrity\": \"sha512-o1vSNgrmYMQObbSSvF/1brBYEQPHhV1+gsmrusO7/GXtp1T9rCS8cXFqVxK/9crT1jA6Ccv+5MTSjBNqr7Sovw==\",\n      \"optional\": true\n    },\n    \"node_modules/draco3d\": {\n      \"version\": \"1.5.7\",\n      \"resolved\": \"https://registry.npmjs.org/draco3d/-/draco3d-1.5.7.tgz\",\n      \"integrity\": \"sha512-m6WCKt/erDXcw+70IJXnG7M3awwQPAsZvJGX5zY7beBqpELw6RDGkYVU0W43AFxye4pDZ5i2Lbyc/NNGqwjUVQ==\"\n    },\n    \"node_modules/dunder-proto\": {\n      \"version\": \"1.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/dunder-proto/-/dunder-proto-1.0.1.tgz\",\n      \"integrity\": \"sha512-KIN/nDJBQRcXw0MLVhZE9iQHmG68qAVIBg9CqmUYjmQIhgij9U5MFvrqkUL5FbtyyzZuOeOt0zdeRe4UY7ct+A==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"call-bind-apply-helpers\": \"^1.0.1\",\n        \"es-errors\": \"^1.3.0\",\n        \"gopd\": \"^1.2.0\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      }\n    },\n    \"node_modules/eastasianwidth\": {\n      \"version\": \"0.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/eastasianwidth/-/eastasianwidth-0.2.0.tgz\",\n      \"integrity\": \"sha512-I88TYZWc9XiYHRQ4/3c5rjjfgkjhLyW2luGIheGERbNQ6OY7yTybanSpDXZa8y7VUP9YmDcYa+eyq4ca7iLqWA==\",\n      \"dev\": true\n    },\n    \"node_modules/electron-to-chromium\": {\n      \"version\": \"1.5.182\",\n      \"resolved\": \"https://registry.npmjs.org/electron-to-chromium/-/electron-to-chromium-1.5.182.tgz\",\n      \"integrity\": \"sha512-Lv65Btwv9W4J9pyODI6EWpdnhfvrve/us5h1WspW8B2Fb0366REPtY3hX7ounk1CkV/TBjWCEvCBBbYbmV0qCA==\",\n      \"dev\": true\n    },\n    \"node_modules/emittery\": {\n      \"version\": \"0.13.1\",\n      \"resolved\": \"https://registry.npmjs.org/emittery/-/emittery-0.13.1.tgz\",\n      \"integrity\": \"sha512-DeWwawk6r5yR9jFgnDKYt4sLS0LmHJJi3ZOnb5/JdbYwj3nW+FxQnHIjhBKz8YLC7oRNPVM9NQ47I3CVx34eqQ==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=12\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sindresorhus/emittery?sponsor=1\"\n      }\n    },\n    \"node_modules/emoji-regex\": {\n      \"version\": \"8.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/emoji-regex/-/emoji-regex-8.0.0.tgz\",\n      \"integrity\": \"sha512-MSjYzcWNOA0ewAHpz0MxpYFvwg6yjy1NG3xteoqz644VCo/RPgnr1/GGt+ic3iJTzQ8Eu3TdM14SawnVUmGE6A==\",\n      \"dev\": true\n    },\n    \"node_modules/error-ex\": {\n      \"version\": \"1.3.2\",\n      \"resolved\": \"https://registry.npmjs.org/error-ex/-/error-ex-1.3.2.tgz\",\n      \"integrity\": \"sha512-7dFHNmqeFSEt2ZBsCriorKnn3Z2pj+fd9kmI6QoWw4//DL+icEBfc0U7qJCisqrTsKTjw4fNFy2pW9OqStD84g==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"is-arrayish\": \"^0.2.1\"\n      }\n    },\n    \"node_modules/es-define-property\": {\n      \"version\": \"1.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/es-define-property/-/es-define-property-1.0.1.tgz\",\n      \"integrity\": \"sha512-e3nRfgfUZ4rNGL232gUgX06QNyyez04KdjFrF+LTRoOXmrOgFKDg4BCdsjW8EnT69eqdYGmRpJwiPVYNrCaW3g==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      }\n    },\n    \"node_modules/es-errors\": {\n      \"version\": \"1.3.0\",\n      \"resolved\": \"https://registry.npmjs.org/es-errors/-/es-errors-1.3.0.tgz\",\n      \"integrity\": \"sha512-Zf5H2Kxt2xjTvbJvP2ZWLEICxA6j+hAmMzIlypy4xcBg1vKVnx89Wy0GbS+kf5cwCVFFzdCFh2XSCFNULS6csw==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      }\n    },\n    \"node_modules/es-get-iterator\": {\n      \"version\": \"1.1.3\",\n      \"resolved\": \"https://registry.npmjs.org/es-get-iterator/-/es-get-iterator-1.1.3.tgz\",\n      \"integrity\": \"sha512-sPZmqHBe6JIiTfN5q2pEi//TwxmAFHwj/XEuYjTuse78i8KxaqMTTzxPoFKuzRpDpTJ+0NAbpfenkmH2rePtuw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"call-bind\": \"^1.0.2\",\n        \"get-intrinsic\": \"^1.1.3\",\n        \"has-symbols\": \"^1.0.3\",\n        \"is-arguments\": \"^1.1.1\",\n        \"is-map\": \"^2.0.2\",\n        \"is-set\": \"^2.0.2\",\n        \"is-string\": \"^1.0.7\",\n        \"isarray\": \"^2.0.5\",\n        \"stop-iteration-iterator\": \"^1.0.0\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/es-object-atoms\": {\n      \"version\": \"1.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/es-object-atoms/-/es-object-atoms-1.1.1.tgz\",\n      \"integrity\": \"sha512-FGgH2h8zKNim9ljj7dankFPcICIK9Cp5bm+c2gQSYePhpaG5+esrLODihIorn+Pe6FGJzWhXQotPv73jTaldXA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"es-errors\": \"^1.3.0\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      }\n    },\n    \"node_modules/escalade\": {\n      \"version\": \"3.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/escalade/-/escalade-3.2.0.tgz\",\n      \"integrity\": \"sha512-WUj2qlxaQtO4g6Pq5c29GTcWGDyd8itL8zTlipgECz3JesAiiOKotd8JU6otB3PACgG6xkJUyVhboMS+bje/jA==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=6\"\n      }\n    },\n    \"node_modules/escape-string-regexp\": {\n      \"version\": \"2.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/escape-string-regexp/-/escape-string-regexp-2.0.0.tgz\",\n      \"integrity\": \"sha512-UpzcLCXolUWcNu5HtVMHYdXJjArjsF9C0aNnquZYY4uW/Vu0miy5YoWvbV345HauVvcAUnpRuhMMcqTcGOY2+w==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/esprima\": {\n      \"version\": \"4.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/esprima/-/esprima-4.0.1.tgz\",\n      \"integrity\": \"sha512-eGuFFw7Upda+g4p+QHvnW0RyTX/SVeJBDM/gCtMARO0cLuT2HcEKnTPvhjV6aGeqrCB/sbNop0Kszm0jsaWU4A==\",\n      \"dev\": true,\n      \"bin\": {\n        \"esparse\": \"bin/esparse.js\",\n        \"esvalidate\": \"bin/esvalidate.js\"\n      },\n      \"engines\": {\n        \"node\": \">=4\"\n      }\n    },\n    \"node_modules/execa\": {\n      \"version\": \"5.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/execa/-/execa-5.1.1.tgz\",\n      \"integrity\": \"sha512-8uSpZZocAZRBAPIEINJj3Lo9HyGitllczc27Eh5YYojjMFMn8yHMDMaUHE2Jqfq05D/wucwI4JGURyXt1vchyg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"cross-spawn\": \"^7.0.3\",\n        \"get-stream\": \"^6.0.0\",\n        \"human-signals\": \"^2.1.0\",\n        \"is-stream\": \"^2.0.0\",\n        \"merge-stream\": \"^2.0.0\",\n        \"npm-run-path\": \"^4.0.1\",\n        \"onetime\": \"^5.1.2\",\n        \"signal-exit\": \"^3.0.3\",\n        \"strip-final-newline\": \"^2.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=10\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sindresorhus/execa?sponsor=1\"\n      }\n    },\n    \"node_modules/exit\": {\n      \"version\": \"0.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/exit/-/exit-0.1.2.tgz\",\n      \"integrity\": \"sha512-Zk/eNKV2zbjpKzrsQ+n1G6poVbErQxJ0LBOJXaKZ1EViLzH+hrLu9cdXI4zw9dBQJslwBEpbQ2P1oS7nDxs6jQ==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">= 0.8.0\"\n      }\n    },\n    \"node_modules/expect\": {\n      \"version\": \"29.7.0\",\n      \"resolved\": \"https://registry.npmjs.org/expect/-/expect-29.7.0.tgz\",\n      \"integrity\": \"sha512-2Zks0hf1VLFYI1kbh0I5jP3KHHyCHpkfyHBzsSXRFgl/Bg9mWYfMW8oD+PdMPlEwy5HNsR9JutYy6pMeOh61nw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@jest/expect-utils\": \"^29.7.0\",\n        \"jest-get-type\": \"^29.6.3\",\n        \"jest-matcher-utils\": \"^29.7.0\",\n        \"jest-message-util\": \"^29.7.0\",\n        \"jest-util\": \"^29.7.0\"\n      },\n      \"engines\": {\n        \"node\": \"^14.15.0 || ^16.10.0 || >=18.0.0\"\n      }\n    },\n    \"node_modules/fast-glob\": {\n      \"version\": \"3.3.3\",\n      \"resolved\": \"https://registry.npmjs.org/fast-glob/-/fast-glob-3.3.3.tgz\",\n      \"integrity\": \"sha512-7MptL8U0cqcFdzIzwOTHoilX9x5BrNqye7Z/LuC7kCMRio1EMSyqRK3BEAUD7sXRq4iT4AzTVuZdhgQ2TCvYLg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@nodelib/fs.stat\": \"^2.0.2\",\n        \"@nodelib/fs.walk\": \"^1.2.3\",\n        \"glob-parent\": \"^5.1.2\",\n        \"merge2\": \"^1.3.0\",\n        \"micromatch\": \"^4.0.8\"\n      },\n      \"engines\": {\n        \"node\": \">=8.6.0\"\n      }\n    },\n    \"node_modules/fast-glob/node_modules/glob-parent\": {\n      \"version\": \"5.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/glob-parent/-/glob-parent-5.1.2.tgz\",\n      \"integrity\": \"sha512-AOIgSQCepiJYwP3ARnGx+5VnTu2HBYdzbGP45eLw1vr3zB3vZLeyed1sC9hnbcOc9/SrMyM5RPQrkGz4aS9Zow==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"is-glob\": \"^4.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">= 6\"\n      }\n    },\n    \"node_modules/fast-json-stable-stringify\": {\n      \"version\": \"2.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/fast-json-stable-stringify/-/fast-json-stable-stringify-2.1.0.tgz\",\n      \"integrity\": \"sha512-lhd/wF+Lk98HZoTCtlVraHtfh5XYijIjalXck7saUtuanSDyLMxnHhSXEDJqHxD7msR8D0uCmqlkwjCV8xvwHw==\",\n      \"dev\": true\n    },\n    \"node_modules/fastq\": {\n      \"version\": \"1.19.1\",\n      \"resolved\": \"https://registry.npmjs.org/fastq/-/fastq-1.19.1.tgz\",\n      \"integrity\": \"sha512-GwLTyxkCXjXbxqIhTsMI2Nui8huMPtnxg7krajPJAjnEG/iiOS7i+zCtWGZR9G0NBKbXKh6X9m9UIsYX/N6vvQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"reusify\": \"^1.0.4\"\n      }\n    },\n    \"node_modules/fb-watchman\": {\n      \"version\": \"2.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/fb-watchman/-/fb-watchman-2.0.2.tgz\",\n      \"integrity\": \"sha512-p5161BqbuCaSnB8jIbzQHOlpgsPmK5rJVDfDKO91Axs5NC1uu3HRQm6wt9cd9/+GtQQIO53JdGXXoyDpTAsgYA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"bser\": \"2.1.1\"\n      }\n    },\n    \"node_modules/fflate\": {\n      \"version\": \"0.8.2\",\n      \"resolved\": \"https://registry.npmjs.org/fflate/-/fflate-0.8.2.tgz\",\n      \"integrity\": \"sha512-cPJU47OaAoCbg0pBvzsgpTPhmhqI5eJjh/JIu8tPj5q+T7iLvW/JAYUqmE7KOB4R1ZyEhzBaIQpQpardBF5z8A==\"\n    },\n    \"node_modules/file-saver\": {\n      \"version\": \"2.0.5\",\n      \"resolved\": \"https://registry.npmjs.org/file-saver/-/file-saver-2.0.5.tgz\",\n      \"integrity\": \"sha512-P9bmyZ3h/PRG+Nzga+rbdI4OEpNDzAVyy74uVO9ATgzLK6VtAsYybF/+TOCvrc0MO793d6+42lLyZTw7/ArVzA==\"\n    },\n    \"node_modules/fill-range\": {\n      \"version\": \"7.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/fill-range/-/fill-range-7.1.1.tgz\",\n      \"integrity\": \"sha512-YsGpe3WHLK8ZYi4tWDg2Jy3ebRz2rXowDxnld4bkQB00cc/1Zw9AWnC0i9ztDJitivtQvaI9KaLyKrc+hBW0yg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"to-regex-range\": \"^5.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/find-up\": {\n      \"version\": \"4.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/find-up/-/find-up-4.1.0.tgz\",\n      \"integrity\": \"sha512-PpOwAdQ/YlXQ2vj8a3h8IipDuYRi3wceVQQGYWxNINccq40Anw7BlsEXCMbt1Zt+OLA6Fq9suIpIWD0OsnISlw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"locate-path\": \"^5.0.0\",\n        \"path-exists\": \"^4.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/for-each\": {\n      \"version\": \"0.3.5\",\n      \"resolved\": \"https://registry.npmjs.org/for-each/-/for-each-0.3.5.tgz\",\n      \"integrity\": \"sha512-dKx12eRCVIzqCxFGplyFKJMPvLEWgmNtUrpTiJIR5u97zEhRG8ySrtboPHZXx7daLxQVrl643cTzbab2tkQjxg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"is-callable\": \"^1.2.7\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/foreground-child\": {\n      \"version\": \"3.3.1\",\n      \"resolved\": \"https://registry.npmjs.org/foreground-child/-/foreground-child-3.3.1.tgz\",\n      \"integrity\": \"sha512-gIXjKqtFuWEgzFRJA9WCQeSJLZDjgJUOMCMzxtvFq/37KojM1BFGufqsCy0r4qSQmYLsZYMeyRqzIWOMup03sw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"cross-spawn\": \"^7.0.6\",\n        \"signal-exit\": \"^4.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">=14\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/isaacs\"\n      }\n    },\n    \"node_modules/foreground-child/node_modules/signal-exit\": {\n      \"version\": \"4.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/signal-exit/-/signal-exit-4.1.0.tgz\",\n      \"integrity\": \"sha512-bzyZ1e88w9O1iNJbKnOlvYTrWPDl46O1bG0D3XInv+9tkPrxrN8jUUTiFlDkkmKWgn1M6CfIA13SuGqOa9Korw==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=14\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/isaacs\"\n      }\n    },\n    \"node_modules/fraction.js\": {\n      \"version\": \"4.3.7\",\n      \"resolved\": \"https://registry.npmjs.org/fraction.js/-/fraction.js-4.3.7.tgz\",\n      \"integrity\": \"sha512-ZsDfxO51wGAXREY55a7la9LScWpwv9RxIrYABrlvOFBlH/ShPnrtsXeuUIfXKKOVicNxQ+o8JTbJvjS4M89yew==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \"*\"\n      },\n      \"funding\": {\n        \"type\": \"patreon\",\n        \"url\": \"https://github.com/sponsors/rawify\"\n      }\n    },\n    \"node_modules/fs.realpath\": {\n      \"version\": \"1.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/fs.realpath/-/fs.realpath-1.0.0.tgz\",\n      \"integrity\": \"sha512-OO0pH2lK6a0hZnAdau5ItzHPI6pUlvI7jMVnxUQRtw4owF2wk8lOSabtGDCTP4Ggrg2MbGnWO9X8K1t4+fGMDw==\",\n      \"dev\": true\n    },\n    \"node_modules/fsevents\": {\n      \"version\": \"2.3.3\",\n      \"resolved\": \"https://registry.npmjs.org/fsevents/-/fsevents-2.3.3.tgz\",\n      \"integrity\": \"sha512-5xoDfX+fL7faATnagmWPpbFtwh/R77WmMMqqHGS65C3vvB0YHrgF+B1YmZ3441tMj5n63k0212XNoJwzlhffQw==\",\n      \"dev\": true,\n      \"hasInstallScript\": true,\n      \"optional\": true,\n      \"os\": [\n        \"darwin\"\n      ],\n      \"engines\": {\n        \"node\": \"^8.16.0 || ^10.6.0 || >=11.0.0\"\n      }\n    },\n    \"node_modules/function-bind\": {\n      \"version\": \"1.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/function-bind/-/function-bind-1.1.2.tgz\",\n      \"integrity\": \"sha512-7XHNxH7qX9xG5mIwxkhumTox/MIRNcOgDrxWsMt2pAr23WHp6MrRlN7FBSFpCpr+oVO0F744iUgR82nJMfG2SA==\",\n      \"dev\": true,\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/functions-have-names\": {\n      \"version\": \"1.2.3\",\n      \"resolved\": \"https://registry.npmjs.org/functions-have-names/-/functions-have-names-1.2.3.tgz\",\n      \"integrity\": \"sha512-xckBUXyTIqT97tq2x2AMb+g163b5JFysYk0x4qxNFwbfQkmNZoiRHb6sPzI9/QV33WeuvVYBUIiD4NzNIyqaRQ==\",\n      \"dev\": true,\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/gensync\": {\n      \"version\": \"1.0.0-beta.2\",\n      \"resolved\": \"https://registry.npmjs.org/gensync/-/gensync-1.0.0-beta.2.tgz\",\n      \"integrity\": \"sha512-3hN7NaskYvMDLQY55gnW3NQ+mesEAepTqlg+VEbj7zzqEMBVNhzcGYYeqFo/TlYz6eQiFcp1HcsCZO+nGgS8zg==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=6.9.0\"\n      }\n    },\n    \"node_modules/get-caller-file\": {\n      \"version\": \"2.0.5\",\n      \"resolved\": \"https://registry.npmjs.org/get-caller-file/-/get-caller-file-2.0.5.tgz\",\n      \"integrity\": \"sha512-DyFP3BM/3YHTQOCUL/w0OZHR0lpKeGrxotcHWcqNEdnltqFwXVfhEBQ94eIo34AfQpo0rGki4cyIiftY06h2Fg==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \"6.* || 8.* || >= 10.*\"\n      }\n    },\n    \"node_modules/get-intrinsic\": {\n      \"version\": \"1.3.0\",\n      \"resolved\": \"https://registry.npmjs.org/get-intrinsic/-/get-intrinsic-1.3.0.tgz\",\n      \"integrity\": \"sha512-9fSjSaos/fRIVIp+xSJlE6lfwhES7LNtKaCBIamHsjr2na1BiABJPo0mOjjz8GJDURarmCPGqaiVg5mfjb98CQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"call-bind-apply-helpers\": \"^1.0.2\",\n        \"es-define-property\": \"^1.0.1\",\n        \"es-errors\": \"^1.3.0\",\n        \"es-object-atoms\": \"^1.1.1\",\n        \"function-bind\": \"^1.1.2\",\n        \"get-proto\": \"^1.0.1\",\n        \"gopd\": \"^1.2.0\",\n        \"has-symbols\": \"^1.1.0\",\n        \"hasown\": \"^2.0.2\",\n        \"math-intrinsics\": \"^1.1.0\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/get-package-type\": {\n      \"version\": \"0.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/get-package-type/-/get-package-type-0.1.0.tgz\",\n      \"integrity\": \"sha512-pjzuKtY64GYfWizNAJ0fr9VqttZkNiK2iS430LtIHzjBEr6bX8Am2zm4sW4Ro5wjWW5cAlRL1qAMTcXbjNAO2Q==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=8.0.0\"\n      }\n    },\n    \"node_modules/get-proto\": {\n      \"version\": \"1.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/get-proto/-/get-proto-1.0.1.tgz\",\n      \"integrity\": \"sha512-sTSfBjoXBp89JvIKIefqw7U2CCebsc74kiY6awiGogKtoSGbgjYE/G/+l9sF3MWFPNc9IcoOC4ODfKHfxFmp0g==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"dunder-proto\": \"^1.0.1\",\n        \"es-object-atoms\": \"^1.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      }\n    },\n    \"node_modules/get-stream\": {\n      \"version\": \"6.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/get-stream/-/get-stream-6.0.1.tgz\",\n      \"integrity\": \"sha512-ts6Wi+2j3jQjqi70w5AlN8DFnkSwC+MqmxEzdEALB2qXZYV3X/b1CTfgPLGJNMeAWxdPfU8FO1ms3NUfaHCPYg==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=10\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    },\n    \"node_modules/glob\": {\n      \"version\": \"7.2.3\",\n      \"resolved\": \"https://registry.npmjs.org/glob/-/glob-7.2.3.tgz\",\n      \"integrity\": \"sha512-nFR0zLpU2YCaRxwoCJvL6UvCH2JFyFVIvwTLsIf21AuHlMskA1hhTdk+LlYJtOlYt9v6dvszD2BGRqBL+iQK9Q==\",\n      \"deprecated\": \"Glob versions prior to v9 are no longer supported\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"fs.realpath\": \"^1.0.0\",\n        \"inflight\": \"^1.0.4\",\n        \"inherits\": \"2\",\n        \"minimatch\": \"^3.1.1\",\n        \"once\": \"^1.3.0\",\n        \"path-is-absolute\": \"^1.0.0\"\n      },\n      \"engines\": {\n        \"node\": \"*\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/isaacs\"\n      }\n    },\n    \"node_modules/glob-parent\": {\n      \"version\": \"6.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/glob-parent/-/glob-parent-6.0.2.tgz\",\n      \"integrity\": \"sha512-XxwI8EOhVQgWp6iDL+3b0r86f4d6AX6zSU55HfB4ydCEuXLXc5FcYeOu+nnGftS4TEju/11rt4KJPTMgbfmv4A==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"is-glob\": \"^4.0.3\"\n      },\n      \"engines\": {\n        \"node\": \">=10.13.0\"\n      }\n    },\n    \"node_modules/glsl-noise\": {\n      \"version\": \"0.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/glsl-noise/-/glsl-noise-0.0.0.tgz\",\n      \"integrity\": \"sha512-b/ZCF6amfAUb7dJM/MxRs7AetQEahYzJ8PtgfrmEdtw6uyGOr+ZSGtgjFm6mfsBkxJ4d2W7kg+Nlqzqvn3Bc0w==\"\n    },\n    \"node_modules/gopd\": {\n      \"version\": \"1.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/gopd/-/gopd-1.2.0.tgz\",\n      \"integrity\": \"sha512-ZUKRh6/kUFoAiTAtTYPZJ3hw9wNxx+BIBOijnlG9PnrJsCcSjs1wyyD6vJpaYtgnzDrKYRSqf3OO6Rfa93xsRg==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/graceful-fs\": {\n      \"version\": \"4.2.11\",\n      \"resolved\": \"https://registry.npmjs.org/graceful-fs/-/graceful-fs-4.2.11.tgz\",\n      \"integrity\": \"sha512-RbJ5/jmFcNNCcDV5o9eTnBLJ/HszWV0P73bc+Ff4nS/rJj+YaS6IGyiOL0VoBYX+l1Wrl3k63h/KrH+nhJ0XvQ==\",\n      \"dev\": true\n    },\n    \"node_modules/has-bigints\": {\n      \"version\": \"1.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/has-bigints/-/has-bigints-1.1.0.tgz\",\n      \"integrity\": \"sha512-R3pbpkcIqv2Pm3dUwgjclDRVmWpTJW2DcMzcIhEXEx1oh/CEMObMm3KLmRJOdvhM7o4uQBnwr8pzRK2sJWIqfg==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/has-flag\": {\n      \"version\": \"4.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/has-flag/-/has-flag-4.0.0.tgz\",\n      \"integrity\": \"sha512-EykJT/Q1KjTWctppgIAgfSO0tKVuZUjhgMr17kqTumMl6Afv3EISleU7qZUzoXDFTAHTDC4NOoG/ZxU3EvlMPQ==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/has-property-descriptors\": {\n      \"version\": \"1.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/has-property-descriptors/-/has-property-descriptors-1.0.2.tgz\",\n      \"integrity\": \"sha512-55JNKuIW+vq4Ke1BjOTjM2YctQIvCT7GFzHwmfZPGo5wnrgkid0YQtnAleFSqumZm4az3n2BS+erby5ipJdgrg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"es-define-property\": \"^1.0.0\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/has-symbols\": {\n      \"version\": \"1.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/has-symbols/-/has-symbols-1.1.0.tgz\",\n      \"integrity\": \"sha512-1cDNdwJ2Jaohmb3sg4OmKaMBwuC48sYni5HUw2DvsC8LjGTLK9h+eb1X6RyuOHe4hT0ULCW68iomhjUoKUqlPQ==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/has-tostringtag\": {\n      \"version\": \"1.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/has-tostringtag/-/has-tostringtag-1.0.2.tgz\",\n      \"integrity\": \"sha512-NqADB8VjPFLM2V0VvHUewwwsw0ZWBaIdgo+ieHtK3hasLz4qeCRjYcqfB6AQrBggRKppKF8L52/VqdVsO47Dlw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"has-symbols\": \"^1.0.3\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/hasown\": {\n      \"version\": \"2.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/hasown/-/hasown-2.0.2.tgz\",\n      \"integrity\": \"sha512-0hJU9SCPvmMzIBdZFqNPXWa6dqh7WdH0cII9y+CyS8rG3nL48Bclra9HmKhVVUHyPWNH5Y7xDwAB7bfgSjkUMQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"function-bind\": \"^1.1.2\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      }\n    },\n    \"node_modules/hls.js\": {\n      \"version\": \"1.6.7\",\n      \"resolved\": \"https://registry.npmjs.org/hls.js/-/hls.js-1.6.7.tgz\",\n      \"integrity\": \"sha512-QW2fnwDGKGc9DwQUGLbmMOz8G48UZK7PVNJPcOUql1b8jubKx4/eMHNP5mGqr6tYlJNDG1g10Lx2U/qPzL6zwQ==\"\n    },\n    \"node_modules/html-escaper\": {\n      \"version\": \"2.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/html-escaper/-/html-escaper-2.0.2.tgz\",\n      \"integrity\": \"sha512-H2iMtd0I4Mt5eYiapRdIDjp+XzelXQ0tFE4JS7YFwFevXXMmOp9myNrUvCg0D6ws8iqkRPBfKHgbwig1SmlLfg==\",\n      \"dev\": true\n    },\n    \"node_modules/html2canvas\": {\n      \"version\": \"1.4.1\",\n      \"resolved\": \"https://registry.npmjs.org/html2canvas/-/html2canvas-1.4.1.tgz\",\n      \"integrity\": \"sha512-fPU6BHNpsyIhr8yyMpTLLxAbkaK8ArIBcmZIRiBLiDhjeqvXolaEmDGmELFuX9I4xDcaKKcJl+TKZLqruBbmWA==\",\n      \"optional\": true,\n      \"dependencies\": {\n        \"css-line-break\": \"^2.1.0\",\n        \"text-segmentation\": \"^1.0.3\"\n      },\n      \"engines\": {\n        \"node\": \">=8.0.0\"\n      }\n    },\n    \"node_modules/human-signals\": {\n      \"version\": \"2.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/human-signals/-/human-signals-2.1.0.tgz\",\n      \"integrity\": \"sha512-B4FFZ6q/T2jhhksgkbEW3HBvWIfDW85snkQgawt07S7J5QXTk6BkNV+0yAeZrM5QpMAdYlocGoljn0sJ/WQkFw==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=10.17.0\"\n      }\n    },\n    \"node_modules/ieee754\": {\n      \"version\": \"1.2.1\",\n      \"resolved\": \"https://registry.npmjs.org/ieee754/-/ieee754-1.2.1.tgz\",\n      \"integrity\": \"sha512-dcyqhDvX1C46lXZcVqCpK+FtMRQVdIMN6/Df5js2zouUsqG7I6sFxitIC+7KYK29KdXOLHdu9zL4sFnoVQnqaA==\",\n      \"funding\": [\n        {\n          \"type\": \"github\",\n          \"url\": \"https://github.com/sponsors/feross\"\n        },\n        {\n          \"type\": \"patreon\",\n          \"url\": \"https://www.patreon.com/feross\"\n        },\n        {\n          \"type\": \"consulting\",\n          \"url\": \"https://feross.org/support\"\n        }\n      ]\n    },\n    \"node_modules/immediate\": {\n      \"version\": \"3.0.6\",\n      \"resolved\": \"https://registry.npmjs.org/immediate/-/immediate-3.0.6.tgz\",\n      \"integrity\": \"sha512-XXOFtyqDjNDAQxVfYxuF7g9Il/IbWmmlQg2MYKOH8ExIT1qg6xc4zyS3HaEEATgs1btfzxq15ciUiY7gjSXRGQ==\"\n    },\n    \"node_modules/import-local\": {\n      \"version\": \"3.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/import-local/-/import-local-3.2.0.tgz\",\n      \"integrity\": \"sha512-2SPlun1JUPWoM6t3F0dw0FkCF/jWY8kttcY4f599GLTSjh2OCuuhdTkJQsEcZzBqbXZGKMK2OqW1oZsjtf/gQA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"pkg-dir\": \"^4.2.0\",\n        \"resolve-cwd\": \"^3.0.0\"\n      },\n      \"bin\": {\n        \"import-local-fixture\": \"fixtures/cli.js\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    },\n    \"node_modules/imurmurhash\": {\n      \"version\": \"0.1.4\",\n      \"resolved\": \"https://registry.npmjs.org/imurmurhash/-/imurmurhash-0.1.4.tgz\",\n      \"integrity\": \"sha512-JmXMZ6wuvDmLiHEml9ykzqO6lwFbof0GG4IkcGaENdCRDDmMVnny7s5HsIgHCbaq0w2MyPhDqkhTUgS2LU2PHA==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=0.8.19\"\n      }\n    },\n    \"node_modules/indent-string\": {\n      \"version\": \"4.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/indent-string/-/indent-string-4.0.0.tgz\",\n      \"integrity\": \"sha512-EdDDZu4A2OyIK7Lr/2zG+w5jmbuk1DVBnEwREQvBzspBJkCEbRa8GxU1lghYcaGJCnRWibjDXlq779X1/y5xwg==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/inflight\": {\n      \"version\": \"1.0.6\",\n      \"resolved\": \"https://registry.npmjs.org/inflight/-/inflight-1.0.6.tgz\",\n      \"integrity\": \"sha512-k92I/b08q4wvFscXCLvqfsHCrjrF7yiXsQuIVvVE7N82W3+aqpzuUdBbfhWcy/FZR3/4IgflMgKLOsvPDrGCJA==\",\n      \"deprecated\": \"This module is not supported, and leaks memory. Do not use it. Check out lru-cache if you want a good and tested way to coalesce async requests by a key value, which is much more comprehensive and powerful.\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"once\": \"^1.3.0\",\n        \"wrappy\": \"1\"\n      }\n    },\n    \"node_modules/inherits\": {\n      \"version\": \"2.0.4\",\n      \"resolved\": \"https://registry.npmjs.org/inherits/-/inherits-2.0.4.tgz\",\n      \"integrity\": \"sha512-k/vGaX4/Yla3WzyMCvTQOXYeIHvqOKtnqBduzTHpzpQZzAskKMhZ2K+EnBiSM9zGSoIFeMpXKxa4dYeZIQqewQ==\",\n      \"dev\": true\n    },\n    \"node_modules/internal-slot\": {\n      \"version\": \"1.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/internal-slot/-/internal-slot-1.1.0.tgz\",\n      \"integrity\": \"sha512-4gd7VpWNQNB4UKKCFFVcp1AVv+FMOgs9NKzjHKusc8jTMhd5eL1NqQqOpE0KzMds804/yHlglp3uxgluOqAPLw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"es-errors\": \"^1.3.0\",\n        \"hasown\": \"^2.0.2\",\n        \"side-channel\": \"^1.1.0\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      }\n    },\n    \"node_modules/is-arguments\": {\n      \"version\": \"1.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/is-arguments/-/is-arguments-1.2.0.tgz\",\n      \"integrity\": \"sha512-7bVbi0huj/wrIAOzb8U1aszg9kdi3KN/CyU19CTI7tAoZYEZoL9yCDXpbXN+uPsuWnP02cyug1gleqq+TU+YCA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"call-bound\": \"^1.0.2\",\n        \"has-tostringtag\": \"^1.0.2\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/is-array-buffer\": {\n      \"version\": \"3.0.5\",\n      \"resolved\": \"https://registry.npmjs.org/is-array-buffer/-/is-array-buffer-3.0.5.tgz\",\n      \"integrity\": \"sha512-DDfANUiiG2wC1qawP66qlTugJeL5HyzMpfr8lLK+jMQirGzNod0B12cFB/9q838Ru27sBwfw78/rdoU7RERz6A==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"call-bind\": \"^1.0.8\",\n        \"call-bound\": \"^1.0.3\",\n        \"get-intrinsic\": \"^1.2.6\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/is-arrayish\": {\n      \"version\": \"0.2.1\",\n      \"resolved\": \"https://registry.npmjs.org/is-arrayish/-/is-arrayish-0.2.1.tgz\",\n      \"integrity\": \"sha512-zz06S8t0ozoDXMG+ube26zeCTNXcKIPJZJi8hBrF4idCLms4CG9QtK7qBl1boi5ODzFpjswb5JPmHCbMpjaYzg==\",\n      \"dev\": true\n    },\n    \"node_modules/is-bigint\": {\n      \"version\": \"1.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/is-bigint/-/is-bigint-1.1.0.tgz\",\n      \"integrity\": \"sha512-n4ZT37wG78iz03xPRKJrHTdZbe3IicyucEtdRsV5yglwc3GyUfbAfpSeD0FJ41NbUNSt5wbhqfp1fS+BgnvDFQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"has-bigints\": \"^1.0.2\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/is-binary-path\": {\n      \"version\": \"2.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/is-binary-path/-/is-binary-path-2.1.0.tgz\",\n      \"integrity\": \"sha512-ZMERYes6pDydyuGidse7OsHxtbI7WVeUEozgR/g7rd0xUimYNlvZRE/K2MgZTjWy725IfelLeVcEM97mmtRGXw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"binary-extensions\": \"^2.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/is-boolean-object\": {\n      \"version\": \"1.2.2\",\n      \"resolved\": \"https://registry.npmjs.org/is-boolean-object/-/is-boolean-object-1.2.2.tgz\",\n      \"integrity\": \"sha512-wa56o2/ElJMYqjCjGkXri7it5FbebW5usLw/nPmCMs5DeZ7eziSYZhSmPRn0txqeW4LnAmQQU7FgqLpsEFKM4A==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"call-bound\": \"^1.0.3\",\n        \"has-tostringtag\": \"^1.0.2\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/is-callable\": {\n      \"version\": \"1.2.7\",\n      \"resolved\": \"https://registry.npmjs.org/is-callable/-/is-callable-1.2.7.tgz\",\n      \"integrity\": \"sha512-1BC0BVFhS/p0qtw6enp8e+8OD0UrK0oFLztSjNzhcKA3WDuJxxAPXzPuPtKkjEY9UUoEWlX/8fgKeu2S8i9JTA==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/is-core-module\": {\n      \"version\": \"2.16.1\",\n      \"resolved\": \"https://registry.npmjs.org/is-core-module/-/is-core-module-2.16.1.tgz\",\n      \"integrity\": \"sha512-UfoeMA6fIJ8wTYFEUjelnaGI67v6+N7qXJEvQuIGa99l4xsCruSYOVSQ0uPANn4dAzm8lkYPaKLrrijLq7x23w==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"hasown\": \"^2.0.2\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/is-date-object\": {\n      \"version\": \"1.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/is-date-object/-/is-date-object-1.1.0.tgz\",\n      \"integrity\": \"sha512-PwwhEakHVKTdRNVOw+/Gyh0+MzlCl4R6qKvkhuvLtPMggI1WAHt9sOwZxQLSGpUaDnrdyDsomoRgNnCfKNSXXg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"call-bound\": \"^1.0.2\",\n        \"has-tostringtag\": \"^1.0.2\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/is-extglob\": {\n      \"version\": \"2.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/is-extglob/-/is-extglob-2.1.1.tgz\",\n      \"integrity\": \"sha512-SbKbANkN603Vi4jEZv49LeVJMn4yGwsbzZworEoyEiutsN3nJYdbO36zfhGJ6QEDpOZIFkDtnq5JRxmvl3jsoQ==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/is-fullwidth-code-point\": {\n      \"version\": \"3.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/is-fullwidth-code-point/-/is-fullwidth-code-point-3.0.0.tgz\",\n      \"integrity\": \"sha512-zymm5+u+sCsSWyD9qNaejV3DFvhCKclKdizYaJUuHA83RLjb7nSuGnddCHGv0hk+KY7BMAlsWeK4Ueg6EV6XQg==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/is-generator-fn\": {\n      \"version\": \"2.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/is-generator-fn/-/is-generator-fn-2.1.0.tgz\",\n      \"integrity\": \"sha512-cTIB4yPYL/Grw0EaSzASzg6bBy9gqCofvWN8okThAYIxKJZC+udlRAmGbM0XLeniEJSs8uEgHPGuHSe1XsOLSQ==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=6\"\n      }\n    },\n    \"node_modules/is-glob\": {\n      \"version\": \"4.0.3\",\n      \"resolved\": \"https://registry.npmjs.org/is-glob/-/is-glob-4.0.3.tgz\",\n      \"integrity\": \"sha512-xelSayHH36ZgE7ZWhli7pW34hNbNl8Ojv5KVmkJD4hBdD3th8Tfk9vYasLM+mXWOZhFkgZfxhLSnrwRr4elSSg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"is-extglob\": \"^2.1.1\"\n      },\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/is-map\": {\n      \"version\": \"2.0.3\",\n      \"resolved\": \"https://registry.npmjs.org/is-map/-/is-map-2.0.3.tgz\",\n      \"integrity\": \"sha512-1Qed0/Hr2m+YqxnM09CjA2d/i6YZNfF6R2oRAOj36eUdS6qIV/huPJNSEpKbupewFs+ZsJlxsjjPbc0/afW6Lw==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/is-number\": {\n      \"version\": \"7.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/is-number/-/is-number-7.0.0.tgz\",\n      \"integrity\": \"sha512-41Cifkg6e8TylSpdtTpeLVMqvSBEVzTttHvERD741+pnZ8ANv0004MRL43QKPDlK9cGvNp6NZWZUBlbGXYxxng==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=0.12.0\"\n      }\n    },\n    \"node_modules/is-number-object\": {\n      \"version\": \"1.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/is-number-object/-/is-number-object-1.1.1.tgz\",\n      \"integrity\": \"sha512-lZhclumE1G6VYD8VHe35wFaIif+CTy5SJIi5+3y4psDgWu4wPDoBhF8NxUOinEc7pHgiTsT6MaBb92rKhhD+Xw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"call-bound\": \"^1.0.3\",\n        \"has-tostringtag\": \"^1.0.2\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/is-promise\": {\n      \"version\": \"2.2.2\",\n      \"resolved\": \"https://registry.npmjs.org/is-promise/-/is-promise-2.2.2.tgz\",\n      \"integrity\": \"sha512-+lP4/6lKUBfQjZ2pdxThZvLUAafmZb8OAxFb8XXtiQmS35INgr85hdOGoEs124ez1FCnZJt6jau/T+alh58QFQ==\"\n    },\n    \"node_modules/is-regex\": {\n      \"version\": \"1.2.1\",\n      \"resolved\": \"https://registry.npmjs.org/is-regex/-/is-regex-1.2.1.tgz\",\n      \"integrity\": \"sha512-MjYsKHO5O7mCsmRGxWcLWheFqN9DJ/2TmngvjKXihe6efViPqc274+Fx/4fYj/r03+ESvBdTXK0V6tA3rgez1g==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"call-bound\": \"^1.0.2\",\n        \"gopd\": \"^1.2.0\",\n        \"has-tostringtag\": \"^1.0.2\",\n        \"hasown\": \"^2.0.2\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/is-set\": {\n      \"version\": \"2.0.3\",\n      \"resolved\": \"https://registry.npmjs.org/is-set/-/is-set-2.0.3.tgz\",\n      \"integrity\": \"sha512-iPAjerrse27/ygGLxw+EBR9agv9Y6uLeYVJMu+QNCoouJ1/1ri0mGrcWpfCqFZuzzx3WjtwxG098X+n4OuRkPg==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/is-shared-array-buffer\": {\n      \"version\": \"1.0.4\",\n      \"resolved\": \"https://registry.npmjs.org/is-shared-array-buffer/-/is-shared-array-buffer-1.0.4.tgz\",\n      \"integrity\": \"sha512-ISWac8drv4ZGfwKl5slpHG9OwPNty4jOWPRIhBpxOoD+hqITiwuipOQ2bNthAzwA3B4fIjO4Nln74N0S9byq8A==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"call-bound\": \"^1.0.3\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/is-stream\": {\n      \"version\": \"2.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/is-stream/-/is-stream-2.0.1.tgz\",\n      \"integrity\": \"sha512-hFoiJiTl63nn+kstHGBtewWSKnQLpyb155KHheA1l39uvtO9nWIop1p3udqPcUd/xbF1VLMO4n7OI6p7RbngDg==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=8\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    },\n    \"node_modules/is-string\": {\n      \"version\": \"1.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/is-string/-/is-string-1.1.1.tgz\",\n      \"integrity\": \"sha512-BtEeSsoaQjlSPBemMQIrY1MY0uM6vnS1g5fmufYOtnxLGUZM2178PKbhsk7Ffv58IX+ZtcvoGwccYsh0PglkAA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"call-bound\": \"^1.0.3\",\n        \"has-tostringtag\": \"^1.0.2\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/is-symbol\": {\n      \"version\": \"1.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/is-symbol/-/is-symbol-1.1.1.tgz\",\n      \"integrity\": \"sha512-9gGx6GTtCQM73BgmHQXfDmLtfjjTUDSyoxTCbp5WtoixAhfgsDirWIcVQ/IHpvI5Vgd5i/J5F7B9cN/WlVbC/w==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"call-bound\": \"^1.0.2\",\n        \"has-symbols\": \"^1.1.0\",\n        \"safe-regex-test\": \"^1.1.0\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/is-weakmap\": {\n      \"version\": \"2.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/is-weakmap/-/is-weakmap-2.0.2.tgz\",\n      \"integrity\": \"sha512-K5pXYOm9wqY1RgjpL3YTkF39tni1XajUIkawTLUo9EZEVUFga5gSQJF8nNS7ZwJQ02y+1YCNYcMh+HIf1ZqE+w==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/is-weakset\": {\n      \"version\": \"2.0.4\",\n      \"resolved\": \"https://registry.npmjs.org/is-weakset/-/is-weakset-2.0.4.tgz\",\n      \"integrity\": \"sha512-mfcwb6IzQyOKTs84CQMrOwW4gQcaTOAWJ0zzJCl2WSPDrWk/OzDaImWFH3djXhb24g4eudZfLRozAvPGw4d9hQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"call-bound\": \"^1.0.3\",\n        \"get-intrinsic\": \"^1.2.6\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/isarray\": {\n      \"version\": \"2.0.5\",\n      \"resolved\": \"https://registry.npmjs.org/isarray/-/isarray-2.0.5.tgz\",\n      \"integrity\": \"sha512-xHjhDr3cNBK0BzdUJSPXZntQUx/mwMS5Rw4A7lPJ90XGAO6ISP/ePDNuo0vhqOZU+UD5JoodwCAAoZQd3FeAKw==\",\n      \"dev\": true\n    },\n    \"node_modules/isexe\": {\n      \"version\": \"2.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/isexe/-/isexe-2.0.0.tgz\",\n      \"integrity\": \"sha512-RHxMLp9lnKHGHRng9QFhRCMbYAcVpn69smSGcq3f36xjgVVWThj4qqLbTLlq7Ssj8B+fIQ1EuCEGI2lKsyQeIw==\"\n    },\n    \"node_modules/istanbul-lib-coverage\": {\n      \"version\": \"3.2.2\",\n      \"resolved\": \"https://registry.npmjs.org/istanbul-lib-coverage/-/istanbul-lib-coverage-3.2.2.tgz\",\n      \"integrity\": \"sha512-O8dpsF+r0WV/8MNRKfnmrtCWhuKjxrq2w+jpzBL5UZKTi2LeVWnWOmWRxFlesJONmc+wLAGvKQZEOanko0LFTg==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/istanbul-lib-instrument\": {\n      \"version\": \"6.0.3\",\n      \"resolved\": \"https://registry.npmjs.org/istanbul-lib-instrument/-/istanbul-lib-instrument-6.0.3.tgz\",\n      \"integrity\": \"sha512-Vtgk7L/R2JHyyGW07spoFlB8/lpjiOLTjMdms6AFMraYt3BaJauod/NGrfnVG/y4Ix1JEuMRPDPEj2ua+zz1/Q==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@babel/core\": \"^7.23.9\",\n        \"@babel/parser\": \"^7.23.9\",\n        \"@istanbuljs/schema\": \"^0.1.3\",\n        \"istanbul-lib-coverage\": \"^3.2.0\",\n        \"semver\": \"^7.5.4\"\n      },\n      \"engines\": {\n        \"node\": \">=10\"\n      }\n    },\n    \"node_modules/istanbul-lib-instrument/node_modules/semver\": {\n      \"version\": \"7.7.2\",\n      \"resolved\": \"https://registry.npmjs.org/semver/-/semver-7.7.2.tgz\",\n      \"integrity\": \"sha512-RF0Fw+rO5AMf9MAyaRXI4AV0Ulj5lMHqVxxdSgiVbixSCXoEmmX/jk0CuJw4+3SqroYO9VoUh+HcuJivvtJemA==\",\n      \"dev\": true,\n      \"bin\": {\n        \"semver\": \"bin/semver.js\"\n      },\n      \"engines\": {\n        \"node\": \">=10\"\n      }\n    },\n    \"node_modules/istanbul-lib-report\": {\n      \"version\": \"3.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/istanbul-lib-report/-/istanbul-lib-report-3.0.1.tgz\",\n      \"integrity\": \"sha512-GCfE1mtsHGOELCU8e/Z7YWzpmybrx/+dSTfLrvY8qRmaY6zXTKWn6WQIjaAFw069icm6GVMNkgu0NzI4iPZUNw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"istanbul-lib-coverage\": \"^3.0.0\",\n        \"make-dir\": \"^4.0.0\",\n        \"supports-color\": \"^7.1.0\"\n      },\n      \"engines\": {\n        \"node\": \">=10\"\n      }\n    },\n    \"node_modules/istanbul-lib-source-maps\": {\n      \"version\": \"4.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/istanbul-lib-source-maps/-/istanbul-lib-source-maps-4.0.1.tgz\",\n      \"integrity\": \"sha512-n3s8EwkdFIJCG3BPKBYvskgXGoy88ARzvegkitk60NxRdwltLOTaH7CUiMRXvwYorl0Q712iEjcWB+fK/MrWVw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"debug\": \"^4.1.1\",\n        \"istanbul-lib-coverage\": \"^3.0.0\",\n        \"source-map\": \"^0.6.1\"\n      },\n      \"engines\": {\n        \"node\": \">=10\"\n      }\n    },\n    \"node_modules/istanbul-reports\": {\n      \"version\": \"3.1.7\",\n      \"resolved\": \"https://registry.npmjs.org/istanbul-reports/-/istanbul-reports-3.1.7.tgz\",\n      \"integrity\": \"sha512-BewmUXImeuRk2YY0PVbxgKAysvhRPUQE0h5QRM++nVWyubKGV0l8qQ5op8+B2DOmwSe63Jivj0BjkPQVf8fP5g==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"html-escaper\": \"^2.0.0\",\n        \"istanbul-lib-report\": \"^3.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/its-fine\": {\n      \"version\": \"1.2.5\",\n      \"resolved\": \"https://registry.npmjs.org/its-fine/-/its-fine-1.2.5.tgz\",\n      \"integrity\": \"sha512-fXtDA0X0t0eBYAGLVM5YsgJGsJ5jEmqZEPrGbzdf5awjv0xE7nqv3TVnvtUF060Tkes15DbDAKW/I48vsb6SyA==\",\n      \"dependencies\": {\n        \"@types/react-reconciler\": \"^0.28.0\"\n      },\n      \"peerDependencies\": {\n        \"react\": \">=18.0\"\n      }\n    },\n    \"node_modules/its-fine/node_modules/@types/react-reconciler\": {\n      \"version\": \"0.28.9\",\n      \"resolved\": \"https://registry.npmjs.org/@types/react-reconciler/-/react-reconciler-0.28.9.tgz\",\n      \"integrity\": \"sha512-HHM3nxyUZ3zAylX8ZEyrDNd2XZOnQ0D5XfunJF5FLQnZbHHYq4UWvW1QfelQNXv1ICNkwYhfxjwfnqivYB6bFg==\",\n      \"peerDependencies\": {\n        \"@types/react\": \"*\"\n      }\n    },\n    \"node_modules/jackspeak\": {\n      \"version\": \"3.4.3\",\n      \"resolved\": \"https://registry.npmjs.org/jackspeak/-/jackspeak-3.4.3.tgz\",\n      \"integrity\": \"sha512-OGlZQpz2yfahA/Rd1Y8Cd9SIEsqvXkLVoSw/cgwhnhFMDbsQFeZYoJJ7bIZBS9BcamUW96asq/npPWugM+RQBw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@isaacs/cliui\": \"^8.0.2\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/isaacs\"\n      },\n      \"optionalDependencies\": {\n        \"@pkgjs/parseargs\": \"^0.11.0\"\n      }\n    },\n    \"node_modules/jest\": {\n      \"version\": \"29.7.0\",\n      \"resolved\": \"https://registry.npmjs.org/jest/-/jest-29.7.0.tgz\",\n      \"integrity\": \"sha512-NIy3oAFp9shda19hy4HK0HRTWKtPJmGdnvywu01nOqNC2vZg+Z+fvJDxpMQA88eb2I9EcafcdjYgsDthnYTvGw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@jest/core\": \"^29.7.0\",\n        \"@jest/types\": \"^29.6.3\",\n        \"import-local\": \"^3.0.2\",\n        \"jest-cli\": \"^29.7.0\"\n      },\n      \"bin\": {\n        \"jest\": \"bin/jest.js\"\n      },\n      \"engines\": {\n        \"node\": \"^14.15.0 || ^16.10.0 || >=18.0.0\"\n      },\n      \"peerDependencies\": {\n        \"node-notifier\": \"^8.0.1 || ^9.0.0 || ^10.0.0\"\n      },\n      \"peerDependenciesMeta\": {\n        \"node-notifier\": {\n          \"optional\": true\n        }\n      }\n    },\n    \"node_modules/jest-changed-files\": {\n      \"version\": \"29.7.0\",\n      \"resolved\": \"https://registry.npmjs.org/jest-changed-files/-/jest-changed-files-29.7.0.tgz\",\n      \"integrity\": \"sha512-fEArFiwf1BpQ+4bXSprcDc3/x4HSzL4al2tozwVpDFpsxALjLYdyiIK4e5Vz66GQJIbXJ82+35PtysofptNX2w==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"execa\": \"^5.0.0\",\n        \"jest-util\": \"^29.7.0\",\n        \"p-limit\": \"^3.1.0\"\n      },\n      \"engines\": {\n        \"node\": \"^14.15.0 || ^16.10.0 || >=18.0.0\"\n      }\n    },\n    \"node_modules/jest-circus\": {\n      \"version\": \"29.7.0\",\n      \"resolved\": \"https://registry.npmjs.org/jest-circus/-/jest-circus-29.7.0.tgz\",\n      \"integrity\": \"sha512-3E1nCMgipcTkCocFwM90XXQab9bS+GMsjdpmPrlelaxwD93Ad8iVEjX/vvHPdLPnFf+L40u+5+iutRdA1N9myw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@jest/environment\": \"^29.7.0\",\n        \"@jest/expect\": \"^29.7.0\",\n        \"@jest/test-result\": \"^29.7.0\",\n        \"@jest/types\": \"^29.6.3\",\n        \"@types/node\": \"*\",\n        \"chalk\": \"^4.0.0\",\n        \"co\": \"^4.6.0\",\n        \"dedent\": \"^1.0.0\",\n        \"is-generator-fn\": \"^2.0.0\",\n        \"jest-each\": \"^29.7.0\",\n        \"jest-matcher-utils\": \"^29.7.0\",\n        \"jest-message-util\": \"^29.7.0\",\n        \"jest-runtime\": \"^29.7.0\",\n        \"jest-snapshot\": \"^29.7.0\",\n        \"jest-util\": \"^29.7.0\",\n        \"p-limit\": \"^3.1.0\",\n        \"pretty-format\": \"^29.7.0\",\n        \"pure-rand\": \"^6.0.0\",\n        \"slash\": \"^3.0.0\",\n        \"stack-utils\": \"^2.0.3\"\n      },\n      \"engines\": {\n        \"node\": \"^14.15.0 || ^16.10.0 || >=18.0.0\"\n      }\n    },\n    \"node_modules/jest-circus/node_modules/chalk\": {\n      \"version\": \"4.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/chalk/-/chalk-4.1.2.tgz\",\n      \"integrity\": \"sha512-oKnbhFyRIXpUuez8iBMmyEa4nbj4IOQyuhc/wy9kY7/WVPcwIO9VA668Pu8RkO7+0G76SLROeyw9CpQ061i4mA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"ansi-styles\": \"^4.1.0\",\n        \"supports-color\": \"^7.1.0\"\n      },\n      \"engines\": {\n        \"node\": \">=10\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/chalk/chalk?sponsor=1\"\n      }\n    },\n    \"node_modules/jest-circus/node_modules/pretty-format\": {\n      \"version\": \"29.7.0\",\n      \"resolved\": \"https://registry.npmjs.org/pretty-format/-/pretty-format-29.7.0.tgz\",\n      \"integrity\": \"sha512-Pdlw/oPxN+aXdmM9R00JVC9WVFoCLTKJvDVLgmJ+qAffBMxsV85l/Lu7sNx4zSzPyoL2euImuEwHhOXdEgNFZQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@jest/schemas\": \"^29.6.3\",\n        \"ansi-styles\": \"^5.0.0\",\n        \"react-is\": \"^18.0.0\"\n      },\n      \"engines\": {\n        \"node\": \"^14.15.0 || ^16.10.0 || >=18.0.0\"\n      }\n    },\n    \"node_modules/jest-circus/node_modules/pretty-format/node_modules/ansi-styles\": {\n      \"version\": \"5.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/ansi-styles/-/ansi-styles-5.2.0.tgz\",\n      \"integrity\": \"sha512-Cxwpt2SfTzTtXcfOlzGEee8O+c+MmUgGrNiBcXnuWxuFJHe6a5Hz7qwhwe5OgaSYI0IJvkLqWX1ASG+cJOkEiA==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=10\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/chalk/ansi-styles?sponsor=1\"\n      }\n    },\n    \"node_modules/jest-circus/node_modules/react-is\": {\n      \"version\": \"18.3.1\",\n      \"resolved\": \"https://registry.npmjs.org/react-is/-/react-is-18.3.1.tgz\",\n      \"integrity\": \"sha512-/LLMVyas0ljjAtoYiPqYiL8VWXzUUdThrmU5+n20DZv+a+ClRoevUzw5JxU+Ieh5/c87ytoTBV9G1FiKfNJdmg==\",\n      \"dev\": true\n    },\n    \"node_modules/jest-cli\": {\n      \"version\": \"29.7.0\",\n      \"resolved\": \"https://registry.npmjs.org/jest-cli/-/jest-cli-29.7.0.tgz\",\n      \"integrity\": \"sha512-OVVobw2IubN/GSYsxETi+gOe7Ka59EFMR/twOU3Jb2GnKKeMGJB5SGUUrEz3SFVmJASUdZUzy83sLNNQ2gZslg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@jest/core\": \"^29.7.0\",\n        \"@jest/test-result\": \"^29.7.0\",\n        \"@jest/types\": \"^29.6.3\",\n        \"chalk\": \"^4.0.0\",\n        \"create-jest\": \"^29.7.0\",\n        \"exit\": \"^0.1.2\",\n        \"import-local\": \"^3.0.2\",\n        \"jest-config\": \"^29.7.0\",\n        \"jest-util\": \"^29.7.0\",\n        \"jest-validate\": \"^29.7.0\",\n        \"yargs\": \"^17.3.1\"\n      },\n      \"bin\": {\n        \"jest\": \"bin/jest.js\"\n      },\n      \"engines\": {\n        \"node\": \"^14.15.0 || ^16.10.0 || >=18.0.0\"\n      },\n      \"peerDependencies\": {\n        \"node-notifier\": \"^8.0.1 || ^9.0.0 || ^10.0.0\"\n      },\n      \"peerDependenciesMeta\": {\n        \"node-notifier\": {\n          \"optional\": true\n        }\n      }\n    },\n    \"node_modules/jest-cli/node_modules/chalk\": {\n      \"version\": \"4.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/chalk/-/chalk-4.1.2.tgz\",\n      \"integrity\": \"sha512-oKnbhFyRIXpUuez8iBMmyEa4nbj4IOQyuhc/wy9kY7/WVPcwIO9VA668Pu8RkO7+0G76SLROeyw9CpQ061i4mA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"ansi-styles\": \"^4.1.0\",\n        \"supports-color\": \"^7.1.0\"\n      },\n      \"engines\": {\n        \"node\": \">=10\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/chalk/chalk?sponsor=1\"\n      }\n    },\n    \"node_modules/jest-config\": {\n      \"version\": \"29.7.0\",\n      \"resolved\": \"https://registry.npmjs.org/jest-config/-/jest-config-29.7.0.tgz\",\n      \"integrity\": \"sha512-uXbpfeQ7R6TZBqI3/TxCU4q4ttk3u0PJeC+E0zbfSoSjq6bJ7buBPxzQPL0ifrkY4DNu4JUdk0ImlBUYi840eQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@babel/core\": \"^7.11.6\",\n        \"@jest/test-sequencer\": \"^29.7.0\",\n        \"@jest/types\": \"^29.6.3\",\n        \"babel-jest\": \"^29.7.0\",\n        \"chalk\": \"^4.0.0\",\n        \"ci-info\": \"^3.2.0\",\n        \"deepmerge\": \"^4.2.2\",\n        \"glob\": \"^7.1.3\",\n        \"graceful-fs\": \"^4.2.9\",\n        \"jest-circus\": \"^29.7.0\",\n        \"jest-environment-node\": \"^29.7.0\",\n        \"jest-get-type\": \"^29.6.3\",\n        \"jest-regex-util\": \"^29.6.3\",\n        \"jest-resolve\": \"^29.7.0\",\n        \"jest-runner\": \"^29.7.0\",\n        \"jest-util\": \"^29.7.0\",\n        \"jest-validate\": \"^29.7.0\",\n        \"micromatch\": \"^4.0.4\",\n        \"parse-json\": \"^5.2.0\",\n        \"pretty-format\": \"^29.7.0\",\n        \"slash\": \"^3.0.0\",\n        \"strip-json-comments\": \"^3.1.1\"\n      },\n      \"engines\": {\n        \"node\": \"^14.15.0 || ^16.10.0 || >=18.0.0\"\n      },\n      \"peerDependencies\": {\n        \"@types/node\": \"*\",\n        \"ts-node\": \">=9.0.0\"\n      },\n      \"peerDependenciesMeta\": {\n        \"@types/node\": {\n          \"optional\": true\n        },\n        \"ts-node\": {\n          \"optional\": true\n        }\n      }\n    },\n    \"node_modules/jest-config/node_modules/chalk\": {\n      \"version\": \"4.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/chalk/-/chalk-4.1.2.tgz\",\n      \"integrity\": \"sha512-oKnbhFyRIXpUuez8iBMmyEa4nbj4IOQyuhc/wy9kY7/WVPcwIO9VA668Pu8RkO7+0G76SLROeyw9CpQ061i4mA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"ansi-styles\": \"^4.1.0\",\n        \"supports-color\": \"^7.1.0\"\n      },\n      \"engines\": {\n        \"node\": \">=10\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/chalk/chalk?sponsor=1\"\n      }\n    },\n    \"node_modules/jest-config/node_modules/pretty-format\": {\n      \"version\": \"29.7.0\",\n      \"resolved\": \"https://registry.npmjs.org/pretty-format/-/pretty-format-29.7.0.tgz\",\n      \"integrity\": \"sha512-Pdlw/oPxN+aXdmM9R00JVC9WVFoCLTKJvDVLgmJ+qAffBMxsV85l/Lu7sNx4zSzPyoL2euImuEwHhOXdEgNFZQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@jest/schemas\": \"^29.6.3\",\n        \"ansi-styles\": \"^5.0.0\",\n        \"react-is\": \"^18.0.0\"\n      },\n      \"engines\": {\n        \"node\": \"^14.15.0 || ^16.10.0 || >=18.0.0\"\n      }\n    },\n    \"node_modules/jest-config/node_modules/pretty-format/node_modules/ansi-styles\": {\n      \"version\": \"5.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/ansi-styles/-/ansi-styles-5.2.0.tgz\",\n      \"integrity\": \"sha512-Cxwpt2SfTzTtXcfOlzGEee8O+c+MmUgGrNiBcXnuWxuFJHe6a5Hz7qwhwe5OgaSYI0IJvkLqWX1ASG+cJOkEiA==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=10\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/chalk/ansi-styles?sponsor=1\"\n      }\n    },\n    \"node_modules/jest-config/node_modules/react-is\": {\n      \"version\": \"18.3.1\",\n      \"resolved\": \"https://registry.npmjs.org/react-is/-/react-is-18.3.1.tgz\",\n      \"integrity\": \"sha512-/LLMVyas0ljjAtoYiPqYiL8VWXzUUdThrmU5+n20DZv+a+ClRoevUzw5JxU+Ieh5/c87ytoTBV9G1FiKfNJdmg==\",\n      \"dev\": true\n    },\n    \"node_modules/jest-diff\": {\n      \"version\": \"29.7.0\",\n      \"resolved\": \"https://registry.npmjs.org/jest-diff/-/jest-diff-29.7.0.tgz\",\n      \"integrity\": \"sha512-LMIgiIrhigmPrs03JHpxUh2yISK3vLFPkAodPeo0+BuF7wA2FoQbkEg1u8gBYBThncu7e1oEDUfIXVuTqLRUjw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"chalk\": \"^4.0.0\",\n        \"diff-sequences\": \"^29.6.3\",\n        \"jest-get-type\": \"^29.6.3\",\n        \"pretty-format\": \"^29.7.0\"\n      },\n      \"engines\": {\n        \"node\": \"^14.15.0 || ^16.10.0 || >=18.0.0\"\n      }\n    },\n    \"node_modules/jest-diff/node_modules/chalk\": {\n      \"version\": \"4.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/chalk/-/chalk-4.1.2.tgz\",\n      \"integrity\": \"sha512-oKnbhFyRIXpUuez8iBMmyEa4nbj4IOQyuhc/wy9kY7/WVPcwIO9VA668Pu8RkO7+0G76SLROeyw9CpQ061i4mA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"ansi-styles\": \"^4.1.0\",\n        \"supports-color\": \"^7.1.0\"\n      },\n      \"engines\": {\n        \"node\": \">=10\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/chalk/chalk?sponsor=1\"\n      }\n    },\n    \"node_modules/jest-diff/node_modules/pretty-format\": {\n      \"version\": \"29.7.0\",\n      \"resolved\": \"https://registry.npmjs.org/pretty-format/-/pretty-format-29.7.0.tgz\",\n      \"integrity\": \"sha512-Pdlw/oPxN+aXdmM9R00JVC9WVFoCLTKJvDVLgmJ+qAffBMxsV85l/Lu7sNx4zSzPyoL2euImuEwHhOXdEgNFZQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@jest/schemas\": \"^29.6.3\",\n        \"ansi-styles\": \"^5.0.0\",\n        \"react-is\": \"^18.0.0\"\n      },\n      \"engines\": {\n        \"node\": \"^14.15.0 || ^16.10.0 || >=18.0.0\"\n      }\n    },\n    \"node_modules/jest-diff/node_modules/pretty-format/node_modules/ansi-styles\": {\n      \"version\": \"5.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/ansi-styles/-/ansi-styles-5.2.0.tgz\",\n      \"integrity\": \"sha512-Cxwpt2SfTzTtXcfOlzGEee8O+c+MmUgGrNiBcXnuWxuFJHe6a5Hz7qwhwe5OgaSYI0IJvkLqWX1ASG+cJOkEiA==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=10\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/chalk/ansi-styles?sponsor=1\"\n      }\n    },\n    \"node_modules/jest-diff/node_modules/react-is\": {\n      \"version\": \"18.3.1\",\n      \"resolved\": \"https://registry.npmjs.org/react-is/-/react-is-18.3.1.tgz\",\n      \"integrity\": \"sha512-/LLMVyas0ljjAtoYiPqYiL8VWXzUUdThrmU5+n20DZv+a+ClRoevUzw5JxU+Ieh5/c87ytoTBV9G1FiKfNJdmg==\",\n      \"dev\": true\n    },\n    \"node_modules/jest-docblock\": {\n      \"version\": \"29.7.0\",\n      \"resolved\": \"https://registry.npmjs.org/jest-docblock/-/jest-docblock-29.7.0.tgz\",\n      \"integrity\": \"sha512-q617Auw3A612guyaFgsbFeYpNP5t2aoUNLwBUbc/0kD1R4t9ixDbyFTHd1nok4epoVFpr7PmeWHrhvuV3XaJ4g==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"detect-newline\": \"^3.0.0\"\n      },\n      \"engines\": {\n        \"node\": \"^14.15.0 || ^16.10.0 || >=18.0.0\"\n      }\n    },\n    \"node_modules/jest-each\": {\n      \"version\": \"29.7.0\",\n      \"resolved\": \"https://registry.npmjs.org/jest-each/-/jest-each-29.7.0.tgz\",\n      \"integrity\": \"sha512-gns+Er14+ZrEoC5fhOfYCY1LOHHr0TI+rQUHZS8Ttw2l7gl+80eHc/gFf2Ktkw0+SIACDTeWvpFcv3B04VembQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@jest/types\": \"^29.6.3\",\n        \"chalk\": \"^4.0.0\",\n        \"jest-get-type\": \"^29.6.3\",\n        \"jest-util\": \"^29.7.0\",\n        \"pretty-format\": \"^29.7.0\"\n      },\n      \"engines\": {\n        \"node\": \"^14.15.0 || ^16.10.0 || >=18.0.0\"\n      }\n    },\n    \"node_modules/jest-each/node_modules/chalk\": {\n      \"version\": \"4.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/chalk/-/chalk-4.1.2.tgz\",\n      \"integrity\": \"sha512-oKnbhFyRIXpUuez8iBMmyEa4nbj4IOQyuhc/wy9kY7/WVPcwIO9VA668Pu8RkO7+0G76SLROeyw9CpQ061i4mA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"ansi-styles\": \"^4.1.0\",\n        \"supports-color\": \"^7.1.0\"\n      },\n      \"engines\": {\n        \"node\": \">=10\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/chalk/chalk?sponsor=1\"\n      }\n    },\n    \"node_modules/jest-each/node_modules/pretty-format\": {\n      \"version\": \"29.7.0\",\n      \"resolved\": \"https://registry.npmjs.org/pretty-format/-/pretty-format-29.7.0.tgz\",\n      \"integrity\": \"sha512-Pdlw/oPxN+aXdmM9R00JVC9WVFoCLTKJvDVLgmJ+qAffBMxsV85l/Lu7sNx4zSzPyoL2euImuEwHhOXdEgNFZQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@jest/schemas\": \"^29.6.3\",\n        \"ansi-styles\": \"^5.0.0\",\n        \"react-is\": \"^18.0.0\"\n      },\n      \"engines\": {\n        \"node\": \"^14.15.0 || ^16.10.0 || >=18.0.0\"\n      }\n    },\n    \"node_modules/jest-each/node_modules/pretty-format/node_modules/ansi-styles\": {\n      \"version\": \"5.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/ansi-styles/-/ansi-styles-5.2.0.tgz\",\n      \"integrity\": \"sha512-Cxwpt2SfTzTtXcfOlzGEee8O+c+MmUgGrNiBcXnuWxuFJHe6a5Hz7qwhwe5OgaSYI0IJvkLqWX1ASG+cJOkEiA==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=10\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/chalk/ansi-styles?sponsor=1\"\n      }\n    },\n    \"node_modules/jest-each/node_modules/react-is\": {\n      \"version\": \"18.3.1\",\n      \"resolved\": \"https://registry.npmjs.org/react-is/-/react-is-18.3.1.tgz\",\n      \"integrity\": \"sha512-/LLMVyas0ljjAtoYiPqYiL8VWXzUUdThrmU5+n20DZv+a+ClRoevUzw5JxU+Ieh5/c87ytoTBV9G1FiKfNJdmg==\",\n      \"dev\": true\n    },\n    \"node_modules/jest-environment-node\": {\n      \"version\": \"29.7.0\",\n      \"resolved\": \"https://registry.npmjs.org/jest-environment-node/-/jest-environment-node-29.7.0.tgz\",\n      \"integrity\": \"sha512-DOSwCRqXirTOyheM+4d5YZOrWcdu0LNZ87ewUoywbcb2XR4wKgqiG8vNeYwhjFMbEkfju7wx2GYH0P2gevGvFw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@jest/environment\": \"^29.7.0\",\n        \"@jest/fake-timers\": \"^29.7.0\",\n        \"@jest/types\": \"^29.6.3\",\n        \"@types/node\": \"*\",\n        \"jest-mock\": \"^29.7.0\",\n        \"jest-util\": \"^29.7.0\"\n      },\n      \"engines\": {\n        \"node\": \"^14.15.0 || ^16.10.0 || >=18.0.0\"\n      }\n    },\n    \"node_modules/jest-get-type\": {\n      \"version\": \"29.6.3\",\n      \"resolved\": \"https://registry.npmjs.org/jest-get-type/-/jest-get-type-29.6.3.tgz\",\n      \"integrity\": \"sha512-zrteXnqYxfQh7l5FHyL38jL39di8H8rHoecLH3JNxH3BwOrBsNeabdap5e0I23lD4HHI8W5VFBZqG4Eaq5LNcw==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \"^14.15.0 || ^16.10.0 || >=18.0.0\"\n      }\n    },\n    \"node_modules/jest-haste-map\": {\n      \"version\": \"29.7.0\",\n      \"resolved\": \"https://registry.npmjs.org/jest-haste-map/-/jest-haste-map-29.7.0.tgz\",\n      \"integrity\": \"sha512-fP8u2pyfqx0K1rGn1R9pyE0/KTn+G7PxktWidOBTqFPLYX0b9ksaMFkhK5vrS3DVun09pckLdlx90QthlW7AmA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@jest/types\": \"^29.6.3\",\n        \"@types/graceful-fs\": \"^4.1.3\",\n        \"@types/node\": \"*\",\n        \"anymatch\": \"^3.0.3\",\n        \"fb-watchman\": \"^2.0.0\",\n        \"graceful-fs\": \"^4.2.9\",\n        \"jest-regex-util\": \"^29.6.3\",\n        \"jest-util\": \"^29.7.0\",\n        \"jest-worker\": \"^29.7.0\",\n        \"micromatch\": \"^4.0.4\",\n        \"walker\": \"^1.0.8\"\n      },\n      \"engines\": {\n        \"node\": \"^14.15.0 || ^16.10.0 || >=18.0.0\"\n      },\n      \"optionalDependencies\": {\n        \"fsevents\": \"^2.3.2\"\n      }\n    },\n    \"node_modules/jest-leak-detector\": {\n      \"version\": \"29.7.0\",\n      \"resolved\": \"https://registry.npmjs.org/jest-leak-detector/-/jest-leak-detector-29.7.0.tgz\",\n      \"integrity\": \"sha512-kYA8IJcSYtST2BY9I+SMC32nDpBT3J2NvWJx8+JCuCdl/CR1I4EKUJROiP8XtCcxqgTTBGJNdbB1A8XRKbTetw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"jest-get-type\": \"^29.6.3\",\n        \"pretty-format\": \"^29.7.0\"\n      },\n      \"engines\": {\n        \"node\": \"^14.15.0 || ^16.10.0 || >=18.0.0\"\n      }\n    },\n    \"node_modules/jest-leak-detector/node_modules/ansi-styles\": {\n      \"version\": \"5.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/ansi-styles/-/ansi-styles-5.2.0.tgz\",\n      \"integrity\": \"sha512-Cxwpt2SfTzTtXcfOlzGEee8O+c+MmUgGrNiBcXnuWxuFJHe6a5Hz7qwhwe5OgaSYI0IJvkLqWX1ASG+cJOkEiA==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=10\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/chalk/ansi-styles?sponsor=1\"\n      }\n    },\n    \"node_modules/jest-leak-detector/node_modules/pretty-format\": {\n      \"version\": \"29.7.0\",\n      \"resolved\": \"https://registry.npmjs.org/pretty-format/-/pretty-format-29.7.0.tgz\",\n      \"integrity\": \"sha512-Pdlw/oPxN+aXdmM9R00JVC9WVFoCLTKJvDVLgmJ+qAffBMxsV85l/Lu7sNx4zSzPyoL2euImuEwHhOXdEgNFZQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@jest/schemas\": \"^29.6.3\",\n        \"ansi-styles\": \"^5.0.0\",\n        \"react-is\": \"^18.0.0\"\n      },\n      \"engines\": {\n        \"node\": \"^14.15.0 || ^16.10.0 || >=18.0.0\"\n      }\n    },\n    \"node_modules/jest-leak-detector/node_modules/react-is\": {\n      \"version\": \"18.3.1\",\n      \"resolved\": \"https://registry.npmjs.org/react-is/-/react-is-18.3.1.tgz\",\n      \"integrity\": \"sha512-/LLMVyas0ljjAtoYiPqYiL8VWXzUUdThrmU5+n20DZv+a+ClRoevUzw5JxU+Ieh5/c87ytoTBV9G1FiKfNJdmg==\",\n      \"dev\": true\n    },\n    \"node_modules/jest-matcher-utils\": {\n      \"version\": \"29.7.0\",\n      \"resolved\": \"https://registry.npmjs.org/jest-matcher-utils/-/jest-matcher-utils-29.7.0.tgz\",\n      \"integrity\": \"sha512-sBkD+Xi9DtcChsI3L3u0+N0opgPYnCRPtGcQYrgXmR+hmt/fYfWAL0xRXYU8eWOdfuLgBe0YCW3AFtnRLagq/g==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"chalk\": \"^4.0.0\",\n        \"jest-diff\": \"^29.7.0\",\n        \"jest-get-type\": \"^29.6.3\",\n        \"pretty-format\": \"^29.7.0\"\n      },\n      \"engines\": {\n        \"node\": \"^14.15.0 || ^16.10.0 || >=18.0.0\"\n      }\n    },\n    \"node_modules/jest-matcher-utils/node_modules/chalk\": {\n      \"version\": \"4.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/chalk/-/chalk-4.1.2.tgz\",\n      \"integrity\": \"sha512-oKnbhFyRIXpUuez8iBMmyEa4nbj4IOQyuhc/wy9kY7/WVPcwIO9VA668Pu8RkO7+0G76SLROeyw9CpQ061i4mA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"ansi-styles\": \"^4.1.0\",\n        \"supports-color\": \"^7.1.0\"\n      },\n      \"engines\": {\n        \"node\": \">=10\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/chalk/chalk?sponsor=1\"\n      }\n    },\n    \"node_modules/jest-matcher-utils/node_modules/pretty-format\": {\n      \"version\": \"29.7.0\",\n      \"resolved\": \"https://registry.npmjs.org/pretty-format/-/pretty-format-29.7.0.tgz\",\n      \"integrity\": \"sha512-Pdlw/oPxN+aXdmM9R00JVC9WVFoCLTKJvDVLgmJ+qAffBMxsV85l/Lu7sNx4zSzPyoL2euImuEwHhOXdEgNFZQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@jest/schemas\": \"^29.6.3\",\n        \"ansi-styles\": \"^5.0.0\",\n        \"react-is\": \"^18.0.0\"\n      },\n      \"engines\": {\n        \"node\": \"^14.15.0 || ^16.10.0 || >=18.0.0\"\n      }\n    },\n    \"node_modules/jest-matcher-utils/node_modules/pretty-format/node_modules/ansi-styles\": {\n      \"version\": \"5.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/ansi-styles/-/ansi-styles-5.2.0.tgz\",\n      \"integrity\": \"sha512-Cxwpt2SfTzTtXcfOlzGEee8O+c+MmUgGrNiBcXnuWxuFJHe6a5Hz7qwhwe5OgaSYI0IJvkLqWX1ASG+cJOkEiA==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=10\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/chalk/ansi-styles?sponsor=1\"\n      }\n    },\n    \"node_modules/jest-matcher-utils/node_modules/react-is\": {\n      \"version\": \"18.3.1\",\n      \"resolved\": \"https://registry.npmjs.org/react-is/-/react-is-18.3.1.tgz\",\n      \"integrity\": \"sha512-/LLMVyas0ljjAtoYiPqYiL8VWXzUUdThrmU5+n20DZv+a+ClRoevUzw5JxU+Ieh5/c87ytoTBV9G1FiKfNJdmg==\",\n      \"dev\": true\n    },\n    \"node_modules/jest-message-util\": {\n      \"version\": \"29.7.0\",\n      \"resolved\": \"https://registry.npmjs.org/jest-message-util/-/jest-message-util-29.7.0.tgz\",\n      \"integrity\": \"sha512-GBEV4GRADeP+qtB2+6u61stea8mGcOT4mCtrYISZwfu9/ISHFJ/5zOMXYbpBE9RsS5+Gb63DW4FgmnKJ79Kf6w==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@babel/code-frame\": \"^7.12.13\",\n        \"@jest/types\": \"^29.6.3\",\n        \"@types/stack-utils\": \"^2.0.0\",\n        \"chalk\": \"^4.0.0\",\n        \"graceful-fs\": \"^4.2.9\",\n        \"micromatch\": \"^4.0.4\",\n        \"pretty-format\": \"^29.7.0\",\n        \"slash\": \"^3.0.0\",\n        \"stack-utils\": \"^2.0.3\"\n      },\n      \"engines\": {\n        \"node\": \"^14.15.0 || ^16.10.0 || >=18.0.0\"\n      }\n    },\n    \"node_modules/jest-message-util/node_modules/chalk\": {\n      \"version\": \"4.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/chalk/-/chalk-4.1.2.tgz\",\n      \"integrity\": \"sha512-oKnbhFyRIXpUuez8iBMmyEa4nbj4IOQyuhc/wy9kY7/WVPcwIO9VA668Pu8RkO7+0G76SLROeyw9CpQ061i4mA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"ansi-styles\": \"^4.1.0\",\n        \"supports-color\": \"^7.1.0\"\n      },\n      \"engines\": {\n        \"node\": \">=10\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/chalk/chalk?sponsor=1\"\n      }\n    },\n    \"node_modules/jest-message-util/node_modules/pretty-format\": {\n      \"version\": \"29.7.0\",\n      \"resolved\": \"https://registry.npmjs.org/pretty-format/-/pretty-format-29.7.0.tgz\",\n      \"integrity\": \"sha512-Pdlw/oPxN+aXdmM9R00JVC9WVFoCLTKJvDVLgmJ+qAffBMxsV85l/Lu7sNx4zSzPyoL2euImuEwHhOXdEgNFZQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@jest/schemas\": \"^29.6.3\",\n        \"ansi-styles\": \"^5.0.0\",\n        \"react-is\": \"^18.0.0\"\n      },\n      \"engines\": {\n        \"node\": \"^14.15.0 || ^16.10.0 || >=18.0.0\"\n      }\n    },\n    \"node_modules/jest-message-util/node_modules/pretty-format/node_modules/ansi-styles\": {\n      \"version\": \"5.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/ansi-styles/-/ansi-styles-5.2.0.tgz\",\n      \"integrity\": \"sha512-Cxwpt2SfTzTtXcfOlzGEee8O+c+MmUgGrNiBcXnuWxuFJHe6a5Hz7qwhwe5OgaSYI0IJvkLqWX1ASG+cJOkEiA==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=10\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/chalk/ansi-styles?sponsor=1\"\n      }\n    },\n    \"node_modules/jest-message-util/node_modules/react-is\": {\n      \"version\": \"18.3.1\",\n      \"resolved\": \"https://registry.npmjs.org/react-is/-/react-is-18.3.1.tgz\",\n      \"integrity\": \"sha512-/LLMVyas0ljjAtoYiPqYiL8VWXzUUdThrmU5+n20DZv+a+ClRoevUzw5JxU+Ieh5/c87ytoTBV9G1FiKfNJdmg==\",\n      \"dev\": true\n    },\n    \"node_modules/jest-mock\": {\n      \"version\": \"29.7.0\",\n      \"resolved\": \"https://registry.npmjs.org/jest-mock/-/jest-mock-29.7.0.tgz\",\n      \"integrity\": \"sha512-ITOMZn+UkYS4ZFh83xYAOzWStloNzJFO2s8DWrE4lhtGD+AorgnbkiKERe4wQVBydIGPx059g6riW5Btp6Llnw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@jest/types\": \"^29.6.3\",\n        \"@types/node\": \"*\",\n        \"jest-util\": \"^29.7.0\"\n      },\n      \"engines\": {\n        \"node\": \"^14.15.0 || ^16.10.0 || >=18.0.0\"\n      }\n    },\n    \"node_modules/jest-pnp-resolver\": {\n      \"version\": \"1.2.3\",\n      \"resolved\": \"https://registry.npmjs.org/jest-pnp-resolver/-/jest-pnp-resolver-1.2.3.tgz\",\n      \"integrity\": \"sha512-+3NpwQEnRoIBtx4fyhblQDPgJI0H1IEIkX7ShLUjPGA7TtUTvI1oiKi3SR4oBR0hQhQR80l4WAe5RrXBwWMA8w==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=6\"\n      },\n      \"peerDependencies\": {\n        \"jest-resolve\": \"*\"\n      },\n      \"peerDependenciesMeta\": {\n        \"jest-resolve\": {\n          \"optional\": true\n        }\n      }\n    },\n    \"node_modules/jest-regex-util\": {\n      \"version\": \"29.6.3\",\n      \"resolved\": \"https://registry.npmjs.org/jest-regex-util/-/jest-regex-util-29.6.3.tgz\",\n      \"integrity\": \"sha512-KJJBsRCyyLNWCNBOvZyRDnAIfUiRJ8v+hOBQYGn8gDyF3UegwiP4gwRR3/SDa42g1YbVycTidUF3rKjyLFDWbg==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \"^14.15.0 || ^16.10.0 || >=18.0.0\"\n      }\n    },\n    \"node_modules/jest-resolve\": {\n      \"version\": \"29.7.0\",\n      \"resolved\": \"https://registry.npmjs.org/jest-resolve/-/jest-resolve-29.7.0.tgz\",\n      \"integrity\": \"sha512-IOVhZSrg+UvVAshDSDtHyFCCBUl/Q3AAJv8iZ6ZjnZ74xzvwuzLXid9IIIPgTnY62SJjfuupMKZsZQRsCvxEgA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"chalk\": \"^4.0.0\",\n        \"graceful-fs\": \"^4.2.9\",\n        \"jest-haste-map\": \"^29.7.0\",\n        \"jest-pnp-resolver\": \"^1.2.2\",\n        \"jest-util\": \"^29.7.0\",\n        \"jest-validate\": \"^29.7.0\",\n        \"resolve\": \"^1.20.0\",\n        \"resolve.exports\": \"^2.0.0\",\n        \"slash\": \"^3.0.0\"\n      },\n      \"engines\": {\n        \"node\": \"^14.15.0 || ^16.10.0 || >=18.0.0\"\n      }\n    },\n    \"node_modules/jest-resolve-dependencies\": {\n      \"version\": \"29.7.0\",\n      \"resolved\": \"https://registry.npmjs.org/jest-resolve-dependencies/-/jest-resolve-dependencies-29.7.0.tgz\",\n      \"integrity\": \"sha512-un0zD/6qxJ+S0et7WxeI3H5XSe9lTBBR7bOHCHXkKR6luG5mwDDlIzVQ0V5cZCuoTgEdcdwzTghYkTWfubi+nA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"jest-regex-util\": \"^29.6.3\",\n        \"jest-snapshot\": \"^29.7.0\"\n      },\n      \"engines\": {\n        \"node\": \"^14.15.0 || ^16.10.0 || >=18.0.0\"\n      }\n    },\n    \"node_modules/jest-resolve/node_modules/chalk\": {\n      \"version\": \"4.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/chalk/-/chalk-4.1.2.tgz\",\n      \"integrity\": \"sha512-oKnbhFyRIXpUuez8iBMmyEa4nbj4IOQyuhc/wy9kY7/WVPcwIO9VA668Pu8RkO7+0G76SLROeyw9CpQ061i4mA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"ansi-styles\": \"^4.1.0\",\n        \"supports-color\": \"^7.1.0\"\n      },\n      \"engines\": {\n        \"node\": \">=10\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/chalk/chalk?sponsor=1\"\n      }\n    },\n    \"node_modules/jest-runner\": {\n      \"version\": \"29.7.0\",\n      \"resolved\": \"https://registry.npmjs.org/jest-runner/-/jest-runner-29.7.0.tgz\",\n      \"integrity\": \"sha512-fsc4N6cPCAahybGBfTRcq5wFR6fpLznMg47sY5aDpsoejOcVYFb07AHuSnR0liMcPTgBsA3ZJL6kFOjPdoNipQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@jest/console\": \"^29.7.0\",\n        \"@jest/environment\": \"^29.7.0\",\n        \"@jest/test-result\": \"^29.7.0\",\n        \"@jest/transform\": \"^29.7.0\",\n        \"@jest/types\": \"^29.6.3\",\n        \"@types/node\": \"*\",\n        \"chalk\": \"^4.0.0\",\n        \"emittery\": \"^0.13.1\",\n        \"graceful-fs\": \"^4.2.9\",\n        \"jest-docblock\": \"^29.7.0\",\n        \"jest-environment-node\": \"^29.7.0\",\n        \"jest-haste-map\": \"^29.7.0\",\n        \"jest-leak-detector\": \"^29.7.0\",\n        \"jest-message-util\": \"^29.7.0\",\n        \"jest-resolve\": \"^29.7.0\",\n        \"jest-runtime\": \"^29.7.0\",\n        \"jest-util\": \"^29.7.0\",\n        \"jest-watcher\": \"^29.7.0\",\n        \"jest-worker\": \"^29.7.0\",\n        \"p-limit\": \"^3.1.0\",\n        \"source-map-support\": \"0.5.13\"\n      },\n      \"engines\": {\n        \"node\": \"^14.15.0 || ^16.10.0 || >=18.0.0\"\n      }\n    },\n    \"node_modules/jest-runner/node_modules/chalk\": {\n      \"version\": \"4.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/chalk/-/chalk-4.1.2.tgz\",\n      \"integrity\": \"sha512-oKnbhFyRIXpUuez8iBMmyEa4nbj4IOQyuhc/wy9kY7/WVPcwIO9VA668Pu8RkO7+0G76SLROeyw9CpQ061i4mA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"ansi-styles\": \"^4.1.0\",\n        \"supports-color\": \"^7.1.0\"\n      },\n      \"engines\": {\n        \"node\": \">=10\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/chalk/chalk?sponsor=1\"\n      }\n    },\n    \"node_modules/jest-runtime\": {\n      \"version\": \"29.7.0\",\n      \"resolved\": \"https://registry.npmjs.org/jest-runtime/-/jest-runtime-29.7.0.tgz\",\n      \"integrity\": \"sha512-gUnLjgwdGqW7B4LvOIkbKs9WGbn+QLqRQQ9juC6HndeDiezIwhDP+mhMwHWCEcfQ5RUXa6OPnFF8BJh5xegwwQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@jest/environment\": \"^29.7.0\",\n        \"@jest/fake-timers\": \"^29.7.0\",\n        \"@jest/globals\": \"^29.7.0\",\n        \"@jest/source-map\": \"^29.6.3\",\n        \"@jest/test-result\": \"^29.7.0\",\n        \"@jest/transform\": \"^29.7.0\",\n        \"@jest/types\": \"^29.6.3\",\n        \"@types/node\": \"*\",\n        \"chalk\": \"^4.0.0\",\n        \"cjs-module-lexer\": \"^1.0.0\",\n        \"collect-v8-coverage\": \"^1.0.0\",\n        \"glob\": \"^7.1.3\",\n        \"graceful-fs\": \"^4.2.9\",\n        \"jest-haste-map\": \"^29.7.0\",\n        \"jest-message-util\": \"^29.7.0\",\n        \"jest-mock\": \"^29.7.0\",\n        \"jest-regex-util\": \"^29.6.3\",\n        \"jest-resolve\": \"^29.7.0\",\n        \"jest-snapshot\": \"^29.7.0\",\n        \"jest-util\": \"^29.7.0\",\n        \"slash\": \"^3.0.0\",\n        \"strip-bom\": \"^4.0.0\"\n      },\n      \"engines\": {\n        \"node\": \"^14.15.0 || ^16.10.0 || >=18.0.0\"\n      }\n    },\n    \"node_modules/jest-runtime/node_modules/chalk\": {\n      \"version\": \"4.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/chalk/-/chalk-4.1.2.tgz\",\n      \"integrity\": \"sha512-oKnbhFyRIXpUuez8iBMmyEa4nbj4IOQyuhc/wy9kY7/WVPcwIO9VA668Pu8RkO7+0G76SLROeyw9CpQ061i4mA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"ansi-styles\": \"^4.1.0\",\n        \"supports-color\": \"^7.1.0\"\n      },\n      \"engines\": {\n        \"node\": \">=10\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/chalk/chalk?sponsor=1\"\n      }\n    },\n    \"node_modules/jest-snapshot\": {\n      \"version\": \"29.7.0\",\n      \"resolved\": \"https://registry.npmjs.org/jest-snapshot/-/jest-snapshot-29.7.0.tgz\",\n      \"integrity\": \"sha512-Rm0BMWtxBcioHr1/OX5YCP8Uov4riHvKPknOGs804Zg9JGZgmIBkbtlxJC/7Z4msKYVbIJtfU+tKb8xlYNfdkw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@babel/core\": \"^7.11.6\",\n        \"@babel/generator\": \"^7.7.2\",\n        \"@babel/plugin-syntax-jsx\": \"^7.7.2\",\n        \"@babel/plugin-syntax-typescript\": \"^7.7.2\",\n        \"@babel/types\": \"^7.3.3\",\n        \"@jest/expect-utils\": \"^29.7.0\",\n        \"@jest/transform\": \"^29.7.0\",\n        \"@jest/types\": \"^29.6.3\",\n        \"babel-preset-current-node-syntax\": \"^1.0.0\",\n        \"chalk\": \"^4.0.0\",\n        \"expect\": \"^29.7.0\",\n        \"graceful-fs\": \"^4.2.9\",\n        \"jest-diff\": \"^29.7.0\",\n        \"jest-get-type\": \"^29.6.3\",\n        \"jest-matcher-utils\": \"^29.7.0\",\n        \"jest-message-util\": \"^29.7.0\",\n        \"jest-util\": \"^29.7.0\",\n        \"natural-compare\": \"^1.4.0\",\n        \"pretty-format\": \"^29.7.0\",\n        \"semver\": \"^7.5.3\"\n      },\n      \"engines\": {\n        \"node\": \"^14.15.0 || ^16.10.0 || >=18.0.0\"\n      }\n    },\n    \"node_modules/jest-snapshot/node_modules/chalk\": {\n      \"version\": \"4.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/chalk/-/chalk-4.1.2.tgz\",\n      \"integrity\": \"sha512-oKnbhFyRIXpUuez8iBMmyEa4nbj4IOQyuhc/wy9kY7/WVPcwIO9VA668Pu8RkO7+0G76SLROeyw9CpQ061i4mA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"ansi-styles\": \"^4.1.0\",\n        \"supports-color\": \"^7.1.0\"\n      },\n      \"engines\": {\n        \"node\": \">=10\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/chalk/chalk?sponsor=1\"\n      }\n    },\n    \"node_modules/jest-snapshot/node_modules/pretty-format\": {\n      \"version\": \"29.7.0\",\n      \"resolved\": \"https://registry.npmjs.org/pretty-format/-/pretty-format-29.7.0.tgz\",\n      \"integrity\": \"sha512-Pdlw/oPxN+aXdmM9R00JVC9WVFoCLTKJvDVLgmJ+qAffBMxsV85l/Lu7sNx4zSzPyoL2euImuEwHhOXdEgNFZQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@jest/schemas\": \"^29.6.3\",\n        \"ansi-styles\": \"^5.0.0\",\n        \"react-is\": \"^18.0.0\"\n      },\n      \"engines\": {\n        \"node\": \"^14.15.0 || ^16.10.0 || >=18.0.0\"\n      }\n    },\n    \"node_modules/jest-snapshot/node_modules/pretty-format/node_modules/ansi-styles\": {\n      \"version\": \"5.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/ansi-styles/-/ansi-styles-5.2.0.tgz\",\n      \"integrity\": \"sha512-Cxwpt2SfTzTtXcfOlzGEee8O+c+MmUgGrNiBcXnuWxuFJHe6a5Hz7qwhwe5OgaSYI0IJvkLqWX1ASG+cJOkEiA==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=10\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/chalk/ansi-styles?sponsor=1\"\n      }\n    },\n    \"node_modules/jest-snapshot/node_modules/react-is\": {\n      \"version\": \"18.3.1\",\n      \"resolved\": \"https://registry.npmjs.org/react-is/-/react-is-18.3.1.tgz\",\n      \"integrity\": \"sha512-/LLMVyas0ljjAtoYiPqYiL8VWXzUUdThrmU5+n20DZv+a+ClRoevUzw5JxU+Ieh5/c87ytoTBV9G1FiKfNJdmg==\",\n      \"dev\": true\n    },\n    \"node_modules/jest-snapshot/node_modules/semver\": {\n      \"version\": \"7.7.2\",\n      \"resolved\": \"https://registry.npmjs.org/semver/-/semver-7.7.2.tgz\",\n      \"integrity\": \"sha512-RF0Fw+rO5AMf9MAyaRXI4AV0Ulj5lMHqVxxdSgiVbixSCXoEmmX/jk0CuJw4+3SqroYO9VoUh+HcuJivvtJemA==\",\n      \"dev\": true,\n      \"bin\": {\n        \"semver\": \"bin/semver.js\"\n      },\n      \"engines\": {\n        \"node\": \">=10\"\n      }\n    },\n    \"node_modules/jest-util\": {\n      \"version\": \"29.7.0\",\n      \"resolved\": \"https://registry.npmjs.org/jest-util/-/jest-util-29.7.0.tgz\",\n      \"integrity\": \"sha512-z6EbKajIpqGKU56y5KBUgy1dt1ihhQJgWzUlZHArA/+X2ad7Cb5iF+AK1EWVL/Bo7Rz9uurpqw6SiBCefUbCGA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@jest/types\": \"^29.6.3\",\n        \"@types/node\": \"*\",\n        \"chalk\": \"^4.0.0\",\n        \"ci-info\": \"^3.2.0\",\n        \"graceful-fs\": \"^4.2.9\",\n        \"picomatch\": \"^2.2.3\"\n      },\n      \"engines\": {\n        \"node\": \"^14.15.0 || ^16.10.0 || >=18.0.0\"\n      }\n    },\n    \"node_modules/jest-util/node_modules/chalk\": {\n      \"version\": \"4.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/chalk/-/chalk-4.1.2.tgz\",\n      \"integrity\": \"sha512-oKnbhFyRIXpUuez8iBMmyEa4nbj4IOQyuhc/wy9kY7/WVPcwIO9VA668Pu8RkO7+0G76SLROeyw9CpQ061i4mA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"ansi-styles\": \"^4.1.0\",\n        \"supports-color\": \"^7.1.0\"\n      },\n      \"engines\": {\n        \"node\": \">=10\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/chalk/chalk?sponsor=1\"\n      }\n    },\n    \"node_modules/jest-validate\": {\n      \"version\": \"29.7.0\",\n      \"resolved\": \"https://registry.npmjs.org/jest-validate/-/jest-validate-29.7.0.tgz\",\n      \"integrity\": \"sha512-ZB7wHqaRGVw/9hST/OuFUReG7M8vKeq0/J2egIGLdvjHCmYqGARhzXmtgi+gVeZ5uXFF219aOc3Ls2yLg27tkw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@jest/types\": \"^29.6.3\",\n        \"camelcase\": \"^6.2.0\",\n        \"chalk\": \"^4.0.0\",\n        \"jest-get-type\": \"^29.6.3\",\n        \"leven\": \"^3.1.0\",\n        \"pretty-format\": \"^29.7.0\"\n      },\n      \"engines\": {\n        \"node\": \"^14.15.0 || ^16.10.0 || >=18.0.0\"\n      }\n    },\n    \"node_modules/jest-validate/node_modules/camelcase\": {\n      \"version\": \"6.3.0\",\n      \"resolved\": \"https://registry.npmjs.org/camelcase/-/camelcase-6.3.0.tgz\",\n      \"integrity\": \"sha512-Gmy6FhYlCY7uOElZUSbxo2UCDH8owEk996gkbrpsgGtrJLM3J7jGxl9Ic7Qwwj4ivOE5AWZWRMecDdF7hqGjFA==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=10\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    },\n    \"node_modules/jest-validate/node_modules/chalk\": {\n      \"version\": \"4.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/chalk/-/chalk-4.1.2.tgz\",\n      \"integrity\": \"sha512-oKnbhFyRIXpUuez8iBMmyEa4nbj4IOQyuhc/wy9kY7/WVPcwIO9VA668Pu8RkO7+0G76SLROeyw9CpQ061i4mA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"ansi-styles\": \"^4.1.0\",\n        \"supports-color\": \"^7.1.0\"\n      },\n      \"engines\": {\n        \"node\": \">=10\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/chalk/chalk?sponsor=1\"\n      }\n    },\n    \"node_modules/jest-validate/node_modules/pretty-format\": {\n      \"version\": \"29.7.0\",\n      \"resolved\": \"https://registry.npmjs.org/pretty-format/-/pretty-format-29.7.0.tgz\",\n      \"integrity\": \"sha512-Pdlw/oPxN+aXdmM9R00JVC9WVFoCLTKJvDVLgmJ+qAffBMxsV85l/Lu7sNx4zSzPyoL2euImuEwHhOXdEgNFZQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@jest/schemas\": \"^29.6.3\",\n        \"ansi-styles\": \"^5.0.0\",\n        \"react-is\": \"^18.0.0\"\n      },\n      \"engines\": {\n        \"node\": \"^14.15.0 || ^16.10.0 || >=18.0.0\"\n      }\n    },\n    \"node_modules/jest-validate/node_modules/pretty-format/node_modules/ansi-styles\": {\n      \"version\": \"5.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/ansi-styles/-/ansi-styles-5.2.0.tgz\",\n      \"integrity\": \"sha512-Cxwpt2SfTzTtXcfOlzGEee8O+c+MmUgGrNiBcXnuWxuFJHe6a5Hz7qwhwe5OgaSYI0IJvkLqWX1ASG+cJOkEiA==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=10\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/chalk/ansi-styles?sponsor=1\"\n      }\n    },\n    \"node_modules/jest-validate/node_modules/react-is\": {\n      \"version\": \"18.3.1\",\n      \"resolved\": \"https://registry.npmjs.org/react-is/-/react-is-18.3.1.tgz\",\n      \"integrity\": \"sha512-/LLMVyas0ljjAtoYiPqYiL8VWXzUUdThrmU5+n20DZv+a+ClRoevUzw5JxU+Ieh5/c87ytoTBV9G1FiKfNJdmg==\",\n      \"dev\": true\n    },\n    \"node_modules/jest-watcher\": {\n      \"version\": \"29.7.0\",\n      \"resolved\": \"https://registry.npmjs.org/jest-watcher/-/jest-watcher-29.7.0.tgz\",\n      \"integrity\": \"sha512-49Fg7WXkU3Vl2h6LbLtMQ/HyB6rXSIX7SqvBLQmssRBGN9I0PNvPmAmCWSOY6SOvrjhI/F7/bGAv9RtnsPA03g==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@jest/test-result\": \"^29.7.0\",\n        \"@jest/types\": \"^29.6.3\",\n        \"@types/node\": \"*\",\n        \"ansi-escapes\": \"^4.2.1\",\n        \"chalk\": \"^4.0.0\",\n        \"emittery\": \"^0.13.1\",\n        \"jest-util\": \"^29.7.0\",\n        \"string-length\": \"^4.0.1\"\n      },\n      \"engines\": {\n        \"node\": \"^14.15.0 || ^16.10.0 || >=18.0.0\"\n      }\n    },\n    \"node_modules/jest-watcher/node_modules/chalk\": {\n      \"version\": \"4.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/chalk/-/chalk-4.1.2.tgz\",\n      \"integrity\": \"sha512-oKnbhFyRIXpUuez8iBMmyEa4nbj4IOQyuhc/wy9kY7/WVPcwIO9VA668Pu8RkO7+0G76SLROeyw9CpQ061i4mA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"ansi-styles\": \"^4.1.0\",\n        \"supports-color\": \"^7.1.0\"\n      },\n      \"engines\": {\n        \"node\": \">=10\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/chalk/chalk?sponsor=1\"\n      }\n    },\n    \"node_modules/jest-worker\": {\n      \"version\": \"29.7.0\",\n      \"resolved\": \"https://registry.npmjs.org/jest-worker/-/jest-worker-29.7.0.tgz\",\n      \"integrity\": \"sha512-eIz2msL/EzL9UFTFFx7jBTkeZfku0yUAyZZZmJ93H2TYEiroIx2PQjEXcwYtYl8zXCxb+PAmA2hLIt/6ZEkPHw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@types/node\": \"*\",\n        \"jest-util\": \"^29.7.0\",\n        \"merge-stream\": \"^2.0.0\",\n        \"supports-color\": \"^8.0.0\"\n      },\n      \"engines\": {\n        \"node\": \"^14.15.0 || ^16.10.0 || >=18.0.0\"\n      }\n    },\n    \"node_modules/jest-worker/node_modules/supports-color\": {\n      \"version\": \"8.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/supports-color/-/supports-color-8.1.1.tgz\",\n      \"integrity\": \"sha512-MpUEN2OodtUzxvKQl72cUF7RQ5EiHsGvSsVG0ia9c5RbWGL2CI4C7EpPS8UTBIplnlzZiNuV56w+FuNxy3ty2Q==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"has-flag\": \"^4.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=10\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/chalk/supports-color?sponsor=1\"\n      }\n    },\n    \"node_modules/jiti\": {\n      \"version\": \"1.21.7\",\n      \"resolved\": \"https://registry.npmjs.org/jiti/-/jiti-1.21.7.tgz\",\n      \"integrity\": \"sha512-/imKNG4EbWNrVjoNC/1H5/9GFy+tqjGBHCaSsN+P2RnPqjsLmv6UD3Ej+Kj8nBWaRAwyk7kK5ZUc+OEatnTR3A==\",\n      \"dev\": true,\n      \"bin\": {\n        \"jiti\": \"bin/jiti.js\"\n      }\n    },\n    \"node_modules/js-tokens\": {\n      \"version\": \"4.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/js-tokens/-/js-tokens-4.0.0.tgz\",\n      \"integrity\": \"sha512-RdJUflcE3cUzKiMqQgsCu06FPu9UdIJO0beYbPhHN4k6apgJtifcoCtT9bcxOpYBtpD2kCM6Sbzg4CausW/PKQ==\"\n    },\n    \"node_modules/js-yaml\": {\n      \"version\": \"3.14.1\",\n      \"resolved\": \"https://registry.npmjs.org/js-yaml/-/js-yaml-3.14.1.tgz\",\n      \"integrity\": \"sha512-okMH7OXXJ7YrN9Ok3/SXrnu4iX9yOk+25nqX4imS2npuvTYDmo/QEZoqwZkYaIDk3jVvBOTOIEgEhaLOynBS9g==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"argparse\": \"^1.0.7\",\n        \"esprima\": \"^4.0.0\"\n      },\n      \"bin\": {\n        \"js-yaml\": \"bin/js-yaml.js\"\n      }\n    },\n    \"node_modules/jsesc\": {\n      \"version\": \"3.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/jsesc/-/jsesc-3.1.0.tgz\",\n      \"integrity\": \"sha512-/sM3dO2FOzXjKQhJuo0Q173wf2KOo8t4I8vHy6lF9poUp7bKT0/NHE8fPX23PwfhnykfqnC2xRxOnVw5XuGIaA==\",\n      \"dev\": true,\n      \"bin\": {\n        \"jsesc\": \"bin/jsesc\"\n      },\n      \"engines\": {\n        \"node\": \">=6\"\n      }\n    },\n    \"node_modules/json-parse-even-better-errors\": {\n      \"version\": \"2.3.1\",\n      \"resolved\": \"https://registry.npmjs.org/json-parse-even-better-errors/-/json-parse-even-better-errors-2.3.1.tgz\",\n      \"integrity\": \"sha512-xyFwyhro/JEof6Ghe2iz2NcXoj2sloNsWr/XsERDK/oiPCfaNhl5ONfp+jQdAZRQQ0IJWNzH9zIZF7li91kh2w==\",\n      \"dev\": true\n    },\n    \"node_modules/json5\": {\n      \"version\": \"2.2.3\",\n      \"resolved\": \"https://registry.npmjs.org/json5/-/json5-2.2.3.tgz\",\n      \"integrity\": \"sha512-XmOWe7eyHYH14cLdVPoyg+GOH3rYX++KpzrylJwSW98t3Nk+U8XOl8FWKOgwtzdb8lXGf6zYwDUzeHMWfxasyg==\",\n      \"dev\": true,\n      \"bin\": {\n        \"json5\": \"lib/cli.js\"\n      },\n      \"engines\": {\n        \"node\": \">=6\"\n      }\n    },\n    \"node_modules/jspdf\": {\n      \"version\": \"2.5.2\",\n      \"resolved\": \"https://registry.npmjs.org/jspdf/-/jspdf-2.5.2.tgz\",\n      \"integrity\": \"sha512-myeX9c+p7znDWPk0eTrujCzNjT+CXdXyk7YmJq5nD5V7uLLKmSXnlQ/Jn/kuo3X09Op70Apm0rQSnFWyGK8uEQ==\",\n      \"dependencies\": {\n        \"@babel/runtime\": \"^7.23.2\",\n        \"atob\": \"^2.1.2\",\n        \"btoa\": \"^1.2.1\",\n        \"fflate\": \"^0.8.1\"\n      },\n      \"optionalDependencies\": {\n        \"canvg\": \"^3.0.6\",\n        \"core-js\": \"^3.6.0\",\n        \"dompurify\": \"^2.5.4\",\n        \"html2canvas\": \"^1.0.0-rc.5\"\n      }\n    },\n    \"node_modules/kleur\": {\n      \"version\": \"3.0.3\",\n      \"resolved\": \"https://registry.npmjs.org/kleur/-/kleur-3.0.3.tgz\",\n      \"integrity\": \"sha512-eTIzlVOSUR+JxdDFepEYcBMtZ9Qqdef+rnzWdRZuMbOywu5tO2w2N7rqjoANZ5k9vywhL6Br1VRjUIgTQx4E8w==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=6\"\n      }\n    },\n    \"node_modules/leven\": {\n      \"version\": \"3.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/leven/-/leven-3.1.0.tgz\",\n      \"integrity\": \"sha512-qsda+H8jTaUaN/x5vzW2rzc+8Rw4TAQ/4KjB46IwK5VH+IlVeeeje/EoZRpiXvIqjFgK84QffqPztGI3VBLG1A==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=6\"\n      }\n    },\n    \"node_modules/lie\": {\n      \"version\": \"3.3.0\",\n      \"resolved\": \"https://registry.npmjs.org/lie/-/lie-3.3.0.tgz\",\n      \"integrity\": \"sha512-UaiMJzeWRlEujzAuw5LokY1L5ecNQYZKfmyZ9L7wDHb/p5etKaxXhohBcrw0EYby+G/NA52vRSN4N39dxHAIwQ==\",\n      \"dependencies\": {\n        \"immediate\": \"~3.0.5\"\n      }\n    },\n    \"node_modules/lilconfig\": {\n      \"version\": \"3.1.3\",\n      \"resolved\": \"https://registry.npmjs.org/lilconfig/-/lilconfig-3.1.3.tgz\",\n      \"integrity\": \"sha512-/vlFKAoH5Cgt3Ie+JLhRbwOsCQePABiU3tJ1egGvyQ+33R/vcwM2Zl2QR/LzjsBeItPt3oSVXapn+m4nQDvpzw==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=14\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/antonk52\"\n      }\n    },\n    \"node_modules/lines-and-columns\": {\n      \"version\": \"1.2.4\",\n      \"resolved\": \"https://registry.npmjs.org/lines-and-columns/-/lines-and-columns-1.2.4.tgz\",\n      \"integrity\": \"sha512-7ylylesZQ/PV29jhEDl3Ufjo6ZX7gCqJr5F7PKrqc93v7fzSymt1BpwEU8nAUXs8qzzvqhbjhK5QZg6Mt/HkBg==\",\n      \"dev\": true\n    },\n    \"node_modules/locate-path\": {\n      \"version\": \"5.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/locate-path/-/locate-path-5.0.0.tgz\",\n      \"integrity\": \"sha512-t7hw9pI+WvuwNJXwk5zVHpyhIqzg2qTlklJOf0mVxGSbe3Fp2VieZcduNYjaLDoy6p9uGpQEGWG87WpMKlNq8g==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"p-locate\": \"^4.1.0\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/lodash\": {\n      \"version\": \"4.17.21\",\n      \"resolved\": \"https://registry.npmjs.org/lodash/-/lodash-4.17.21.tgz\",\n      \"integrity\": \"sha512-v2kDEe57lecTulaDIuNTPy3Ry4gLGJ6Z1O3vE1krgXZNrsQ+LFTGHVxVjcXPs17LhbZVGedAJv8XZ1tvj5FvSg==\",\n      \"dev\": true\n    },\n    \"node_modules/loose-envify\": {\n      \"version\": \"1.4.0\",\n      \"resolved\": \"https://registry.npmjs.org/loose-envify/-/loose-envify-1.4.0.tgz\",\n      \"integrity\": \"sha512-lyuxPGr/Wfhrlem2CL/UcnUc1zcqKAImBDzukY7Y5F/yQiNdko6+fRLevlw1HgMySw7f611UIY408EtxRSoK3Q==\",\n      \"dependencies\": {\n        \"js-tokens\": \"^3.0.0 || ^4.0.0\"\n      },\n      \"bin\": {\n        \"loose-envify\": \"cli.js\"\n      }\n    },\n    \"node_modules/lru-cache\": {\n      \"version\": \"5.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/lru-cache/-/lru-cache-5.1.1.tgz\",\n      \"integrity\": \"sha512-KpNARQA3Iwv+jTA0utUVVbrh+Jlrr1Fv0e56GGzAFOXN7dk/FviaDW8LHmK52DlcH4WP2n6gI8vN1aesBFgo9w==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"yallist\": \"^3.0.2\"\n      }\n    },\n    \"node_modules/lz-string\": {\n      \"version\": \"1.5.0\",\n      \"resolved\": \"https://registry.npmjs.org/lz-string/-/lz-string-1.5.0.tgz\",\n      \"integrity\": \"sha512-h5bgJWpxJNswbU7qCrV0tIKQCaS3blPDrqKWx+QxzuzL1zGUzij9XCWLrSLsJPu5t+eWA/ycetzYAO5IOMcWAQ==\",\n      \"dev\": true,\n      \"bin\": {\n        \"lz-string\": \"bin/bin.js\"\n      }\n    },\n    \"node_modules/maath\": {\n      \"version\": \"0.10.8\",\n      \"resolved\": \"https://registry.npmjs.org/maath/-/maath-0.10.8.tgz\",\n      \"integrity\": \"sha512-tRvbDF0Pgqz+9XUa4jjfgAQ8/aPKmQdWXilFu2tMy4GWj4NOsx99HlULO4IeREfbO3a0sA145DZYyvXPkybm0g==\",\n      \"peerDependencies\": {\n        \"@types/three\": \">=0.134.0\",\n        \"three\": \">=0.134.0\"\n      }\n    },\n    \"node_modules/make-dir\": {\n      \"version\": \"4.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/make-dir/-/make-dir-4.0.0.tgz\",\n      \"integrity\": \"sha512-hXdUTZYIVOt1Ex//jAQi+wTZZpUpwBj/0QsOzqegb3rGMMeJiSEu5xLHnYfBrRV4RH2+OCSOO95Is/7x1WJ4bw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"semver\": \"^7.5.3\"\n      },\n      \"engines\": {\n        \"node\": \">=10\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    },\n    \"node_modules/make-dir/node_modules/semver\": {\n      \"version\": \"7.7.2\",\n      \"resolved\": \"https://registry.npmjs.org/semver/-/semver-7.7.2.tgz\",\n      \"integrity\": \"sha512-RF0Fw+rO5AMf9MAyaRXI4AV0Ulj5lMHqVxxdSgiVbixSCXoEmmX/jk0CuJw4+3SqroYO9VoUh+HcuJivvtJemA==\",\n      \"dev\": true,\n      \"bin\": {\n        \"semver\": \"bin/semver.js\"\n      },\n      \"engines\": {\n        \"node\": \">=10\"\n      }\n    },\n    \"node_modules/makeerror\": {\n      \"version\": \"1.0.12\",\n      \"resolved\": \"https://registry.npmjs.org/makeerror/-/makeerror-1.0.12.tgz\",\n      \"integrity\": \"sha512-JmqCvUhmt43madlpFzG4BQzG2Z3m6tvQDNKdClZnO3VbIudJYmxsT0FNJMeiB2+JTSlTQTSbU8QdesVmwJcmLg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"tmpl\": \"1.0.5\"\n      }\n    },\n    \"node_modules/math-intrinsics\": {\n      \"version\": \"1.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/math-intrinsics/-/math-intrinsics-1.1.0.tgz\",\n      \"integrity\": \"sha512-/IXtbwEk5HTPyEwyKX6hGkYXxM9nbj64B+ilVJnC/R6B0pH5G4V3b0pVbL7DBj4tkhBAppbQUlf6F6Xl9LHu1g==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      }\n    },\n    \"node_modules/merge-stream\": {\n      \"version\": \"2.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/merge-stream/-/merge-stream-2.0.0.tgz\",\n      \"integrity\": \"sha512-abv/qOcuPfk3URPfDzmZU1LKmuw8kT+0nIHvKrKgFrwifol/doWcdA4ZqsWQ8ENrFKkd67Mfpo/LovbIUsbt3w==\",\n      \"dev\": true\n    },\n    \"node_modules/merge2\": {\n      \"version\": \"1.4.1\",\n      \"resolved\": \"https://registry.npmjs.org/merge2/-/merge2-1.4.1.tgz\",\n      \"integrity\": \"sha512-8q7VEgMJW4J8tcfVPy8g09NcQwZdbwFEqhe/WZkoIzjn/3TGDwtOCYtXGxA3O8tPzpczCCDgv+P2P5y00ZJOOg==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">= 8\"\n      }\n    },\n    \"node_modules/meshline\": {\n      \"version\": \"3.3.1\",\n      \"resolved\": \"https://registry.npmjs.org/meshline/-/meshline-3.3.1.tgz\",\n      \"integrity\": \"sha512-/TQj+JdZkeSUOl5Mk2J7eLcYTLiQm2IDzmlSvYm7ov15anEcDJ92GHqqazxTSreeNgfnYu24kiEvvv0WlbCdFQ==\",\n      \"peerDependencies\": {\n        \"three\": \">=0.137\"\n      }\n    },\n    \"node_modules/meshoptimizer\": {\n      \"version\": \"0.18.1\",\n      \"resolved\": \"https://registry.npmjs.org/meshoptimizer/-/meshoptimizer-0.18.1.tgz\",\n      \"integrity\": \"sha512-ZhoIoL7TNV4s5B6+rx5mC//fw8/POGyNxS/DZyCJeiZ12ScLfVwRE/GfsxwiTkMYYD5DmK2/JXnEVXqL4rF+Sw==\"\n    },\n    \"node_modules/micromatch\": {\n      \"version\": \"4.0.8\",\n      \"resolved\": \"https://registry.npmjs.org/micromatch/-/micromatch-4.0.8.tgz\",\n      \"integrity\": \"sha512-PXwfBhYu0hBCPw8Dn0E+WDYb7af3dSLVWKi3HGv84IdF4TyFoC0ysxFd0Goxw7nSv4T/PzEJQxsYsEiFCKo2BA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"braces\": \"^3.0.3\",\n        \"picomatch\": \"^2.3.1\"\n      },\n      \"engines\": {\n        \"node\": \">=8.6\"\n      }\n    },\n    \"node_modules/mimic-fn\": {\n      \"version\": \"2.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/mimic-fn/-/mimic-fn-2.1.0.tgz\",\n      \"integrity\": \"sha512-OqbOk5oEQeAZ8WXWydlu9HJjz9WVdEIvamMCcXmuqUYjTknH/sqsWvhQ3vgwKFRR1HpjvNBKQ37nbJgYzGqGcg==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=6\"\n      }\n    },\n    \"node_modules/min-indent\": {\n      \"version\": \"1.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/min-indent/-/min-indent-1.0.1.tgz\",\n      \"integrity\": \"sha512-I9jwMn07Sy/IwOj3zVkVik2JTvgpaykDZEigL6Rx6N9LbMywwUSMtxET+7lVoDLLd3O3IXwJwvuuns8UB/HeAg==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=4\"\n      }\n    },\n    \"node_modules/minimatch\": {\n      \"version\": \"3.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/minimatch/-/minimatch-3.1.2.tgz\",\n      \"integrity\": \"sha512-J7p63hRiAjw1NDEww1W7i37+ByIrOWO5XQQAzZ3VOcL0PNybwpfmV/N05zFAzwQ9USyEcX6t3UO+K5aqBQOIHw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"brace-expansion\": \"^1.1.7\"\n      },\n      \"engines\": {\n        \"node\": \"*\"\n      }\n    },\n    \"node_modules/minipass\": {\n      \"version\": \"7.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/minipass/-/minipass-7.1.2.tgz\",\n      \"integrity\": \"sha512-qOOzS1cBTWYF4BH8fVePDBOO9iptMnGUEZwNc/cMWnTV2nVLZ7VoNWEPHkYczZA0pdoA7dl6e7FL659nX9S2aw==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=16 || 14 >=14.17\"\n      }\n    },\n    \"node_modules/ms\": {\n      \"version\": \"2.1.3\",\n      \"resolved\": \"https://registry.npmjs.org/ms/-/ms-2.1.3.tgz\",\n      \"integrity\": \"sha512-6FlzubTLZG3J2a/NVCAleEhjzq5oxgHyaCU9yYXvcLsvoVaHJq/s5xXI6/XXP6tz7R9xAOtHnSO/tXtF3WRTlA==\",\n      \"dev\": true\n    },\n    \"node_modules/mz\": {\n      \"version\": \"2.7.0\",\n      \"resolved\": \"https://registry.npmjs.org/mz/-/mz-2.7.0.tgz\",\n      \"integrity\": \"sha512-z81GNO7nnYMEhrGh9LeymoE4+Yr0Wn5McHIZMK5cfQCl+NDX08sCZgUc9/6MHni9IWuFLm1Z3HTCXu2z9fN62Q==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"any-promise\": \"^1.0.0\",\n        \"object-assign\": \"^4.0.1\",\n        \"thenify-all\": \"^1.0.0\"\n      }\n    },\n    \"node_modules/nanoid\": {\n      \"version\": \"3.3.11\",\n      \"resolved\": \"https://registry.npmjs.org/nanoid/-/nanoid-3.3.11.tgz\",\n      \"integrity\": \"sha512-N8SpfPUnUp1bK+PMYW8qSWdl9U+wwNWI4QKxOYDy9JAro3WMX7p2OeVRF9v+347pnakNevPmiHhNmZ2HbFA76w==\",\n      \"dev\": true,\n      \"funding\": [\n        {\n          \"type\": \"github\",\n          \"url\": \"https://github.com/sponsors/ai\"\n        }\n      ],\n      \"bin\": {\n        \"nanoid\": \"bin/nanoid.cjs\"\n      },\n      \"engines\": {\n        \"node\": \"^10 || ^12 || ^13.7 || ^14 || >=15.0.1\"\n      }\n    },\n    \"node_modules/natural-compare\": {\n      \"version\": \"1.4.0\",\n      \"resolved\": \"https://registry.npmjs.org/natural-compare/-/natural-compare-1.4.0.tgz\",\n      \"integrity\": \"sha512-OWND8ei3VtNC9h7V60qff3SVobHr996CTwgxubgyQYEpg290h9J0buyECNNJexkFm5sOajh5G116RYA1c8ZMSw==\",\n      \"dev\": true\n    },\n    \"node_modules/node-int64\": {\n      \"version\": \"0.4.0\",\n      \"resolved\": \"https://registry.npmjs.org/node-int64/-/node-int64-0.4.0.tgz\",\n      \"integrity\": \"sha512-O5lz91xSOeoXP6DulyHfllpq+Eg00MWitZIbtPfoSEvqIHdl5gfcY6hYzDWnj0qD5tz52PI08u9qUvSVeUBeHw==\",\n      \"dev\": true\n    },\n    \"node_modules/node-releases\": {\n      \"version\": \"2.0.19\",\n      \"resolved\": \"https://registry.npmjs.org/node-releases/-/node-releases-2.0.19.tgz\",\n      \"integrity\": \"sha512-xxOWJsBKtzAq7DY0J+DTzuz58K8e7sJbdgwkbMWQe8UYB6ekmsQ45q0M/tJDsGaZmbC+l7n57UV8Hl5tHxO9uw==\",\n      \"dev\": true\n    },\n    \"node_modules/normalize-path\": {\n      \"version\": \"3.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/normalize-path/-/normalize-path-3.0.0.tgz\",\n      \"integrity\": \"sha512-6eZs5Ls3WtCisHWp9S2GUy8dqkpGi4BVSz3GaqiE6ezub0512ESztXUwUB6C6IKbQkY2Pnb/mD4WYojCRwcwLA==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/normalize-range\": {\n      \"version\": \"0.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/normalize-range/-/normalize-range-0.1.2.tgz\",\n      \"integrity\": \"sha512-bdok/XvKII3nUpklnV6P2hxtMNrCboOjAcyBuQnWEhO665FwrSNRxU+AqpsyvO6LgGYPspN+lu5CLtw4jPRKNA==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/npm-run-path\": {\n      \"version\": \"4.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/npm-run-path/-/npm-run-path-4.0.1.tgz\",\n      \"integrity\": \"sha512-S48WzZW777zhNIrn7gxOlISNAqi9ZC/uQFnRdbeIHhZhCA6UqpkOT8T1G7BvfdgP4Er8gF4sUbaS0i7QvIfCWw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"path-key\": \"^3.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/object-assign\": {\n      \"version\": \"4.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/object-assign/-/object-assign-4.1.1.tgz\",\n      \"integrity\": \"sha512-rJgTQnkUnH1sFw8yT6VSU3zD3sWmu6sZhIseY8VX+GRu3P6F7Fu+JNDoXfklElbLJSnc3FUQHVe4cU5hj+BcUg==\",\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/object-hash\": {\n      \"version\": \"3.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/object-hash/-/object-hash-3.0.0.tgz\",\n      \"integrity\": \"sha512-RSn9F68PjH9HqtltsSnqYC1XXoWe9Bju5+213R98cNGttag9q9yAOTzdbsqvIa7aNm5WffBZFpWYr2aWrklWAw==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">= 6\"\n      }\n    },\n    \"node_modules/object-inspect\": {\n      \"version\": \"1.13.4\",\n      \"resolved\": \"https://registry.npmjs.org/object-inspect/-/object-inspect-1.13.4.tgz\",\n      \"integrity\": \"sha512-W67iLl4J2EXEGTbfeHCffrjDfitvLANg0UlX3wFUUSTx92KXRFegMHUVgSqE+wvhAbi4WqjGg9czysTV2Epbew==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/object-is\": {\n      \"version\": \"1.1.6\",\n      \"resolved\": \"https://registry.npmjs.org/object-is/-/object-is-1.1.6.tgz\",\n      \"integrity\": \"sha512-F8cZ+KfGlSGi09lJT7/Nd6KJZ9ygtvYC0/UYYLI9nmQKLMnydpB9yvbv9K1uSkEu7FU9vYPmVwLg328tX+ot3Q==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"call-bind\": \"^1.0.7\",\n        \"define-properties\": \"^1.2.1\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/object-keys\": {\n      \"version\": \"1.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/object-keys/-/object-keys-1.1.1.tgz\",\n      \"integrity\": \"sha512-NuAESUOUMrlIXOfHKzD6bpPu3tYt3xvjNdRIQ+FeT0lNb4K8WR70CaDxhuNguS2XG+GjkyMwOzsN5ZktImfhLA==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      }\n    },\n    \"node_modules/object.assign\": {\n      \"version\": \"4.1.7\",\n      \"resolved\": \"https://registry.npmjs.org/object.assign/-/object.assign-4.1.7.tgz\",\n      \"integrity\": \"sha512-nK28WOo+QIjBkDduTINE4JkF/UJJKyf2EJxvJKfblDpyg0Q+pkOHNTL0Qwy6NP6FhE/EnzV73BxxqcJaXY9anw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"call-bind\": \"^1.0.8\",\n        \"call-bound\": \"^1.0.3\",\n        \"define-properties\": \"^1.2.1\",\n        \"es-object-atoms\": \"^1.0.0\",\n        \"has-symbols\": \"^1.1.0\",\n        \"object-keys\": \"^1.1.1\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/once\": {\n      \"version\": \"1.4.0\",\n      \"resolved\": \"https://registry.npmjs.org/once/-/once-1.4.0.tgz\",\n      \"integrity\": \"sha512-lNaJgI+2Q5URQBkccEKHTQOPaXdUxnZZElQTZY0MFUAuaEqe1E+Nyvgdz/aIyNi6Z9MzO5dv1H8n58/GELp3+w==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"wrappy\": \"1\"\n      }\n    },\n    \"node_modules/onetime\": {\n      \"version\": \"5.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/onetime/-/onetime-5.1.2.tgz\",\n      \"integrity\": \"sha512-kbpaSSGJTWdAY5KPVeMOKXSrPtr8C8C7wodJbcsd51jRnmD+GZu8Y0VoU6Dm5Z4vWr0Ig/1NKuWRKf7j5aaYSg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"mimic-fn\": \"^2.1.0\"\n      },\n      \"engines\": {\n        \"node\": \">=6\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    },\n    \"node_modules/p-limit\": {\n      \"version\": \"3.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/p-limit/-/p-limit-3.1.0.tgz\",\n      \"integrity\": \"sha512-TYOanM3wGwNGsZN2cVTYPArw454xnXj5qmWF1bEoAc4+cU/ol7GVh7odevjp1FNHduHc3KZMcFduxU5Xc6uJRQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"yocto-queue\": \"^0.1.0\"\n      },\n      \"engines\": {\n        \"node\": \">=10\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    },\n    \"node_modules/p-locate\": {\n      \"version\": \"4.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/p-locate/-/p-locate-4.1.0.tgz\",\n      \"integrity\": \"sha512-R79ZZ/0wAxKGu3oYMlz8jy/kbhsNrS7SKZ7PxEHBgJ5+F2mtFW2fK2cOtBh1cHYkQsbzFV7I+EoRKe6Yt0oK7A==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"p-limit\": \"^2.2.0\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/p-locate/node_modules/p-limit\": {\n      \"version\": \"2.3.0\",\n      \"resolved\": \"https://registry.npmjs.org/p-limit/-/p-limit-2.3.0.tgz\",\n      \"integrity\": \"sha512-//88mFWSJx8lxCzwdAABTJL2MyWB12+eIY7MDL2SqLmAkeKU9qxRvWuSyTjm3FUmpBEMuFfckAIqEaVGUDxb6w==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"p-try\": \"^2.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=6\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    },\n    \"node_modules/p-try\": {\n      \"version\": \"2.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/p-try/-/p-try-2.2.0.tgz\",\n      \"integrity\": \"sha512-R4nPAVTAU0B9D35/Gk3uJf/7XYbQcyohSKdvAxIRSNghFl4e71hVoGnBNQz9cWaXxO2I10KTC+3jMdvvoKw6dQ==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=6\"\n      }\n    },\n    \"node_modules/package-json-from-dist\": {\n      \"version\": \"1.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/package-json-from-dist/-/package-json-from-dist-1.0.1.tgz\",\n      \"integrity\": \"sha512-UEZIS3/by4OC8vL3P2dTXRETpebLI2NiI5vIrjaD/5UtrkFX/tNbwjTSRAGC/+7CAo2pIcBaRgWmcBBHcsaCIw==\",\n      \"dev\": true\n    },\n    \"node_modules/parse-json\": {\n      \"version\": \"5.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/parse-json/-/parse-json-5.2.0.tgz\",\n      \"integrity\": \"sha512-ayCKvm/phCGxOkYRSCM82iDwct8/EonSEgCSxWxD7ve6jHggsFl4fZVQBPRNgQoKiuV/odhFrGzQXZwbifC8Rg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@babel/code-frame\": \"^7.0.0\",\n        \"error-ex\": \"^1.3.1\",\n        \"json-parse-even-better-errors\": \"^2.3.0\",\n        \"lines-and-columns\": \"^1.1.6\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    },\n    \"node_modules/path-exists\": {\n      \"version\": \"4.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/path-exists/-/path-exists-4.0.0.tgz\",\n      \"integrity\": \"sha512-ak9Qy5Q7jYb2Wwcey5Fpvg2KoAc/ZIhLSLOSBmRmygPsGwkVVt0fZa0qrtMz+m6tJTAHfZQ8FnmB4MG4LWy7/w==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/path-is-absolute\": {\n      \"version\": \"1.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/path-is-absolute/-/path-is-absolute-1.0.1.tgz\",\n      \"integrity\": \"sha512-AVbw3UJ2e9bq64vSaS9Am0fje1Pa8pbGqTTsmXfaIiMpnr5DlDhfJOuLj9Sf95ZPVDAUerDfEk88MPmPe7UCQg==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/path-key\": {\n      \"version\": \"3.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/path-key/-/path-key-3.1.1.tgz\",\n      \"integrity\": \"sha512-ojmeN0qd+y0jszEtoY48r0Peq5dwMEkIlCOu6Q5f41lfkswXuKtYrhgoTpLnyIcHm24Uhqx+5Tqm2InSwLhE6Q==\",\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/path-parse\": {\n      \"version\": \"1.0.7\",\n      \"resolved\": \"https://registry.npmjs.org/path-parse/-/path-parse-1.0.7.tgz\",\n      \"integrity\": \"sha512-LDJzPVEEEPR+y48z93A0Ed0yXb8pAByGWo/k5YYdYgpY2/2EsOsksJrq7lOHxryrVOn1ejG6oAp8ahvOIQD8sw==\",\n      \"dev\": true\n    },\n    \"node_modules/path-scurry\": {\n      \"version\": \"1.11.1\",\n      \"resolved\": \"https://registry.npmjs.org/path-scurry/-/path-scurry-1.11.1.tgz\",\n      \"integrity\": \"sha512-Xa4Nw17FS9ApQFJ9umLiJS4orGjm7ZzwUrwamcGQuHSzDyth9boKDaycYdDcZDuqYATXw4HFXgaqWTctW/v1HA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"lru-cache\": \"^10.2.0\",\n        \"minipass\": \"^5.0.0 || ^6.0.2 || ^7.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=16 || 14 >=14.18\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/isaacs\"\n      }\n    },\n    \"node_modules/path-scurry/node_modules/lru-cache\": {\n      \"version\": \"10.4.3\",\n      \"resolved\": \"https://registry.npmjs.org/lru-cache/-/lru-cache-10.4.3.tgz\",\n      \"integrity\": \"sha512-JNAzZcXrCt42VGLuYz0zfAzDfAvJWW6AfYlDBQyDV5DClI2m5sAmK+OIO7s59XfsRsWHp02jAJrRadPRGTt6SQ==\",\n      \"dev\": true\n    },\n    \"node_modules/performance-now\": {\n      \"version\": \"2.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/performance-now/-/performance-now-2.1.0.tgz\",\n      \"integrity\": \"sha512-7EAHlyLHI56VEIdK57uwHdHKIaAGbnXPiw0yWbarQZOKaKpvUIgW0jWRVLiatnM+XXlSwsanIBH/hzGMJulMow==\",\n      \"optional\": true\n    },\n    \"node_modules/picocolors\": {\n      \"version\": \"1.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/picocolors/-/picocolors-1.1.1.tgz\",\n      \"integrity\": \"sha512-xceH2snhtb5M9liqDsmEw56le376mTZkEX/jEb/RxNFyegNul7eNslCXP9FDj/Lcu0X8KEyMceP2ntpaHrDEVA==\",\n      \"dev\": true\n    },\n    \"node_modules/picomatch\": {\n      \"version\": \"2.3.1\",\n      \"resolved\": \"https://registry.npmjs.org/picomatch/-/picomatch-2.3.1.tgz\",\n      \"integrity\": \"sha512-JU3teHTNjmE2VCGFzuY8EXzCDVwEqB2a8fsIvwaStHhAWJEeVd1o1QD80CU6+ZdEXXSLbSsuLwJjkCBWqRQUVA==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=8.6\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/jonschlinkert\"\n      }\n    },\n    \"node_modules/pify\": {\n      \"version\": \"2.3.0\",\n      \"resolved\": \"https://registry.npmjs.org/pify/-/pify-2.3.0.tgz\",\n      \"integrity\": \"sha512-udgsAY+fTnvv7kI7aaxbqwWNb0AHiB0qBO89PZKPkoTmGOgdbrHDKD+0B2X4uTfJ/FT1R09r9gTsjUjNJotuog==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/pirates\": {\n      \"version\": \"4.0.7\",\n      \"resolved\": \"https://registry.npmjs.org/pirates/-/pirates-4.0.7.tgz\",\n      \"integrity\": \"sha512-TfySrs/5nm8fQJDcBDuUng3VOUKsd7S+zqvbOTiGXHfxX4wK31ard+hoNuvkicM/2YFzlpDgABOevKSsB4G/FA==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">= 6\"\n      }\n    },\n    \"node_modules/pkg-dir\": {\n      \"version\": \"4.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/pkg-dir/-/pkg-dir-4.2.0.tgz\",\n      \"integrity\": \"sha512-HRDzbaKjC+AOWVXxAU/x54COGeIv9eb+6CkDSQoNTt4XyWoIJvuPsXizxu/Fr23EiekbtZwmh1IcIG/l/a10GQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"find-up\": \"^4.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/possible-typed-array-names\": {\n      \"version\": \"1.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/possible-typed-array-names/-/possible-typed-array-names-1.1.0.tgz\",\n      \"integrity\": \"sha512-/+5VFTchJDoVj3bhoqi6UeymcD00DAwb1nJwamzPvHEszJ4FpF6SNNbUbOS8yI56qHzdV8eK0qEfOSiodkTdxg==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      }\n    },\n    \"node_modules/postcss\": {\n      \"version\": \"8.5.6\",\n      \"resolved\": \"https://registry.npmjs.org/postcss/-/postcss-8.5.6.tgz\",\n      \"integrity\": \"sha512-3Ybi1tAuwAP9s0r1UQ2J4n5Y0G05bJkpUIO0/bI9MhwmD70S5aTWbXGBwxHrelT+XM1k6dM0pk+SwNkpTRN7Pg==\",\n      \"dev\": true,\n      \"funding\": [\n        {\n          \"type\": \"opencollective\",\n          \"url\": \"https://opencollective.com/postcss/\"\n        },\n        {\n          \"type\": \"tidelift\",\n          \"url\": \"https://tidelift.com/funding/github/npm/postcss\"\n        },\n        {\n          \"type\": \"github\",\n          \"url\": \"https://github.com/sponsors/ai\"\n        }\n      ],\n      \"dependencies\": {\n        \"nanoid\": \"^3.3.11\",\n        \"picocolors\": \"^1.1.1\",\n        \"source-map-js\": \"^1.2.1\"\n      },\n      \"engines\": {\n        \"node\": \"^10 || ^12 || >=14\"\n      }\n    },\n    \"node_modules/postcss-import\": {\n      \"version\": \"15.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/postcss-import/-/postcss-import-15.1.0.tgz\",\n      \"integrity\": \"sha512-hpr+J05B2FVYUAXHeK1YyI267J/dDDhMU6B6civm8hSY1jYJnBXxzKDKDswzJmtLHryrjhnDjqqp/49t8FALew==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"postcss-value-parser\": \"^4.0.0\",\n        \"read-cache\": \"^1.0.0\",\n        \"resolve\": \"^1.1.7\"\n      },\n      \"engines\": {\n        \"node\": \">=14.0.0\"\n      },\n      \"peerDependencies\": {\n        \"postcss\": \"^8.0.0\"\n      }\n    },\n    \"node_modules/postcss-js\": {\n      \"version\": \"4.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/postcss-js/-/postcss-js-4.0.1.tgz\",\n      \"integrity\": \"sha512-dDLF8pEO191hJMtlHFPRa8xsizHaM82MLfNkUHdUtVEV3tgTp5oj+8qbEqYM57SLfc74KSbw//4SeJma2LRVIw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"camelcase-css\": \"^2.0.1\"\n      },\n      \"engines\": {\n        \"node\": \"^12 || ^14 || >= 16\"\n      },\n      \"funding\": {\n        \"type\": \"opencollective\",\n        \"url\": \"https://opencollective.com/postcss/\"\n      },\n      \"peerDependencies\": {\n        \"postcss\": \"^8.4.21\"\n      }\n    },\n    \"node_modules/postcss-load-config\": {\n      \"version\": \"4.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/postcss-load-config/-/postcss-load-config-4.0.2.tgz\",\n      \"integrity\": \"sha512-bSVhyJGL00wMVoPUzAVAnbEoWyqRxkjv64tUl427SKnPrENtq6hJwUojroMz2VB+Q1edmi4IfrAPpami5VVgMQ==\",\n      \"dev\": true,\n      \"funding\": [\n        {\n          \"type\": \"opencollective\",\n          \"url\": \"https://opencollective.com/postcss/\"\n        },\n        {\n          \"type\": \"github\",\n          \"url\": \"https://github.com/sponsors/ai\"\n        }\n      ],\n      \"dependencies\": {\n        \"lilconfig\": \"^3.0.0\",\n        \"yaml\": \"^2.3.4\"\n      },\n      \"engines\": {\n        \"node\": \">= 14\"\n      },\n      \"peerDependencies\": {\n        \"postcss\": \">=8.0.9\",\n        \"ts-node\": \">=9.0.0\"\n      },\n      \"peerDependenciesMeta\": {\n        \"postcss\": {\n          \"optional\": true\n        },\n        \"ts-node\": {\n          \"optional\": true\n        }\n      }\n    },\n    \"node_modules/postcss-nested\": {\n      \"version\": \"6.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/postcss-nested/-/postcss-nested-6.2.0.tgz\",\n      \"integrity\": \"sha512-HQbt28KulC5AJzG+cZtj9kvKB93CFCdLvog1WFLf1D+xmMvPGlBstkpTEZfK5+AN9hfJocyBFCNiqyS48bpgzQ==\",\n      \"dev\": true,\n      \"funding\": [\n        {\n          \"type\": \"opencollective\",\n          \"url\": \"https://opencollective.com/postcss/\"\n        },\n        {\n          \"type\": \"github\",\n          \"url\": \"https://github.com/sponsors/ai\"\n        }\n      ],\n      \"dependencies\": {\n        \"postcss-selector-parser\": \"^6.1.1\"\n      },\n      \"engines\": {\n        \"node\": \">=12.0\"\n      },\n      \"peerDependencies\": {\n        \"postcss\": \"^8.2.14\"\n      }\n    },\n    \"node_modules/postcss-selector-parser\": {\n      \"version\": \"6.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/postcss-selector-parser/-/postcss-selector-parser-6.1.2.tgz\",\n      \"integrity\": \"sha512-Q8qQfPiZ+THO/3ZrOrO0cJJKfpYCagtMUkXbnEfmgUjwXg6z/WBeOyS9APBBPCTSiDV+s4SwQGu8yFsiMRIudg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"cssesc\": \"^3.0.0\",\n        \"util-deprecate\": \"^1.0.2\"\n      },\n      \"engines\": {\n        \"node\": \">=4\"\n      }\n    },\n    \"node_modules/postcss-value-parser\": {\n      \"version\": \"4.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/postcss-value-parser/-/postcss-value-parser-4.2.0.tgz\",\n      \"integrity\": \"sha512-1NNCs6uurfkVbeXG4S8JFT9t19m45ICnif8zWLd5oPSZ50QnwMfK+H3jv408d4jw/7Bttv5axS5IiHoLaVNHeQ==\",\n      \"dev\": true\n    },\n    \"node_modules/potpack\": {\n      \"version\": \"1.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/potpack/-/potpack-1.0.2.tgz\",\n      \"integrity\": \"sha512-choctRBIV9EMT9WGAZHn3V7t0Z2pMQyl0EZE6pFc/6ml3ssw7Dlf/oAOvFwjm1HVsqfQN8GfeFyJ+d8tRzqueQ==\"\n    },\n    \"node_modules/pretty-format\": {\n      \"version\": \"27.5.1\",\n      \"resolved\": \"https://registry.npmjs.org/pretty-format/-/pretty-format-27.5.1.tgz\",\n      \"integrity\": \"sha512-Qb1gy5OrP5+zDf2Bvnzdl3jsTf1qXVMazbvCoKhtKqVs4/YK4ozX4gKQJJVyNe+cajNPn0KoC0MC3FUmaHWEmQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"ansi-regex\": \"^5.0.1\",\n        \"ansi-styles\": \"^5.0.0\",\n        \"react-is\": \"^17.0.1\"\n      },\n      \"engines\": {\n        \"node\": \"^10.13.0 || ^12.13.0 || ^14.15.0 || >=15.0.0\"\n      }\n    },\n    \"node_modules/pretty-format/node_modules/ansi-styles\": {\n      \"version\": \"5.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/ansi-styles/-/ansi-styles-5.2.0.tgz\",\n      \"integrity\": \"sha512-Cxwpt2SfTzTtXcfOlzGEee8O+c+MmUgGrNiBcXnuWxuFJHe6a5Hz7qwhwe5OgaSYI0IJvkLqWX1ASG+cJOkEiA==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=10\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/chalk/ansi-styles?sponsor=1\"\n      }\n    },\n    \"node_modules/promise-worker-transferable\": {\n      \"version\": \"1.0.4\",\n      \"resolved\": \"https://registry.npmjs.org/promise-worker-transferable/-/promise-worker-transferable-1.0.4.tgz\",\n      \"integrity\": \"sha512-bN+0ehEnrXfxV2ZQvU2PetO0n4gqBD4ulq3MI1WOPLgr7/Mg9yRQkX5+0v1vagr74ZTsl7XtzlaYDo2EuCeYJw==\",\n      \"dependencies\": {\n        \"is-promise\": \"^2.1.0\",\n        \"lie\": \"^3.0.2\"\n      }\n    },\n    \"node_modules/prompts\": {\n      \"version\": \"2.4.2\",\n      \"resolved\": \"https://registry.npmjs.org/prompts/-/prompts-2.4.2.tgz\",\n      \"integrity\": \"sha512-NxNv/kLguCA7p3jE8oL2aEBsrJWgAakBpgmgK6lpPWV+WuOmY6r2/zbAVnP+T8bQlA0nzHXSJSJW0Hq7ylaD2Q==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"kleur\": \"^3.0.3\",\n        \"sisteransi\": \"^1.0.5\"\n      },\n      \"engines\": {\n        \"node\": \">= 6\"\n      }\n    },\n    \"node_modules/prop-types\": {\n      \"version\": \"15.8.1\",\n      \"resolved\": \"https://registry.npmjs.org/prop-types/-/prop-types-15.8.1.tgz\",\n      \"integrity\": \"sha512-oj87CgZICdulUohogVAR7AjlC0327U4el4L6eAvOqCeudMDVU0NThNaV+b9Df4dXgSP1gXMTnPdhfe/2qDH5cg==\",\n      \"dependencies\": {\n        \"loose-envify\": \"^1.4.0\",\n        \"object-assign\": \"^4.1.1\",\n        \"react-is\": \"^16.13.1\"\n      }\n    },\n    \"node_modules/prop-types/node_modules/react-is\": {\n      \"version\": \"16.13.1\",\n      \"resolved\": \"https://registry.npmjs.org/react-is/-/react-is-16.13.1.tgz\",\n      \"integrity\": \"sha512-24e6ynE2H+OKt4kqsOvNd8kBpV65zoxbA4BVsEOB3ARVWQki/DHzaUoC5KuON/BiccDaCCTZBuOcfZs70kR8bQ==\"\n    },\n    \"node_modules/pure-rand\": {\n      \"version\": \"6.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/pure-rand/-/pure-rand-6.1.0.tgz\",\n      \"integrity\": \"sha512-bVWawvoZoBYpp6yIoQtQXHZjmz35RSVHnUOTefl8Vcjr8snTPY1wnpSPMWekcFwbxI6gtmT7rSYPFvz71ldiOA==\",\n      \"dev\": true,\n      \"funding\": [\n        {\n          \"type\": \"individual\",\n          \"url\": \"https://github.com/sponsors/dubzzz\"\n        },\n        {\n          \"type\": \"opencollective\",\n          \"url\": \"https://opencollective.com/fast-check\"\n        }\n      ]\n    },\n    \"node_modules/queue-microtask\": {\n      \"version\": \"1.2.3\",\n      \"resolved\": \"https://registry.npmjs.org/queue-microtask/-/queue-microtask-1.2.3.tgz\",\n      \"integrity\": \"sha512-NuaNSa6flKT5JaSYQzJok04JzTL1CA6aGhv5rfLW3PgqA+M2ChpZQnAC8h8i4ZFkBS8X5RqkDBHA7r4hej3K9A==\",\n      \"dev\": true,\n      \"funding\": [\n        {\n          \"type\": \"github\",\n          \"url\": \"https://github.com/sponsors/feross\"\n        },\n        {\n          \"type\": \"patreon\",\n          \"url\": \"https://www.patreon.com/feross\"\n        },\n        {\n          \"type\": \"consulting\",\n          \"url\": \"https://feross.org/support\"\n        }\n      ]\n    },\n    \"node_modules/raf\": {\n      \"version\": \"3.4.1\",\n      \"resolved\": \"https://registry.npmjs.org/raf/-/raf-3.4.1.tgz\",\n      \"integrity\": \"sha512-Sq4CW4QhwOHE8ucn6J34MqtZCeWFP2aQSmrlroYgqAV1PjStIhJXxYuTgUIfkEk7zTLjmIjLmU5q+fbD1NnOJA==\",\n      \"optional\": true,\n      \"dependencies\": {\n        \"performance-now\": \"^2.1.0\"\n      }\n    },\n    \"node_modules/react\": {\n      \"version\": \"18.3.1\",\n      \"resolved\": \"https://registry.npmjs.org/react/-/react-18.3.1.tgz\",\n      \"integrity\": \"sha512-wS+hAgJShR0KhEvPJArfuPVN1+Hz1t0Y6n5jLrGQbkb4urgPE/0Rve+1kMB1v/oWgHgm4WIcV+i7F2pTVj+2iQ==\",\n      \"dependencies\": {\n        \"loose-envify\": \"^1.1.0\"\n      },\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/react-composer\": {\n      \"version\": \"5.0.3\",\n      \"resolved\": \"https://registry.npmjs.org/react-composer/-/react-composer-5.0.3.tgz\",\n      \"integrity\": \"sha512-1uWd07EME6XZvMfapwZmc7NgCZqDemcvicRi3wMJzXsQLvZ3L7fTHVyPy1bZdnWXM4iPjYuNE+uJ41MLKeTtnA==\",\n      \"dependencies\": {\n        \"prop-types\": \"^15.6.0\"\n      },\n      \"peerDependencies\": {\n        \"react\": \"^15.0.0 || ^16.0.0 || ^17.0.0 || ^18.0.0\"\n      }\n    },\n    \"node_modules/react-dom\": {\n      \"version\": \"18.3.1\",\n      \"resolved\": \"https://registry.npmjs.org/react-dom/-/react-dom-18.3.1.tgz\",\n      \"integrity\": \"sha512-5m4nQKp+rZRb09LNH59GM4BxTh9251/ylbKIbpe7TpGxfJ+9kv6BLkLBXIjjspbgbnIBNqlI23tRnTWT0snUIw==\",\n      \"dependencies\": {\n        \"loose-envify\": \"^1.1.0\",\n        \"scheduler\": \"^0.23.2\"\n      },\n      \"peerDependencies\": {\n        \"react\": \"^18.3.1\"\n      }\n    },\n    \"node_modules/react-dom/node_modules/scheduler\": {\n      \"version\": \"0.23.2\",\n      \"resolved\": \"https://registry.npmjs.org/scheduler/-/scheduler-0.23.2.tgz\",\n      \"integrity\": \"sha512-UOShsPwz7NrMUqhR6t0hWjFduvOzbtv7toDH1/hIrfRNIDBnnBWd0CwJTGvTpngVlmwGCdP9/Zl/tVrDqcuYzQ==\",\n      \"dependencies\": {\n        \"loose-envify\": \"^1.1.0\"\n      }\n    },\n    \"node_modules/react-is\": {\n      \"version\": \"17.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/react-is/-/react-is-17.0.2.tgz\",\n      \"integrity\": \"sha512-w2GsyukL62IJnlaff/nRegPQR94C/XXamvMWmSHRJ4y7Ts/4ocGRmTHvOs8PSE6pB3dWOrD/nueuU5sduBsQ4w==\",\n      \"dev\": true\n    },\n    \"node_modules/react-reconciler\": {\n      \"version\": \"0.27.0\",\n      \"resolved\": \"https://registry.npmjs.org/react-reconciler/-/react-reconciler-0.27.0.tgz\",\n      \"integrity\": \"sha512-HmMDKciQjYmBRGuuhIaKA1ba/7a+UsM5FzOZsMO2JYHt9Jh8reCb7j1eDC95NOyUlKM9KRyvdx0flBuDvYSBoA==\",\n      \"dependencies\": {\n        \"loose-envify\": \"^1.1.0\",\n        \"scheduler\": \"^0.21.0\"\n      },\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      },\n      \"peerDependencies\": {\n        \"react\": \"^18.0.0\"\n      }\n    },\n    \"node_modules/react-use-measure\": {\n      \"version\": \"2.1.7\",\n      \"resolved\": \"https://registry.npmjs.org/react-use-measure/-/react-use-measure-2.1.7.tgz\",\n      \"integrity\": \"sha512-KrvcAo13I/60HpwGO5jpW7E9DfusKyLPLvuHlUyP5zqnmAPhNc6qTRjUQrdTADl0lpPpDVU2/Gg51UlOGHXbdg==\",\n      \"peerDependencies\": {\n        \"react\": \">=16.13\",\n        \"react-dom\": \">=16.13\"\n      },\n      \"peerDependenciesMeta\": {\n        \"react-dom\": {\n          \"optional\": true\n        }\n      }\n    },\n    \"node_modules/read-cache\": {\n      \"version\": \"1.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/read-cache/-/read-cache-1.0.0.tgz\",\n      \"integrity\": \"sha512-Owdv/Ft7IjOgm/i0xvNDZ1LrRANRfew4b2prF3OWMQLxLfu3bS8FVhCsrSCMK4lR56Y9ya+AThoTpDCTxCmpRA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"pify\": \"^2.3.0\"\n      }\n    },\n    \"node_modules/readdirp\": {\n      \"version\": \"3.6.0\",\n      \"resolved\": \"https://registry.npmjs.org/readdirp/-/readdirp-3.6.0.tgz\",\n      \"integrity\": \"sha512-hOS089on8RduqdbhvQ5Z37A0ESjsqz6qnRcffsMU3495FuTdqSm+7bhJ29JvIOsBDEEnan5DPu9t3To9VRlMzA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"picomatch\": \"^2.2.1\"\n      },\n      \"engines\": {\n        \"node\": \">=8.10.0\"\n      }\n    },\n    \"node_modules/redent\": {\n      \"version\": \"3.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/redent/-/redent-3.0.0.tgz\",\n      \"integrity\": \"sha512-6tDA8g98We0zd0GvVeMT9arEOnTw9qM03L9cJXaCjrip1OO764RDBLBfrB4cwzNGDj5OA5ioymC9GkizgWJDUg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"indent-string\": \"^4.0.0\",\n        \"strip-indent\": \"^3.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/regenerator-runtime\": {\n      \"version\": \"0.13.11\",\n      \"resolved\": \"https://registry.npmjs.org/regenerator-runtime/-/regenerator-runtime-0.13.11.tgz\",\n      \"integrity\": \"sha512-kY1AZVr2Ra+t+piVaJ4gxaFaReZVH40AKNo7UCX6W+dEwBo/2oZJzqfuN1qLq1oL45o56cPaTXELwrTh8Fpggg==\",\n      \"optional\": true\n    },\n    \"node_modules/regexp.prototype.flags\": {\n      \"version\": \"1.5.4\",\n      \"resolved\": \"https://registry.npmjs.org/regexp.prototype.flags/-/regexp.prototype.flags-1.5.4.tgz\",\n      \"integrity\": \"sha512-dYqgNSZbDwkaJ2ceRd9ojCGjBq+mOm9LmtXnAnEGyHhN/5R7iDW2TRw3h+o/jCFxus3P2LfWIIiwowAjANm7IA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"call-bind\": \"^1.0.8\",\n        \"define-properties\": \"^1.2.1\",\n        \"es-errors\": \"^1.3.0\",\n        \"get-proto\": \"^1.0.1\",\n        \"gopd\": \"^1.2.0\",\n        \"set-function-name\": \"^2.0.2\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/require-directory\": {\n      \"version\": \"2.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/require-directory/-/require-directory-2.1.1.tgz\",\n      \"integrity\": \"sha512-fGxEI7+wsG9xrvdjsrlmL22OMTTiHRwAMroiEeMgq8gzoLC/PQr7RsRDSTLUg/bZAZtF+TVIkHc6/4RIKrui+Q==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/require-from-string\": {\n      \"version\": \"2.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/require-from-string/-/require-from-string-2.0.2.tgz\",\n      \"integrity\": \"sha512-Xf0nWe6RseziFMu+Ap9biiUbmplq6S9/p+7w7YXP/JBHhrUDDUhwa+vANyubuqfZWTveU//DYVGsDG7RKL/vEw==\",\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/resolve\": {\n      \"version\": \"1.22.10\",\n      \"resolved\": \"https://registry.npmjs.org/resolve/-/resolve-1.22.10.tgz\",\n      \"integrity\": \"sha512-NPRy+/ncIMeDlTAsuqwKIiferiawhefFJtkNSW0qZJEqMEb+qBt/77B/jGeeek+F0uOeN05CDa6HXbbIgtVX4w==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"is-core-module\": \"^2.16.0\",\n        \"path-parse\": \"^1.0.7\",\n        \"supports-preserve-symlinks-flag\": \"^1.0.0\"\n      },\n      \"bin\": {\n        \"resolve\": \"bin/resolve\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/resolve-cwd\": {\n      \"version\": \"3.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/resolve-cwd/-/resolve-cwd-3.0.0.tgz\",\n      \"integrity\": \"sha512-OrZaX2Mb+rJCpH/6CpSqt9xFVpN++x01XnN2ie9g6P5/3xelLAkXWVADpdz1IHD/KFfEXyE6V0U01OQ3UO2rEg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"resolve-from\": \"^5.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/resolve-from\": {\n      \"version\": \"5.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/resolve-from/-/resolve-from-5.0.0.tgz\",\n      \"integrity\": \"sha512-qYg9KP24dD5qka9J47d0aVky0N+b4fTU89LN9iDnjB5waksiC49rvMB0PrUJQGoTmH50XPiqOvAjDfaijGxYZw==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/resolve.exports\": {\n      \"version\": \"2.0.3\",\n      \"resolved\": \"https://registry.npmjs.org/resolve.exports/-/resolve.exports-2.0.3.tgz\",\n      \"integrity\": \"sha512-OcXjMsGdhL4XnbShKpAcSqPMzQoYkYyhbEaeSko47MjRP9NfEQMhZkXL1DoFlt9LWQn4YttrdnV6X2OiyzBi+A==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=10\"\n      }\n    },\n    \"node_modules/reusify\": {\n      \"version\": \"1.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/reusify/-/reusify-1.1.0.tgz\",\n      \"integrity\": \"sha512-g6QUff04oZpHs0eG5p83rFLhHeV00ug/Yf9nZM6fLeUrPguBTkTQOdpAWWspMh55TZfVQDPaN3NQJfbVRAxdIw==\",\n      \"dev\": true,\n      \"engines\": {\n        \"iojs\": \">=1.0.0\",\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/rgbcolor\": {\n      \"version\": \"1.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/rgbcolor/-/rgbcolor-1.0.1.tgz\",\n      \"integrity\": \"sha512-9aZLIrhRaD97sgVhtJOW6ckOEh6/GnvQtdVNfdZ6s67+3/XwLS9lBcQYzEEhYVeUowN7pRzMLsyGhK2i/xvWbw==\",\n      \"optional\": true,\n      \"engines\": {\n        \"node\": \">= 0.8.15\"\n      }\n    },\n    \"node_modules/run-parallel\": {\n      \"version\": \"1.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/run-parallel/-/run-parallel-1.2.0.tgz\",\n      \"integrity\": \"sha512-5l4VyZR86LZ/lDxZTR6jqL8AFE2S0IFLMP26AbjsLVADxHdhB/c0GUsH+y39UfCi3dzz8OlQuPmnaJOMoDHQBA==\",\n      \"dev\": true,\n      \"funding\": [\n        {\n          \"type\": \"github\",\n          \"url\": \"https://github.com/sponsors/feross\"\n        },\n        {\n          \"type\": \"patreon\",\n          \"url\": \"https://www.patreon.com/feross\"\n        },\n        {\n          \"type\": \"consulting\",\n          \"url\": \"https://feross.org/support\"\n        }\n      ],\n      \"dependencies\": {\n        \"queue-microtask\": \"^1.2.2\"\n      }\n    },\n    \"node_modules/safe-regex-test\": {\n      \"version\": \"1.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/safe-regex-test/-/safe-regex-test-1.1.0.tgz\",\n      \"integrity\": \"sha512-x/+Cz4YrimQxQccJf5mKEbIa1NzeCRNI5Ecl/ekmlYaampdNLPalVyIcCZNNH3MvmqBugV5TMYZXv0ljslUlaw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"call-bound\": \"^1.0.2\",\n        \"es-errors\": \"^1.3.0\",\n        \"is-regex\": \"^1.2.1\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/scheduler\": {\n      \"version\": \"0.21.0\",\n      \"resolved\": \"https://registry.npmjs.org/scheduler/-/scheduler-0.21.0.tgz\",\n      \"integrity\": \"sha512-1r87x5fz9MXqswA2ERLo0EbOAU74DpIUO090gIasYTqlVoJeMcl+Z1Rg7WHz+qtPujhS/hGIt9kxZOYBV3faRQ==\",\n      \"dependencies\": {\n        \"loose-envify\": \"^1.1.0\"\n      }\n    },\n    \"node_modules/semver\": {\n      \"version\": \"6.3.1\",\n      \"resolved\": \"https://registry.npmjs.org/semver/-/semver-6.3.1.tgz\",\n      \"integrity\": \"sha512-BR7VvDCVHO+q2xBEWskxS6DJE1qRnb7DxzUrogb71CWoSficBxYsiAGd+Kl0mmq/MprG9yArRkyrQxTO6XjMzA==\",\n      \"dev\": true,\n      \"bin\": {\n        \"semver\": \"bin/semver.js\"\n      }\n    },\n    \"node_modules/set-function-length\": {\n      \"version\": \"1.2.2\",\n      \"resolved\": \"https://registry.npmjs.org/set-function-length/-/set-function-length-1.2.2.tgz\",\n      \"integrity\": \"sha512-pgRc4hJ4/sNjWCSS9AmnS40x3bNMDTknHgL5UaMBTMyJnU90EgWh1Rz+MC9eFu4BuN/UwZjKQuY/1v3rM7HMfg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"define-data-property\": \"^1.1.4\",\n        \"es-errors\": \"^1.3.0\",\n        \"function-bind\": \"^1.1.2\",\n        \"get-intrinsic\": \"^1.2.4\",\n        \"gopd\": \"^1.0.1\",\n        \"has-property-descriptors\": \"^1.0.2\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      }\n    },\n    \"node_modules/set-function-name\": {\n      \"version\": \"2.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/set-function-name/-/set-function-name-2.0.2.tgz\",\n      \"integrity\": \"sha512-7PGFlmtwsEADb0WYyvCMa1t+yke6daIG4Wirafur5kcf+MhUnPms1UeR0CKQdTZD81yESwMHbtn+TR+dMviakQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"define-data-property\": \"^1.1.4\",\n        \"es-errors\": \"^1.3.0\",\n        \"functions-have-names\": \"^1.2.3\",\n        \"has-property-descriptors\": \"^1.0.2\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      }\n    },\n    \"node_modules/shebang-command\": {\n      \"version\": \"2.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/shebang-command/-/shebang-command-2.0.0.tgz\",\n      \"integrity\": \"sha512-kHxr2zZpYtdmrN1qDjrrX/Z1rR1kG8Dx+gkpK1G4eXmvXswmcE1hTWBWYUzlraYw1/yZp6YuDY77YtvbN0dmDA==\",\n      \"dependencies\": {\n        \"shebang-regex\": \"^3.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/shebang-regex\": {\n      \"version\": \"3.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/shebang-regex/-/shebang-regex-3.0.0.tgz\",\n      \"integrity\": \"sha512-7++dFhtcx3353uBaq8DDR4NuxBetBzC7ZQOhmTQInHEd6bSrXdiEyzCvG07Z44UYdLShWUyXt5M/yhz8ekcb1A==\",\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/side-channel\": {\n      \"version\": \"1.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/side-channel/-/side-channel-1.1.0.tgz\",\n      \"integrity\": \"sha512-ZX99e6tRweoUXqR+VBrslhda51Nh5MTQwou5tnUDgbtyM0dBgmhEDtWGP/xbKn6hqfPRHujUNwz5fy/wbbhnpw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"es-errors\": \"^1.3.0\",\n        \"object-inspect\": \"^1.13.3\",\n        \"side-channel-list\": \"^1.0.0\",\n        \"side-channel-map\": \"^1.0.1\",\n        \"side-channel-weakmap\": \"^1.0.2\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/side-channel-list\": {\n      \"version\": \"1.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/side-channel-list/-/side-channel-list-1.0.0.tgz\",\n      \"integrity\": \"sha512-FCLHtRD/gnpCiCHEiJLOwdmFP+wzCmDEkc9y7NsYxeF4u7Btsn1ZuwgwJGxImImHicJArLP4R0yX4c2KCrMrTA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"es-errors\": \"^1.3.0\",\n        \"object-inspect\": \"^1.13.3\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/side-channel-map\": {\n      \"version\": \"1.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/side-channel-map/-/side-channel-map-1.0.1.tgz\",\n      \"integrity\": \"sha512-VCjCNfgMsby3tTdo02nbjtM/ewra6jPHmpThenkTYh8pG9ucZ/1P8So4u4FGBek/BjpOVsDCMoLA/iuBKIFXRA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"call-bound\": \"^1.0.2\",\n        \"es-errors\": \"^1.3.0\",\n        \"get-intrinsic\": \"^1.2.5\",\n        \"object-inspect\": \"^1.13.3\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/side-channel-weakmap\": {\n      \"version\": \"1.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/side-channel-weakmap/-/side-channel-weakmap-1.0.2.tgz\",\n      \"integrity\": \"sha512-WPS/HvHQTYnHisLo9McqBHOJk2FkHO/tlpvldyrnem4aeQp4hai3gythswg6p01oSoTl58rcpiFAjF2br2Ak2A==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"call-bound\": \"^1.0.2\",\n        \"es-errors\": \"^1.3.0\",\n        \"get-intrinsic\": \"^1.2.5\",\n        \"object-inspect\": \"^1.13.3\",\n        \"side-channel-map\": \"^1.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/signal-exit\": {\n      \"version\": \"3.0.7\",\n      \"resolved\": \"https://registry.npmjs.org/signal-exit/-/signal-exit-3.0.7.tgz\",\n      \"integrity\": \"sha512-wnD2ZE+l+SPC/uoS0vXeE9L1+0wuaMqKlfz9AMUo38JsyLSBWSFcHR1Rri62LZc12vLr1gb3jl7iwQhgwpAbGQ==\",\n      \"dev\": true\n    },\n    \"node_modules/sisteransi\": {\n      \"version\": \"1.0.5\",\n      \"resolved\": \"https://registry.npmjs.org/sisteransi/-/sisteransi-1.0.5.tgz\",\n      \"integrity\": \"sha512-bLGGlR1QxBcynn2d5YmDX4MGjlZvy2MRBDRNHLJ8VI6l6+9FUiyTFNJ0IveOSP0bcXgVDPRcfGqA0pjaqUpfVg==\",\n      \"dev\": true\n    },\n    \"node_modules/slash\": {\n      \"version\": \"3.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/slash/-/slash-3.0.0.tgz\",\n      \"integrity\": \"sha512-g9Q1haeby36OSStwb4ntCGGGaKsaVSjQ68fBxoQcutl5fS1vuY18H3wSt3jFyFtrkx+Kz0V1G85A4MyAdDMi2Q==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/source-map\": {\n      \"version\": \"0.6.1\",\n      \"resolved\": \"https://registry.npmjs.org/source-map/-/source-map-0.6.1.tgz\",\n      \"integrity\": \"sha512-UjgapumWlbMhkBgzT7Ykc5YXUT46F0iKu8SGXq0bcwP5dz/h0Plj6enJqjz1Zbq2l5WaqYnrVbwWOWMyF3F47g==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/source-map-js\": {\n      \"version\": \"1.2.1\",\n      \"resolved\": \"https://registry.npmjs.org/source-map-js/-/source-map-js-1.2.1.tgz\",\n      \"integrity\": \"sha512-UXWMKhLOwVKb728IUtQPXxfYU+usdybtUrK/8uGE8CQMvrhOpwvzDBwj0QhSL7MQc7vIsISBG8VQ8+IDQxpfQA==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/source-map-support\": {\n      \"version\": \"0.5.13\",\n      \"resolved\": \"https://registry.npmjs.org/source-map-support/-/source-map-support-0.5.13.tgz\",\n      \"integrity\": \"sha512-SHSKFHadjVA5oR4PPqhtAVdcBWwRYVd6g6cAXnIbRiIwc2EhPrTuKUBdSLvlEKyIP3GCf89fltvcZiP9MMFA1w==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"buffer-from\": \"^1.0.0\",\n        \"source-map\": \"^0.6.0\"\n      }\n    },\n    \"node_modules/sprintf-js\": {\n      \"version\": \"1.0.3\",\n      \"resolved\": \"https://registry.npmjs.org/sprintf-js/-/sprintf-js-1.0.3.tgz\",\n      \"integrity\": \"sha512-D9cPgkvLlV3t3IzL0D0YLvGA9Ahk4PcvVwUbN0dSGr1aP0Nrt4AEnTUbuGvquEC0mA64Gqt1fzirlRs5ibXx8g==\",\n      \"dev\": true\n    },\n    \"node_modules/stack-utils\": {\n      \"version\": \"2.0.6\",\n      \"resolved\": \"https://registry.npmjs.org/stack-utils/-/stack-utils-2.0.6.tgz\",\n      \"integrity\": \"sha512-XlkWvfIm6RmsWtNJx+uqtKLS8eqFbxUg0ZzLXqY0caEy9l7hruX8IpiDnjsLavoBgqCCR71TqWO8MaXYheJ3RQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"escape-string-regexp\": \"^2.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=10\"\n      }\n    },\n    \"node_modules/stackblur-canvas\": {\n      \"version\": \"2.7.0\",\n      \"resolved\": \"https://registry.npmjs.org/stackblur-canvas/-/stackblur-canvas-2.7.0.tgz\",\n      \"integrity\": \"sha512-yf7OENo23AGJhBriGx0QivY5JP6Y1HbrrDI6WLt6C5auYZXlQrheoY8hD4ibekFKz1HOfE48Ww8kMWMnJD/zcQ==\",\n      \"optional\": true,\n      \"engines\": {\n        \"node\": \">=0.1.14\"\n      }\n    },\n    \"node_modules/stats-gl\": {\n      \"version\": \"2.4.2\",\n      \"resolved\": \"https://registry.npmjs.org/stats-gl/-/stats-gl-2.4.2.tgz\",\n      \"integrity\": \"sha512-g5O9B0hm9CvnM36+v7SFl39T7hmAlv541tU81ME8YeSb3i1CIP5/QdDeSB3A0la0bKNHpxpwxOVRo2wFTYEosQ==\",\n      \"dependencies\": {\n        \"@types/three\": \"*\",\n        \"three\": \"^0.170.0\"\n      },\n      \"peerDependencies\": {\n        \"@types/three\": \"*\",\n        \"three\": \"*\"\n      }\n    },\n    \"node_modules/stats-gl/node_modules/three\": {\n      \"version\": \"0.170.0\",\n      \"resolved\": \"https://registry.npmjs.org/three/-/three-0.170.0.tgz\",\n      \"integrity\": \"sha512-FQK+LEpYc0fBD+J8g6oSEyyNzjp+Q7Ks1C568WWaoMRLW+TkNNWmenWeGgJjV105Gd+p/2ql1ZcjYvNiPZBhuQ==\"\n    },\n    \"node_modules/stats.js\": {\n      \"version\": \"0.17.0\",\n      \"resolved\": \"https://registry.npmjs.org/stats.js/-/stats.js-0.17.0.tgz\",\n      \"integrity\": \"sha512-hNKz8phvYLPEcRkeG1rsGmV5ChMjKDAWU7/OJJdDErPBNChQXxCo3WZurGpnWc6gZhAzEPFad1aVgyOANH1sMw==\"\n    },\n    \"node_modules/stop-iteration-iterator\": {\n      \"version\": \"1.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/stop-iteration-iterator/-/stop-iteration-iterator-1.1.0.tgz\",\n      \"integrity\": \"sha512-eLoXW/DHyl62zxY4SCaIgnRhuMr6ri4juEYARS8E6sCEqzKpOiE521Ucofdx+KnDZl5xmvGYaaKCk5FEOxJCoQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"es-errors\": \"^1.3.0\",\n        \"internal-slot\": \"^1.1.0\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      }\n    },\n    \"node_modules/string-length\": {\n      \"version\": \"4.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/string-length/-/string-length-4.0.2.tgz\",\n      \"integrity\": \"sha512-+l6rNN5fYHNhZZy41RXsYptCjA2Igmq4EG7kZAYFQI1E1VTXarr6ZPXBg6eq7Y6eK4FEhY6AJlyuFIb/v/S0VQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"char-regex\": \"^1.0.2\",\n        \"strip-ansi\": \"^6.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=10\"\n      }\n    },\n    \"node_modules/string-width\": {\n      \"version\": \"4.2.3\",\n      \"resolved\": \"https://registry.npmjs.org/string-width/-/string-width-4.2.3.tgz\",\n      \"integrity\": \"sha512-wKyQRQpjJ0sIp62ErSZdGsjMJWsap5oRNihHhu6G7JVO/9jIB6UyevL+tXuOqrng8j/cxKTWyWUwvSTriiZz/g==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"emoji-regex\": \"^8.0.0\",\n        \"is-fullwidth-code-point\": \"^3.0.0\",\n        \"strip-ansi\": \"^6.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/string-width-cjs\": {\n      \"name\": \"string-width\",\n      \"version\": \"4.2.3\",\n      \"resolved\": \"https://registry.npmjs.org/string-width/-/string-width-4.2.3.tgz\",\n      \"integrity\": \"sha512-wKyQRQpjJ0sIp62ErSZdGsjMJWsap5oRNihHhu6G7JVO/9jIB6UyevL+tXuOqrng8j/cxKTWyWUwvSTriiZz/g==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"emoji-regex\": \"^8.0.0\",\n        \"is-fullwidth-code-point\": \"^3.0.0\",\n        \"strip-ansi\": \"^6.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/strip-ansi\": {\n      \"version\": \"6.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/strip-ansi/-/strip-ansi-6.0.1.tgz\",\n      \"integrity\": \"sha512-Y38VPSHcqkFrCpFnQ9vuSXmquuv5oXOKpGeT6aGrr3o3Gc9AlVa6JBfUSOCnbxGGZF+/0ooI7KrPuUSztUdU5A==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"ansi-regex\": \"^5.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/strip-ansi-cjs\": {\n      \"name\": \"strip-ansi\",\n      \"version\": \"6.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/strip-ansi/-/strip-ansi-6.0.1.tgz\",\n      \"integrity\": \"sha512-Y38VPSHcqkFrCpFnQ9vuSXmquuv5oXOKpGeT6aGrr3o3Gc9AlVa6JBfUSOCnbxGGZF+/0ooI7KrPuUSztUdU5A==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"ansi-regex\": \"^5.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/strip-bom\": {\n      \"version\": \"4.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/strip-bom/-/strip-bom-4.0.0.tgz\",\n      \"integrity\": \"sha512-3xurFv5tEgii33Zi8Jtp55wEIILR9eh34FAW00PZf+JnSsTmV/ioewSgQl97JHvgjoRGwPShsWm+IdrxB35d0w==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/strip-final-newline\": {\n      \"version\": \"2.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/strip-final-newline/-/strip-final-newline-2.0.0.tgz\",\n      \"integrity\": \"sha512-BrpvfNAE3dcvq7ll3xVumzjKjZQ5tI1sEUIKr3Uoks0XUl45St3FlatVqef9prk4jRDzhW6WZg+3bk93y6pLjA==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=6\"\n      }\n    },\n    \"node_modules/strip-indent\": {\n      \"version\": \"3.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/strip-indent/-/strip-indent-3.0.0.tgz\",\n      \"integrity\": \"sha512-laJTa3Jb+VQpaC6DseHhF7dXVqHTfJPCRDaEbid/drOhgitgYku/letMUqOXFoWV0zIIUbjpdH2t+tYj4bQMRQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"min-indent\": \"^1.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/strip-json-comments\": {\n      \"version\": \"3.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/strip-json-comments/-/strip-json-comments-3.1.1.tgz\",\n      \"integrity\": \"sha512-6fPc+R4ihwqP6N/aIv2f1gMH8lOVtWQHoqC4yK6oSDVVocumAsfCqjkXnqiYMhmMwS/mEHLp7Vehlt3ql6lEig==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=8\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    },\n    \"node_modules/sucrase\": {\n      \"version\": \"3.35.0\",\n      \"resolved\": \"https://registry.npmjs.org/sucrase/-/sucrase-3.35.0.tgz\",\n      \"integrity\": \"sha512-8EbVDiu9iN/nESwxeSxDKe0dunta1GOlHufmSSXxMD2z2/tMZpDMpvXQGsc+ajGo8y2uYUmixaSRUc/QPoQ0GA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@jridgewell/gen-mapping\": \"^0.3.2\",\n        \"commander\": \"^4.0.0\",\n        \"glob\": \"^10.3.10\",\n        \"lines-and-columns\": \"^1.1.6\",\n        \"mz\": \"^2.7.0\",\n        \"pirates\": \"^4.0.1\",\n        \"ts-interface-checker\": \"^0.1.9\"\n      },\n      \"bin\": {\n        \"sucrase\": \"bin/sucrase\",\n        \"sucrase-node\": \"bin/sucrase-node\"\n      },\n      \"engines\": {\n        \"node\": \">=16 || 14 >=14.17\"\n      }\n    },\n    \"node_modules/sucrase/node_modules/brace-expansion\": {\n      \"version\": \"2.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/brace-expansion/-/brace-expansion-2.0.2.tgz\",\n      \"integrity\": \"sha512-Jt0vHyM+jmUBqojB7E1NIYadt0vI0Qxjxd2TErW94wDz+E2LAm5vKMXXwg6ZZBTHPuUlDgQHKXvjGBdfcF1ZDQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"balanced-match\": \"^1.0.0\"\n      }\n    },\n    \"node_modules/sucrase/node_modules/glob\": {\n      \"version\": \"10.4.5\",\n      \"resolved\": \"https://registry.npmjs.org/glob/-/glob-10.4.5.tgz\",\n      \"integrity\": \"sha512-7Bv8RF0k6xjo7d4A/PxYLbUCfb6c+Vpd2/mB2yRDlew7Jb5hEXiCD9ibfO7wpk8i4sevK6DFny9h7EYbM3/sHg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"foreground-child\": \"^3.1.0\",\n        \"jackspeak\": \"^3.1.2\",\n        \"minimatch\": \"^9.0.4\",\n        \"minipass\": \"^7.1.2\",\n        \"package-json-from-dist\": \"^1.0.0\",\n        \"path-scurry\": \"^1.11.1\"\n      },\n      \"bin\": {\n        \"glob\": \"dist/esm/bin.mjs\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/isaacs\"\n      }\n    },\n    \"node_modules/sucrase/node_modules/minimatch\": {\n      \"version\": \"9.0.5\",\n      \"resolved\": \"https://registry.npmjs.org/minimatch/-/minimatch-9.0.5.tgz\",\n      \"integrity\": \"sha512-G6T0ZX48xgozx7587koeX9Ys2NYy6Gmv//P89sEte9V9whIapMNF4idKxnW2QtCcLiTWlb/wfCabAtAFWhhBow==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"brace-expansion\": \"^2.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">=16 || 14 >=14.17\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/isaacs\"\n      }\n    },\n    \"node_modules/supports-color\": {\n      \"version\": \"7.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/supports-color/-/supports-color-7.2.0.tgz\",\n      \"integrity\": \"sha512-qpCAvRl9stuOHveKsn7HncJRvv501qIacKzQlO/+Lwxc9+0q2wLyv4Dfvt80/DPn2pqOBsJdDiogXGR9+OvwRw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"has-flag\": \"^4.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/supports-preserve-symlinks-flag\": {\n      \"version\": \"1.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/supports-preserve-symlinks-flag/-/supports-preserve-symlinks-flag-1.0.0.tgz\",\n      \"integrity\": \"sha512-ot0WnXS9fgdkgIcePe6RHNk1WA8+muPa6cSjeR3V8K27q9BB1rTE3R1p7Hv0z1ZyAc8s6Vvv8DIyWf681MAt0w==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/suspend-react\": {\n      \"version\": \"0.1.3\",\n      \"resolved\": \"https://registry.npmjs.org/suspend-react/-/suspend-react-0.1.3.tgz\",\n      \"integrity\": \"sha512-aqldKgX9aZqpoDp3e8/BZ8Dm7x1pJl+qI3ZKxDN0i/IQTWUwBx/ManmlVJ3wowqbno6c2bmiIfs+Um6LbsjJyQ==\",\n      \"peerDependencies\": {\n        \"react\": \">=17.0\"\n      }\n    },\n    \"node_modules/svg-pathdata\": {\n      \"version\": \"6.0.3\",\n      \"resolved\": \"https://registry.npmjs.org/svg-pathdata/-/svg-pathdata-6.0.3.tgz\",\n      \"integrity\": \"sha512-qsjeeq5YjBZ5eMdFuUa4ZosMLxgr5RZ+F+Y1OrDhuOCEInRMA3x74XdBtggJcj9kOeInz0WE+LgCPDkZFlBYJw==\",\n      \"optional\": true,\n      \"engines\": {\n        \"node\": \">=12.0.0\"\n      }\n    },\n    \"node_modules/tailwindcss\": {\n      \"version\": \"3.4.17\",\n      \"resolved\": \"https://registry.npmjs.org/tailwindcss/-/tailwindcss-3.4.17.tgz\",\n      \"integrity\": \"sha512-w33E2aCvSDP0tW9RZuNXadXlkHXqFzSkQew/aIa2i/Sj8fThxwovwlXHSPXTbAHwEIhBFXAedUhP2tueAKP8Og==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@alloc/quick-lru\": \"^5.2.0\",\n        \"arg\": \"^5.0.2\",\n        \"chokidar\": \"^3.6.0\",\n        \"didyoumean\": \"^1.2.2\",\n        \"dlv\": \"^1.1.3\",\n        \"fast-glob\": \"^3.3.2\",\n        \"glob-parent\": \"^6.0.2\",\n        \"is-glob\": \"^4.0.3\",\n        \"jiti\": \"^1.21.6\",\n        \"lilconfig\": \"^3.1.3\",\n        \"micromatch\": \"^4.0.8\",\n        \"normalize-path\": \"^3.0.0\",\n        \"object-hash\": \"^3.0.0\",\n        \"picocolors\": \"^1.1.1\",\n        \"postcss\": \"^8.4.47\",\n        \"postcss-import\": \"^15.1.0\",\n        \"postcss-js\": \"^4.0.1\",\n        \"postcss-load-config\": \"^4.0.2\",\n        \"postcss-nested\": \"^6.2.0\",\n        \"postcss-selector-parser\": \"^6.1.2\",\n        \"resolve\": \"^1.22.8\",\n        \"sucrase\": \"^3.35.0\"\n      },\n      \"bin\": {\n        \"tailwind\": \"lib/cli.js\",\n        \"tailwindcss\": \"lib/cli.js\"\n      },\n      \"engines\": {\n        \"node\": \">=14.0.0\"\n      }\n    },\n    \"node_modules/test-exclude\": {\n      \"version\": \"6.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/test-exclude/-/test-exclude-6.0.0.tgz\",\n      \"integrity\": \"sha512-cAGWPIyOHU6zlmg88jwm7VRyXnMN7iV68OGAbYDk/Mh/xC/pzVPlQtY6ngoIH/5/tciuhGfvESU8GrHrcxD56w==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@istanbuljs/schema\": \"^0.1.2\",\n        \"glob\": \"^7.1.4\",\n        \"minimatch\": \"^3.0.4\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/text-segmentation\": {\n      \"version\": \"1.0.3\",\n      \"resolved\": \"https://registry.npmjs.org/text-segmentation/-/text-segmentation-1.0.3.tgz\",\n      \"integrity\": \"sha512-iOiPUo/BGnZ6+54OsWxZidGCsdU8YbE4PSpdPinp7DeMtUJNJBoJ/ouUSTJjHkh1KntHaltHl/gDs2FC4i5+Nw==\",\n      \"optional\": true,\n      \"dependencies\": {\n        \"utrie\": \"^1.0.2\"\n      }\n    },\n    \"node_modules/thenify\": {\n      \"version\": \"3.3.1\",\n      \"resolved\": \"https://registry.npmjs.org/thenify/-/thenify-3.3.1.tgz\",\n      \"integrity\": \"sha512-RVZSIV5IG10Hk3enotrhvz0T9em6cyHBLkH/YAZuKqd8hRkKhSfCGIcP2KUY0EPxndzANBmNllzWPwak+bheSw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"any-promise\": \"^1.0.0\"\n      }\n    },\n    \"node_modules/thenify-all\": {\n      \"version\": \"1.6.0\",\n      \"resolved\": \"https://registry.npmjs.org/thenify-all/-/thenify-all-1.6.0.tgz\",\n      \"integrity\": \"sha512-RNxQH/qI8/t3thXJDwcstUO4zeqo64+Uy/+sNVRBx4Xn2OX+OZ9oP+iJnNFqplFra2ZUVeKCSa2oVWi3T4uVmA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"thenify\": \">= 3.1.0 < 4\"\n      },\n      \"engines\": {\n        \"node\": \">=0.8\"\n      }\n    },\n    \"node_modules/three\": {\n      \"version\": \"0.160.1\",\n      \"resolved\": \"https://registry.npmjs.org/three/-/three-0.160.1.tgz\",\n      \"integrity\": \"sha512-Bgl2wPJypDOZ1stAxwfWAcJ0WQf7QzlptsxkjYiURPz+n5k4RBDLsq+6f9Y75TYxn6aHLcWz+JNmwTOXWrQTBQ==\"\n    },\n    \"node_modules/three-mesh-bvh\": {\n      \"version\": \"0.7.8\",\n      \"resolved\": \"https://registry.npmjs.org/three-mesh-bvh/-/three-mesh-bvh-0.7.8.tgz\",\n      \"integrity\": \"sha512-BGEZTOIC14U0XIRw3tO4jY7IjP7n7v24nv9JXS1CyeVRWOCkcOMhRnmENUjuV39gktAw4Ofhr0OvIAiTspQrrw==\",\n      \"deprecated\": \"Deprecated due to three.js version incompatibility. Please use v0.8.0, instead.\",\n      \"peerDependencies\": {\n        \"three\": \">= 0.151.0\"\n      }\n    },\n    \"node_modules/three-stdlib\": {\n      \"version\": \"2.36.0\",\n      \"resolved\": \"https://registry.npmjs.org/three-stdlib/-/three-stdlib-2.36.0.tgz\",\n      \"integrity\": \"sha512-kv0Byb++AXztEGsULgMAs8U2jgUdz6HPpAB/wDJnLiLlaWQX2APHhiTJIN7rqW+Of0eRgcp7jn05U1BsCP3xBA==\",\n      \"dependencies\": {\n        \"@types/draco3d\": \"^1.4.0\",\n        \"@types/offscreencanvas\": \"^2019.6.4\",\n        \"@types/webxr\": \"^0.5.2\",\n        \"draco3d\": \"^1.4.1\",\n        \"fflate\": \"^0.6.9\",\n        \"potpack\": \"^1.0.1\"\n      },\n      \"peerDependencies\": {\n        \"three\": \">=0.128.0\"\n      }\n    },\n    \"node_modules/three-stdlib/node_modules/fflate\": {\n      \"version\": \"0.6.10\",\n      \"resolved\": \"https://registry.npmjs.org/fflate/-/fflate-0.6.10.tgz\",\n      \"integrity\": \"sha512-IQrh3lEPM93wVCEczc9SaAOvkmcoQn/G8Bo1e8ZPlY3X3bnAxWaBdvTdvM1hP62iZp0BXWDy4vTAy4fF0+Dlpg==\"\n    },\n    \"node_modules/tmpl\": {\n      \"version\": \"1.0.5\",\n      \"resolved\": \"https://registry.npmjs.org/tmpl/-/tmpl-1.0.5.tgz\",\n      \"integrity\": \"sha512-3f0uOEAQwIqGuWW2MVzYg8fV/QNnc/IpuJNG837rLuczAaLVHslWHZQj4IGiEl5Hs3kkbhwL9Ab7Hrsmuj+Smw==\",\n      \"dev\": true\n    },\n    \"node_modules/to-regex-range\": {\n      \"version\": \"5.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/to-regex-range/-/to-regex-range-5.0.1.tgz\",\n      \"integrity\": \"sha512-65P7iz6X5yEr1cwcgvQxbbIw7Uk3gOy5dIdtZ4rDveLqhrdJP+Li/Hx6tyK0NEb+2GCyneCMJiGqrADCSNk8sQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"is-number\": \"^7.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=8.0\"\n      }\n    },\n    \"node_modules/troika-three-text\": {\n      \"version\": \"0.52.4\",\n      \"resolved\": \"https://registry.npmjs.org/troika-three-text/-/troika-three-text-0.52.4.tgz\",\n      \"integrity\": \"sha512-V50EwcYGruV5rUZ9F4aNsrytGdKcXKALjEtQXIOBfhVoZU9VAqZNIoGQ3TMiooVqFAbR1w15T+f+8gkzoFzawg==\",\n      \"dependencies\": {\n        \"bidi-js\": \"^1.0.2\",\n        \"troika-three-utils\": \"^0.52.4\",\n        \"troika-worker-utils\": \"^0.52.0\",\n        \"webgl-sdf-generator\": \"1.1.1\"\n      },\n      \"peerDependencies\": {\n        \"three\": \">=0.125.0\"\n      }\n    },\n    \"node_modules/troika-three-utils\": {\n      \"version\": \"0.52.4\",\n      \"resolved\": \"https://registry.npmjs.org/troika-three-utils/-/troika-three-utils-0.52.4.tgz\",\n      \"integrity\": \"sha512-NORAStSVa/BDiG52Mfudk4j1FG4jC4ILutB3foPnfGbOeIs9+G5vZLa0pnmnaftZUGm4UwSoqEpWdqvC7zms3A==\",\n      \"peerDependencies\": {\n        \"three\": \">=0.125.0\"\n      }\n    },\n    \"node_modules/troika-worker-utils\": {\n      \"version\": \"0.52.0\",\n      \"resolved\": \"https://registry.npmjs.org/troika-worker-utils/-/troika-worker-utils-0.52.0.tgz\",\n      \"integrity\": \"sha512-W1CpvTHykaPH5brv5VHLfQo9D1OYuo0cSBEUQFFT/nBUzM8iD6Lq2/tgG/f1OelbAS1WtaTPQzE5uM49egnngw==\"\n    },\n    \"node_modules/ts-interface-checker\": {\n      \"version\": \"0.1.13\",\n      \"resolved\": \"https://registry.npmjs.org/ts-interface-checker/-/ts-interface-checker-0.1.13.tgz\",\n      \"integrity\": \"sha512-Y/arvbn+rrz3JCKl9C4kVNfTfSm2/mEp5FSz5EsZSANGPSlQrpRI5M4PKF+mJnE52jOO90PnPSc3Ur3bTQw0gA==\",\n      \"dev\": true\n    },\n    \"node_modules/tunnel-rat\": {\n      \"version\": \"0.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/tunnel-rat/-/tunnel-rat-0.1.2.tgz\",\n      \"integrity\": \"sha512-lR5VHmkPhzdhrM092lI2nACsLO4QubF0/yoOhzX7c+wIpbN1GjHNzCc91QlpxBi+cnx8vVJ+Ur6vL5cEoQPFpQ==\",\n      \"dependencies\": {\n        \"zustand\": \"^4.3.2\"\n      }\n    },\n    \"node_modules/tunnel-rat/node_modules/zustand\": {\n      \"version\": \"4.5.7\",\n      \"resolved\": \"https://registry.npmjs.org/zustand/-/zustand-4.5.7.tgz\",\n      \"integrity\": \"sha512-CHOUy7mu3lbD6o6LJLfllpjkzhHXSBlX8B9+qPddUsIfeF5S/UZ5q0kmCsnRqT1UHFQZchNFDDzMbQsuesHWlw==\",\n      \"dependencies\": {\n        \"use-sync-external-store\": \"^1.2.2\"\n      },\n      \"engines\": {\n        \"node\": \">=12.7.0\"\n      },\n      \"peerDependencies\": {\n        \"@types/react\": \">=16.8\",\n        \"immer\": \">=9.0.6\",\n        \"react\": \">=16.8\"\n      },\n      \"peerDependenciesMeta\": {\n        \"@types/react\": {\n          \"optional\": true\n        },\n        \"immer\": {\n          \"optional\": true\n        },\n        \"react\": {\n          \"optional\": true\n        }\n      }\n    },\n    \"node_modules/type-detect\": {\n      \"version\": \"4.0.8\",\n      \"resolved\": \"https://registry.npmjs.org/type-detect/-/type-detect-4.0.8.tgz\",\n      \"integrity\": \"sha512-0fr/mIH1dlO+x7TlcMy+bIDqKPsw/70tVyeHW787goQjhmqaZe10uwLujubK9q9Lg6Fiho1KUKDYz0Z7k7g5/g==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=4\"\n      }\n    },\n    \"node_modules/type-fest\": {\n      \"version\": \"0.21.3\",\n      \"resolved\": \"https://registry.npmjs.org/type-fest/-/type-fest-0.21.3.tgz\",\n      \"integrity\": \"sha512-t0rzBq87m3fVcduHDUFhKmyyX+9eo6WQjZvf51Ea/M0Q7+T374Jp1aUiyUl0GKxp8M/OETVHSDvmkyPgvX+X2w==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=10\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    },\n    \"node_modules/undici-types\": {\n      \"version\": \"7.8.0\",\n      \"resolved\": \"https://registry.npmjs.org/undici-types/-/undici-types-7.8.0.tgz\",\n      \"integrity\": \"sha512-9UJ2xGDvQ43tYyVMpuHlsgApydB8ZKfVYTsLDhXkFL/6gfkp+U8xTGdh8pMJv1SpZna0zxG1DwsKZsreLbXBxw==\",\n      \"dev\": true\n    },\n    \"node_modules/update-browserslist-db\": {\n      \"version\": \"1.1.3\",\n      \"resolved\": \"https://registry.npmjs.org/update-browserslist-db/-/update-browserslist-db-1.1.3.tgz\",\n      \"integrity\": \"sha512-UxhIZQ+QInVdunkDAaiazvvT/+fXL5Osr0JZlJulepYu6Jd7qJtDZjlur0emRlT71EN3ScPoE7gvsuIKKNavKw==\",\n      \"dev\": true,\n      \"funding\": [\n        {\n          \"type\": \"opencollective\",\n          \"url\": \"https://opencollective.com/browserslist\"\n        },\n        {\n          \"type\": \"tidelift\",\n          \"url\": \"https://tidelift.com/funding/github/npm/browserslist\"\n        },\n        {\n          \"type\": \"github\",\n          \"url\": \"https://github.com/sponsors/ai\"\n        }\n      ],\n      \"dependencies\": {\n        \"escalade\": \"^3.2.0\",\n        \"picocolors\": \"^1.1.1\"\n      },\n      \"bin\": {\n        \"update-browserslist-db\": \"cli.js\"\n      },\n      \"peerDependencies\": {\n        \"browserslist\": \">= 4.21.0\"\n      }\n    },\n    \"node_modules/use-sync-external-store\": {\n      \"version\": \"1.5.0\",\n      \"resolved\": \"https://registry.npmjs.org/use-sync-external-store/-/use-sync-external-store-1.5.0.tgz\",\n      \"integrity\": \"sha512-Rb46I4cGGVBmjamjphe8L/UnvJD+uPPtTkNvX5mZgqdbavhI4EbgIWJiIHXJ8bc/i9EQGPRh4DwEURJ552Do0A==\",\n      \"peerDependencies\": {\n        \"react\": \"^16.8.0 || ^17.0.0 || ^18.0.0 || ^19.0.0\"\n      }\n    },\n    \"node_modules/util-deprecate\": {\n      \"version\": \"1.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/util-deprecate/-/util-deprecate-1.0.2.tgz\",\n      \"integrity\": \"sha512-EPD5q1uXyFxJpCrLnCc1nHnq3gOa6DZBocAIiI2TaSCA7VCJ1UJDMagCzIkXNsUYfD1daK//LTEQ8xiIbrHtcw==\",\n      \"dev\": true\n    },\n    \"node_modules/utility-types\": {\n      \"version\": \"3.11.0\",\n      \"resolved\": \"https://registry.npmjs.org/utility-types/-/utility-types-3.11.0.tgz\",\n      \"integrity\": \"sha512-6Z7Ma2aVEWisaL6TvBCy7P8rm2LQoPv6dJ7ecIaIixHcwfbJ0x7mWdbcwlIM5IGQxPZSFYeqRCqlOOeKoJYMkw==\",\n      \"engines\": {\n        \"node\": \">= 4\"\n      }\n    },\n    \"node_modules/utrie\": {\n      \"version\": \"1.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/utrie/-/utrie-1.0.2.tgz\",\n      \"integrity\": \"sha512-1MLa5ouZiOmQzUbjbu9VmjLzn1QLXBhwpUa7kdLUQK+KQ5KA9I1vk5U4YHe/X2Ch7PYnJfWuWT+VbuxbGwljhw==\",\n      \"optional\": true,\n      \"dependencies\": {\n        \"base64-arraybuffer\": \"^1.0.2\"\n      }\n    },\n    \"node_modules/v8-to-istanbul\": {\n      \"version\": \"9.3.0\",\n      \"resolved\": \"https://registry.npmjs.org/v8-to-istanbul/-/v8-to-istanbul-9.3.0.tgz\",\n      \"integrity\": \"sha512-kiGUalWN+rgBJ/1OHZsBtU4rXZOfj/7rKQxULKlIzwzQSvMJUUNgPwJEEh7gU6xEVxC0ahoOBvN2YI8GH6FNgA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@jridgewell/trace-mapping\": \"^0.3.12\",\n        \"@types/istanbul-lib-coverage\": \"^2.0.1\",\n        \"convert-source-map\": \"^2.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=10.12.0\"\n      }\n    },\n    \"node_modules/walker\": {\n      \"version\": \"1.0.8\",\n      \"resolved\": \"https://registry.npmjs.org/walker/-/walker-1.0.8.tgz\",\n      \"integrity\": \"sha512-ts/8E8l5b7kY0vlWLewOkDXMmPdLcVV4GmOQLyxuSswIJsweeFZtAsMF7k1Nszz+TYBQrlYRmzOnr398y1JemQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"makeerror\": \"1.0.12\"\n      }\n    },\n    \"node_modules/webgl-constants\": {\n      \"version\": \"1.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/webgl-constants/-/webgl-constants-1.1.1.tgz\",\n      \"integrity\": \"sha512-LkBXKjU5r9vAW7Gcu3T5u+5cvSvh5WwINdr0C+9jpzVB41cjQAP5ePArDtk/WHYdVj0GefCgM73BA7FlIiNtdg==\"\n    },\n    \"node_modules/webgl-sdf-generator\": {\n      \"version\": \"1.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/webgl-sdf-generator/-/webgl-sdf-generator-1.1.1.tgz\",\n      \"integrity\": \"sha512-9Z0JcMTFxeE+b2x1LJTdnaT8rT8aEp7MVxkNwoycNmJWwPdzoXzMh0BjJSh/AEFP+KPYZUli814h8bJZFIZ2jA==\"\n    },\n    \"node_modules/which\": {\n      \"version\": \"2.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/which/-/which-2.0.2.tgz\",\n      \"integrity\": \"sha512-BLI3Tl1TW3Pvl70l3yq3Y64i+awpwXqsGBYWkkqMtnbXgrMD+yj7rhW0kuEDxzJaYXGjEW5ogapKNMEKNMjibA==\",\n      \"dependencies\": {\n        \"isexe\": \"^2.0.0\"\n      },\n      \"bin\": {\n        \"node-which\": \"bin/node-which\"\n      },\n      \"engines\": {\n        \"node\": \">= 8\"\n      }\n    },\n    \"node_modules/which-boxed-primitive\": {\n      \"version\": \"1.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/which-boxed-primitive/-/which-boxed-primitive-1.1.1.tgz\",\n      \"integrity\": \"sha512-TbX3mj8n0odCBFVlY8AxkqcHASw3L60jIuF8jFP78az3C2YhmGvqbHBpAjTRH2/xqYunrJ9g1jSyjCjpoWzIAA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"is-bigint\": \"^1.1.0\",\n        \"is-boolean-object\": \"^1.2.1\",\n        \"is-number-object\": \"^1.1.1\",\n        \"is-string\": \"^1.1.1\",\n        \"is-symbol\": \"^1.1.1\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/which-collection\": {\n      \"version\": \"1.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/which-collection/-/which-collection-1.0.2.tgz\",\n      \"integrity\": \"sha512-K4jVyjnBdgvc86Y6BkaLZEN933SwYOuBFkdmBu9ZfkcAbdVbpITnDmjvZ/aQjRXQrv5EPkTnD1s39GiiqbngCw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"is-map\": \"^2.0.3\",\n        \"is-set\": \"^2.0.3\",\n        \"is-weakmap\": \"^2.0.2\",\n        \"is-weakset\": \"^2.0.3\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/which-typed-array\": {\n      \"version\": \"1.1.19\",\n      \"resolved\": \"https://registry.npmjs.org/which-typed-array/-/which-typed-array-1.1.19.tgz\",\n      \"integrity\": \"sha512-rEvr90Bck4WZt9HHFC4DJMsjvu7x+r6bImz0/BrbWb7A2djJ8hnZMrWnHo9F8ssv0OMErasDhftrfROTyqSDrw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"available-typed-arrays\": \"^1.0.7\",\n        \"call-bind\": \"^1.0.8\",\n        \"call-bound\": \"^1.0.4\",\n        \"for-each\": \"^0.3.5\",\n        \"get-proto\": \"^1.0.1\",\n        \"gopd\": \"^1.2.0\",\n        \"has-tostringtag\": \"^1.0.2\"\n      },\n      \"engines\": {\n        \"node\": \">= 0.4\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/ljharb\"\n      }\n    },\n    \"node_modules/wrap-ansi\": {\n      \"version\": \"7.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/wrap-ansi/-/wrap-ansi-7.0.0.tgz\",\n      \"integrity\": \"sha512-YVGIj2kamLSTxw6NsZjoBxfSwsn0ycdesmc4p+Q21c5zPuZ1pl+NfxVdxPtdHvmNVOQ6XSYG4AUtyt/Fi7D16Q==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"ansi-styles\": \"^4.0.0\",\n        \"string-width\": \"^4.1.0\",\n        \"strip-ansi\": \"^6.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=10\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/chalk/wrap-ansi?sponsor=1\"\n      }\n    },\n    \"node_modules/wrap-ansi-cjs\": {\n      \"name\": \"wrap-ansi\",\n      \"version\": \"7.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/wrap-ansi/-/wrap-ansi-7.0.0.tgz\",\n      \"integrity\": \"sha512-YVGIj2kamLSTxw6NsZjoBxfSwsn0ycdesmc4p+Q21c5zPuZ1pl+NfxVdxPtdHvmNVOQ6XSYG4AUtyt/Fi7D16Q==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"ansi-styles\": \"^4.0.0\",\n        \"string-width\": \"^4.1.0\",\n        \"strip-ansi\": \"^6.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=10\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/chalk/wrap-ansi?sponsor=1\"\n      }\n    },\n    \"node_modules/wrappy\": {\n      \"version\": \"1.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/wrappy/-/wrappy-1.0.2.tgz\",\n      \"integrity\": \"sha512-l4Sp/DRseor9wL6EvV2+TuQn63dMkPjZ/sp9XkghTEbV9KlPS1xUsZ3u7/IQO4wxtcFB4bgpQPRcR3QCvezPcQ==\",\n      \"dev\": true\n    },\n    \"node_modules/write-file-atomic\": {\n      \"version\": \"4.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/write-file-atomic/-/write-file-atomic-4.0.2.tgz\",\n      \"integrity\": \"sha512-7KxauUdBmSdWnmpaGFg+ppNjKF8uNLry8LyzjauQDOVONfFLNKrKvQOxZ/VuTIcS/gge/YNahf5RIIQWTSarlg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"imurmurhash\": \"^0.1.4\",\n        \"signal-exit\": \"^3.0.7\"\n      },\n      \"engines\": {\n        \"node\": \"^12.13.0 || ^14.15.0 || >=16.0.0\"\n      }\n    },\n    \"node_modules/y18n\": {\n      \"version\": \"5.0.8\",\n      \"resolved\": \"https://registry.npmjs.org/y18n/-/y18n-5.0.8.tgz\",\n      \"integrity\": \"sha512-0pfFzegeDWJHJIAmTLRP2DwHjdF5s7jo9tuztdQxAhINCdvS+3nGINqPd00AphqJR/0LhANUS6/+7SCb98YOfA==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=10\"\n      }\n    },\n    \"node_modules/yallist\": {\n      \"version\": \"3.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/yallist/-/yallist-3.1.1.tgz\",\n      \"integrity\": \"sha512-a4UGQaWPH59mOXUYnAG2ewncQS4i4F43Tv3JoAM+s2VDAmS9NsK8GpDMLrCHPksFT7h3K6TOoUNn2pb7RoXx4g==\",\n      \"dev\": true\n    },\n    \"node_modules/yaml\": {\n      \"version\": \"2.8.0\",\n      \"resolved\": \"https://registry.npmjs.org/yaml/-/yaml-2.8.0.tgz\",\n      \"integrity\": \"sha512-4lLa/EcQCB0cJkyts+FpIRx5G/llPxfP6VQU5KByHEhLxY3IJCH0f0Hy1MHI8sClTvsIb8qwRJ6R/ZdlDJ/leQ==\",\n      \"dev\": true,\n      \"bin\": {\n        \"yaml\": \"bin.mjs\"\n      },\n      \"engines\": {\n        \"node\": \">= 14.6\"\n      }\n    },\n    \"node_modules/yargs\": {\n      \"version\": \"17.7.2\",\n      \"resolved\": \"https://registry.npmjs.org/yargs/-/yargs-17.7.2.tgz\",\n      \"integrity\": \"sha512-7dSzzRQ++CKnNI/krKnYRV7JKKPUXMEh61soaHKg9mrWEhzFWhFnxPxGl+69cD1Ou63C13NUPCnmIcrvqCuM6w==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"cliui\": \"^8.0.1\",\n        \"escalade\": \"^3.1.1\",\n        \"get-caller-file\": \"^2.0.5\",\n        \"require-directory\": \"^2.1.1\",\n        \"string-width\": \"^4.2.3\",\n        \"y18n\": \"^5.0.5\",\n        \"yargs-parser\": \"^21.1.1\"\n      },\n      \"engines\": {\n        \"node\": \">=12\"\n      }\n    },\n    \"node_modules/yargs-parser\": {\n      \"version\": \"21.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/yargs-parser/-/yargs-parser-21.1.1.tgz\",\n      \"integrity\": \"sha512-tVpsJW7DdjecAiFpbIB1e3qxIQsE6NoPc5/eTdrbbIC4h0LVsWhnoa3g+m2HclBIujHzsxZ4VJVA+GUuc2/LBw==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=12\"\n      }\n    },\n    \"node_modules/yocto-queue\": {\n      \"version\": \"0.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/yocto-queue/-/yocto-queue-0.1.0.tgz\",\n      \"integrity\": \"sha512-rVksvsnNCdJ/ohGc6xgPwyN8eheCxsiLM8mxuE/t/mOVqJewPuO1miLpTHQiRgTKCLexL4MeAFVagts7HmNZ2Q==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=10\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    },\n    \"node_modules/zustand\": {\n      \"version\": \"5.0.6\",\n      \"resolved\": \"https://registry.npmjs.org/zustand/-/zustand-5.0.6.tgz\",\n      \"integrity\": \"sha512-ihAqNeUVhe0MAD+X8M5UzqyZ9k3FFZLBTtqo6JLPwV53cbRB/mJwBI0PxcIgqhBBHlEs8G45OTDTMq3gNcLq3A==\",\n      \"engines\": {\n        \"node\": \">=12.20.0\"\n      },\n      \"peerDependencies\": {\n        \"@types/react\": \">=18.0.0\",\n        \"immer\": \">=9.0.6\",\n        \"react\": \">=18.0.0\",\n        \"use-sync-external-store\": \">=1.2.0\"\n      },\n      \"peerDependenciesMeta\": {\n        \"@types/react\": {\n          \"optional\": true\n        },\n        \"immer\": {\n          \"optional\": true\n        },\n        \"react\": {\n          \"optional\": true\n        },\n        \"use-sync-external-store\": {\n          \"optional\": true\n        }\n      }\n    }\n  }\n}\n"
+  },
+  {
+    "filename": "OperationAssigner.test.jsx",
+    "full_content": "import React from 'react';\nimport { render, screen, fireEvent } from '@testing-library/react';\nimport OperationAssigner from './OperationAssigner';\njest.mock('./logger', () => jest.fn());\nimport log from './logger';\n\ntest('assigns operations and heads with summary', () => {\n  render(<OperationAssigner paths={[[], []]} />);\n  expect(screen.getByTestId('summary')).toHaveTextContent('Spindle: 2');\n\n  fireEvent.change(screen.getByTestId('op-0'), { target: { value: 'Engrave' } });\n  expect(screen.getByTestId('head-0').value).toBe('Laser');\n  fireEvent.change(screen.getByTestId('head-1'), { target: { value: 'Print Head' } });\n\n  const summary = screen.getByTestId('summary');\n  expect(summary).toHaveTextContent('Laser: 1');\n  expect(summary).toHaveTextContent('Print Head: 1');\n  expect(log).toHaveBeenCalledWith('Path 0 operation -> Engrave');\n  expect(log).toHaveBeenCalledWith('Path 1 head -> Print Head');\n});\n"
+  },
+  {
+    "filename": "MaterialSelector.test.jsx",
+    "full_content": "import React from 'react';\nimport { render, screen, fireEvent } from '@testing-library/react';\nimport MaterialSelector from './MaterialSelector';\njest.mock('./logger', () => jest.fn());\nimport log from './logger';\n\ntest('shows feed and speed when selecting material and custom input', () => {\n  render(<MaterialSelector />);\n  const select = screen.getByTestId('material-select');\n  fireEvent.change(select, { target: { value: 'MDF' } });\n  expect(screen.getByTestId('speed')).toHaveTextContent('16000');\n  expect(screen.getByTestId('feed')).toHaveTextContent('900');\n  expect(log).toHaveBeenCalledWith('Material selected: MDF');\n\n  fireEvent.change(select, { target: { value: 'Custom' } });\n  expect(screen.getByTestId('custom-input')).toBeInTheDocument();\n  expect(log).toHaveBeenCalledWith('Material selected: Custom');\n});\n"
+  },
+  {
+    "filename": "FileUploader.jsx",
+    "full_content": "import React, { useState, useCallback } from 'react';\nimport log from './logger';\n\n/**\n * Drag-and-drop file importer with basic preview.\n * Supports SVG, DXF, DWG, STL, OBJ, GCODE and bitmap images.\n */\nexport default function FileUploader({ onContinue }) {\n  const [file, setFile] = useState(null);\n  const [error, setError] = useState('');\n\n  const MAX_SIZE = 10 * 1024 * 1024; // 10MB\n  const allowed = ['svg','dxf','dwg','stl','obj','gcode','nc','png','jpg','jpeg'];\n\n  const handleDrop = useCallback((e) => {\n    e.preventDefault();\n    if (!e.dataTransfer.files.length) return;\n    const f = e.dataTransfer.files[0];\n    const ext = f.name.split('.').pop().toLowerCase();\n    if (!allowed.includes(ext)) {\n      setError('Unsupported file type.');\n      log(`Unsupported file type: ${f.name}`);\n      return;\n    }\n    if (f.size > MAX_SIZE) {\n      setError('File too large.');\n      log(`File too large: ${f.name}`);\n      return;\n    }\n    setError('');\n    setFile(f);\n    log(`File selected via drop: ${f.name}`);\n  }, []);\n\n  const handleInput = useCallback((e) => {\n    if (!e.target.files.length) return;\n    const f = e.target.files[0];\n    const ext = f.name.split('.').pop().toLowerCase();\n    if (!allowed.includes(ext)) {\n      setError('Unsupported file type.');\n      log(`Unsupported file type: ${f.name}`);\n      return;\n    }\n    if (f.size > MAX_SIZE) {\n      setError('File too large.');\n      log(`File too large: ${f.name}`);\n      return;\n    }\n    setError('');\n    setFile(f);\n    log(`File selected via input: ${f.name}`);\n  }, []);\n\n  const preview = () => {\n    if (!file) return null;\n    const ext = file.name.split('.').pop().toLowerCase();\n    switch (ext) {\n      case 'svg':\n        return (\n          <img\n            src={URL.createObjectURL(file)}\n            alt=\"SVG preview\"\n            className=\"h-32 w-auto mx-auto\"\n          />\n        );\n      case 'dxf':\n      case 'dwg':\n        return <p>2D CAD Drawing</p>;\n      case 'stl':\n        return <p>3D Model (STL)</p>;\n      case 'obj':\n        return <p>3D Model (OBJ)</p>;\n      case 'png':\n      case 'jpg':\n      case 'jpeg':\n        return (\n          <img\n            src={URL.createObjectURL(file)}\n            alt=\"Image preview\"\n            className=\"h-32 w-auto mx-auto\"\n          />\n        );\n      case 'gcode':\n      case 'nc':\n        return <p>G-code Instructions</p>;\n      default:\n        return <p>Unsupported file</p>;\n    }\n  };\n\n  return (\n    <div className=\"max-w-lg mx-auto p-4\">\n      <div\n        onDragOver={(e) => e.preventDefault()}\n        onDrop={handleDrop}\n        className={`border-2 border-dashed rounded-md p-8 text-center cursor-pointer ${error ? 'border-red-500' : ''}`}\n        data-testid=\"drop-zone\"\n      >\n        <input\n          id=\"file-input\"\n          type=\"file\"\n          accept=\".svg,.dxf,.dwg,.stl,.obj,.gcode,.nc,.png,.jpg,.jpeg\"\n          className=\"hidden\"\n          onChange={handleInput}\n        />\n        <label htmlFor=\"file-input\" className=\"block text-gray-500\">\n          Drag &amp; drop file here or click to select\n        </label>\n        {file && (\n          <div className=\"mt-4\">\n            <p className=\"font-semibold\" data-testid=\"file-name\">{file.name}</p>\n            {preview()}\n          </div>\n        )}\n      </div>\n      {error && (\n        <div className=\"mt-2 text-red-600\" data-testid=\"error-msg\">\n          {error} â please retry, use our template or contact support.\n        </div>\n      )}\n      {file && !error && (\n        <button\n          className=\"mt-4 bg-blue-600 text-white px-4 py-2 rounded hover:bg-blue-700\"\n          onClick={() => {\n            log(`Continue to editor: ${file.name}`);\n            onContinue && onContinue(file);\n          }}\n        >\n          Continue to Toolpath Editor\n        </button>\n      )}\n    </div>\n  );\n}\n"
+  },
+  {
+    "filename": "HapticToolpathEditor.jsx",
+    "full_content": "import React, { useState, useRef } from 'react';\nimport log from './logger';\nimport ToolpathSimulator from './ToolpathSimulator';\n\n/**\n * HapticToolpathEditor\n * --------------------\n * Freehand drawing editor with layer and history support.\n * Paths are stored as arrays of points [{x,y,z,pressure}] and rendered\n * live while drawing. Actions are logged to logs/central.log.\n */\nexport default function HapticToolpathEditor({ width = 800, height = 600 }) {\n  const [layers, setLayers] = useState([]); // {id,name,visible,paths:[]}\n  const [currentLayer, setCurrentLayer] = useState(null);\n  const [drawing, setDrawing] = useState(false);\n  const [history, setHistory] = useState([]);\n  const [future, setFuture] = useState([]);\n  const svgRef = useRef(null);\n  const [simPath, setSimPath] = useState(null);\n\n  // push current state to history\n  const pushHistory = (newLayers) => {\n    setHistory((h) => [...h, JSON.parse(JSON.stringify(layers))]);\n    setFuture([]);\n    setLayers(newLayers);\n  };\n\n  const startLayer = () => {\n    const layer = {\n      id: Date.now(),\n      name: `Layer ${layers.length + 1}`,\n      visible: true,\n      paths: [],\n    };\n    pushHistory([...layers, layer]);\n    setCurrentLayer(layer.id);\n    log('new layer created');\n  };\n\n  const addPoint = (x, y, p) => {\n    setLayers((ls) =>\n      ls.map((l) => {\n        if (l.id !== currentLayer) return l;\n        const paths = [...l.paths];\n        if (!paths.length || !drawing) paths.push([]);\n        const curr = paths[paths.length - 1];\n        curr.push({ x, y, p });\n        return { ...l, paths };\n      })\n    );\n  };\n\n  const handlePointerDown = (e) => {\n    if (currentLayer == null) startLayer();\n    setDrawing(true);\n    const rect = svgRef.current.getBoundingClientRect();\n    addPoint(e.clientX - rect.left, e.clientY - rect.top, e.pressure || 0);\n  };\n\n  const handlePointerMove = (e) => {\n    if (!drawing) return;\n    const rect = svgRef.current.getBoundingClientRect();\n    addPoint(e.clientX - rect.left, e.clientY - rect.top, e.pressure || 0);\n  };\n\n  const stopDrawing = () => {\n    if (drawing) {\n      log('path drawn');\n      setDrawing(false);\n      pushHistory([...layers]);\n    }\n  };\n\n  const undo = () => {\n    setHistory((h) => {\n      if (!h.length) return h;\n      const prev = h[h.length - 1];\n      setFuture((f) => [JSON.parse(JSON.stringify(layers)), ...f]);\n      setLayers(prev);\n      return h.slice(0, -1);\n    });\n    log('undo');\n  };\n\n  const redo = () => {\n    setFuture((f) => {\n      if (!f.length) return f;\n      const next = f[0];\n      setHistory((h) => [...h, JSON.parse(JSON.stringify(layers))]);\n      setLayers(next);\n      return f.slice(1);\n    });\n    log('redo');\n  };\n\n  const exportGcode = () => {\n    const path = layers\n      .filter((l) => l.visible)\n      .flatMap((l) => l.paths)\n      .flat();\n    setSimPath(path);\n    log('export G-code');\n  };\n\n  return (\n    <div className=\"flex\">\n      <div className=\"w-64 p-2 space-y-2 border-r\">\n        <button\n          className=\"bg-blue-600 text-white px-2 py-1 rounded\"\n          onClick={startLayer}\n        >\n          New Layer\n        </button>\n        <button className=\"bg-gray-300 px-2 py-1 rounded\" onClick={undo}>\n          Undo\n        </button>\n        <button className=\"bg-gray-300 px-2 py-1 rounded\" onClick={redo}>\n          Redo\n        </button>\n        <button\n          className=\"bg-green-600 text-white px-2 py-1 rounded\"\n          onClick={exportGcode}\n        >\n          Export as G-code\n        </button>\n        <div>\n          {layers.map((l) => (\n            <div key={l.id} className=\"flex items-center space-x-1\">\n              <input\n                type=\"checkbox\"\n                checked={l.visible}\n                onChange={() =>\n                  setLayers((ls) =>\n                    ls.map((o) => (o.id === l.id ? { ...o, visible: !o.visible } : o))\n                  )\n                }\n              />\n              <span\n                className={\n                  'cursor-pointer ' + (currentLayer === l.id ? 'font-bold' : '')\n                }\n                onClick={() => setCurrentLayer(l.id)}\n              >\n                {l.name}\n              </span>\n            </div>\n          ))}\n        </div>\n      </div>\n      <div className=\"flex-1 relative\" onPointerUp={stopDrawing}>\n        <svg\n          ref={svgRef}\n          width={width}\n          height={height}\n          className=\"bg-gray-100 touch-none\"\n          onPointerDown={handlePointerDown}\n          onPointerMove={handlePointerMove}\n        >\n          {layers.map((l) =>\n            l.visible ? (\n              <g key={l.id}>\n                {l.paths.map((p, i) => (\n                  <polyline\n                    key={i}\n                    points={p.map((pt) => `${pt.x},${pt.y}`).join(' ')}\n                    fill=\"none\"\n                    stroke=\"red\"\n                    strokeWidth={2}\n                  />\n                ))}\n              </g>\n            ) : null\n          )}\n        </svg>\n        {simPath && (\n          <div className=\"absolute inset-0 bg-white bg-opacity-90 flex\">\n            <div className=\"m-auto bg-white p-4 shadow\">\n              <ToolpathSimulator gcode={simPath.map((pt) => `G1 X${pt.x} Y${pt.y}`)} />\n              <button\n                className=\"bg-gray-300 px-2 py-1 mt-2 rounded\"\n                onClick={() => setSimPath(null)}\n              >\n                Close\n              </button>\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n"
+  },
+  {
+    "filename": "MachineMonitor.jsx",
+    "full_content": "import React, { useEffect, useState } from 'react';\nimport log from './logger';\n\n/**\n * MachineMonitor\n * ---------------\n * Display dummy machine status that updates every second.\n * Real implementation would poll a controller API.\n */\nexport default function MachineMonitor() {\n  const [status, setStatus] = useState({ x: 0, y: 0, z: 0, feed: 0, state: 'Idle' });\n\n  useEffect(() => {\n    const timer = setInterval(() => {\n      setStatus((s) => {\n        const next = { ...s, x: s.x + 1, y: s.y + 1, feed: 1000, state: 'Running' };\n        log(`monitor update ${JSON.stringify(next)}`);\n        return next;\n      });\n    }, 1000);\n    return () => clearInterval(timer);\n  }, []);\n\n  return (\n    <div className=\"space-y-1 text-sm\">\n      <div>X: {status.x.toFixed(1)}</div>\n      <div>Y: {status.y.toFixed(1)}</div>\n      <div>Z: {status.z.toFixed(1)}</div>\n      <div>Feed: {status.feed} mm/min</div>\n      <div>Status: {status.state}</div>\n    </div>\n  );\n}\n"
+  },
+  {
+    "filename": "ZoneSummary.jsx",
+    "full_content": "import React from 'react';\nimport log from './logger';\n\n/**\n * Display planned robotic arm zones and transitions.\n */\nexport default function ZoneSummary({ zones = [] }) {\n  if (!zones.length) return <div>No zones planned.</div>;\n  log(`showing ${zones.length} zones`);\n  return (\n    <div className=\"p-4 space-y-2\">\n      <h4 className=\"font-medium\">Zone Plan</h4>\n      <ul className=\"space-y-1\" data-testid=\"zone-list\">\n        {zones.map((z, i) => (\n          <li key={i} className=\"border rounded p-2\">\n            <div>Base: X{z.base[0]} Y{z.base[1]}</div>\n            <div>{z.toolpath.length} pts</div>\n            {z.move_cmds.map((c, ci) => (\n              <div key={ci} className=\"text-xs text-gray-500\">{c}</div>\n            ))}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n"
+  },
+  {
+    "filename": "RobotDiagnosticsDashboard.jsx",
+    "full_content": "import React, { useState, useEffect } from 'react';\nimport log, { getLogContent } from './logger';\n\n/**\n * Display basic statistics parsed from central.log.\n */\nexport default function RobotDiagnosticsDashboard() {\n  const [stats, setStats] = useState({ runs: 0, warnings: 0, errors: 0, feedback: 0 });\n\n  const parseLogs = () => {\n    const text = getLogContent();\n    const lines = text.split(/\\n/);\n    let runs = 0, warnings = 0, errors = 0, feedback = 0;\n    lines.forEach(line => {\n      if (line.includes('Robot run')) runs += line.includes('started') ? 1 : 0;\n      if (line.includes('WARNING') || line.includes('Robot warning')) warnings += 1;\n      if (line.includes('ERROR') || line.includes('Robot error')) errors += 1;\n      if (line.includes('feedback')) feedback += 1;\n    });\n    setStats({ runs, warnings, errors, feedback });\n  };\n\n  useEffect(() => {\n    parseLogs();\n  }, []);\n\n  return (\n    <div className=\"p-4 space-y-2\">\n      <button onClick={parseLogs} className=\"bg-gray-700 text-white px-2 py-1 rounded\">Refresh</button>\n      <div className=\"space-y-1\">\n        <div>Runs: {stats.runs}</div>\n        <div>Warnings: {stats.warnings}</div>\n        <div>Errors: {stats.errors}</div>\n        <div>Feedback: {stats.feedback}</div>\n      </div>\n    </div>\n  );\n}\n"
+  },
+  {
+    "filename": "viewportUtils.ts",
+    "full_content": "import * as THREE from 'three';\n// @ts-ignore\nimport { STLLoader } from 'three/examples/jsm/loaders/STLLoader.js';\n// @ts-ignore\nimport { OBJLoader } from 'three/examples/jsm/loaders/OBJLoader.js';\n// @ts-ignore\nimport { SVGLoader } from 'three/examples/jsm/loaders/SVGLoader.js';\n// @ts-ignore\nimport { DXFLoader } from 'three/examples/jsm/loaders/DXFLoader.js';\n\nexport interface ModelData {\n  object: THREE.Object3D;\n  bbox: THREE.Box3;\n  name: string;\n  size: THREE.Vector3;\n}\n\nexport type ToolpathType =\n  | 'milling'\n  | 'drilling'\n  | 'engraving'\n  | 'laser_cut'\n  | 'laser_mark';\n\nexport type ToolHead = 'spindle' | 'laser' | 'picker';\n\nexport const HEAD_COLORS: Record<ToolHead, number> = {\n  spindle: 0x0088ff,\n  laser: 0xff2222,\n  picker: 0x22ff22,\n};\n\nexport interface Diagnostic {\n  layer: number;\n  index: number;\n  position: THREE.Vector3;\n  message: string;\n}\n\nexport interface ToolpathData {\n  object: THREE.Object3D;\n  points: THREE.Vector3[];\n  rotations: THREE.Vector3[];\n  type: ToolpathType;\n  head: ToolHead;\n  bbox: THREE.Box3;\n  name: string;\n  layers: THREE.Vector3[][];\n  rotationLayers?: THREE.Vector3[][];\n  diagnostics: Diagnostic[];\n}\n\nfunction parseGcode(text: string): THREE.Vector3[] {\n  const lines = text.split(/\\r?\\n/);\n  let x = 0,\n    y = 0,\n    z = 0,\n    a = 0,\n    b = 0,\n    c = 0;\n  const pts: THREE.Vector3[] = [];\n  for (const line of lines) {\n    if (/G0|G1/.test(line)) {\n      const xMatch = line.match(/X(-?\\d*\\.?\\d*)/);\n      const yMatch = line.match(/Y(-?\\d*\\.?\\d*)/);\n      const zMatch = line.match(/Z(-?\\d*\\.?\\d*)/);\n      const aMatch = line.match(/A(-?\\d*\\.?\\d*)/i);\n      const bMatch = line.match(/B(-?\\d*\\.?\\d*)/i);\n      const cMatch = line.match(/C(-?\\d*\\.?\\d*)/i);\n      if (xMatch) x = parseFloat(xMatch[1]);\n      if (yMatch) y = parseFloat(yMatch[1]);\n      if (zMatch) z = parseFloat(zMatch[1]);\n      if (aMatch) a = parseFloat(aMatch[1]);\n      if (bMatch) b = parseFloat(bMatch[1]);\n      if (cMatch) c = parseFloat(cMatch[1]);\n      pts.push(new THREE.Vector3(x, y, z));\n    }\n  }\n  return pts;\n}\n\n/** Parse G-code into categorized toolpath segments. */\nfunction parseGcodeToolpaths(text: string): ToolpathData[] {\n  const lines = text.split(/\\r?\\n/);\n  let x = 0,\n    y = 0,\n    z = 0,\n    a = 0,\n    b = 0,\n    c = 0;\n  let current: ToolpathType = 'milling';\n  const map: Record<ToolpathType, THREE.Vector3[]> = {\n    milling: [],\n    drilling: [],\n    engraving: [],\n    laser_cut: [],\n    laser_mark: [],\n  };\n  const rotMap: Record<ToolpathType, THREE.Vector3[]> = {\n    milling: [],\n    drilling: [],\n    engraving: [],\n    laser_cut: [],\n    laser_mark: [],\n  };\n\n  const opMap: Record<string, ToolpathType> = {\n    cut: 'milling',\n    drill: 'drilling',\n    engrave: 'engraving',\n    laser: 'laser_cut',\n    mark: 'laser_mark',\n  };\n\n  const headMap: Record<ToolpathType, ToolHead> = {\n    milling: 'spindle',\n    drilling: 'spindle',\n    engraving: 'spindle',\n    laser_cut: 'laser',\n    laser_mark: 'laser',\n  };\n\n  for (const line of lines) {\n    const op = line.match(/;\\s*OP[:=](\\w+)/i);\n    if (op) {\n      const t = opMap[op[1].toLowerCase()];\n      if (t) current = t;\n    }\n    if (/G0|G1/.test(line)) {\n      const xMatch = line.match(/X(-?\\d*\\.?\\d*)/i);\n      const yMatch = line.match(/Y(-?\\d*\\.?\\d*)/i);\n      const zMatch = line.match(/Z(-?\\d*\\.?\\d*)/i);\n      const aMatch = line.match(/A(-?\\d*\\.?\\d*)/i);\n      const bMatch = line.match(/B(-?\\d*\\.?\\d*)/i);\n      const cMatch = line.match(/C(-?\\d*\\.?\\d*)/i);\n      if (xMatch) x = parseFloat(xMatch[1]);\n      if (yMatch) y = parseFloat(yMatch[1]);\n      if (zMatch) z = parseFloat(zMatch[1]);\n      if (aMatch) a = parseFloat(aMatch[1]);\n      if (bMatch) b = parseFloat(bMatch[1]);\n      if (cMatch) c = parseFloat(cMatch[1]);\n      map[current].push(new THREE.Vector3(x, y, z));\n      rotMap[current].push(new THREE.Vector3(a, b, c));\n    }\n  }\n\n  const colors: Record<ToolpathType, number> = {\n    milling: 0x00ff00,\n    drilling: 0xff00ff,\n    engraving: 0xffff00,\n    laser_cut: 0xff0000,\n    laser_mark: 0xff8800,\n  };\n\n  const segments: ToolpathData[] = [];\n  for (const type of Object.keys(map) as ToolpathType[]) {\n    const pts = map[type];\n    if (!pts.length) continue;\n    const layers: THREE.Vector3[][] = [];\n    let current: THREE.Vector3[] = [];\n    let lastZ = pts[0].z;\n    pts.forEach((p) => {\n      if (p.z > lastZ + 0.01) {\n        layers.push(current);\n        current = [];\n      }\n      current.push(p);\n      lastZ = p.z;\n    });\n    if (current.length) layers.push(current);\n    const rotLayers: THREE.Vector3[][] = [];\n    let curR: THREE.Vector3[] = [];\n    let idx = 0;\n    rotMap[type].forEach((r, i) => {\n      if (i > 0 && pts[i].z > pts[i - 1].z + 0.01) {\n        rotLayers.push(curR);\n        curR = [];\n      }\n      curR.push(r);\n      idx = i;\n    });\n    if (curR.length) rotLayers.push(curR);\n\n    const diagnostics: Diagnostic[] = [];\n    layers.forEach((layerPts, layerIdx) => {\n      for (let i = 1; i < layerPts.length - 1; i++) {\n        const prev = layerPts[i - 1];\n        const curr = layerPts[i];\n        const next = layerPts[i + 1];\n        const v1 = new THREE.Vector3().subVectors(curr, prev);\n        const v2 = new THREE.Vector3().subVectors(next, curr);\n        const angle = (v1.angleTo(v2) * 180) / Math.PI;\n        if (angle < 135) {\n          diagnostics.push({\n            layer: layerIdx,\n            index: i,\n            position: curr.clone(),\n            message: 'sharp corner',\n          });\n        }\n        if (curr.z < -1) {\n          diagnostics.push({\n            layer: layerIdx,\n            index: i,\n            position: curr.clone(),\n            message: 'possible collision',\n          });\n        }\n      }\n    });\n\n    const geom = new THREE.BufferGeometry().setFromPoints(pts);\n    const line = new THREE.Line(\n      geom,\n      new THREE.LineBasicMaterial({ color: colors[type] })\n    );\n    const bbox = new THREE.Box3().setFromPoints(pts);\n    const center = bbox.getCenter(new THREE.Vector3());\n    line.position.sub(center);\n    const shifted = pts.map((p) => p.clone().sub(center));\n    const shiftedRotations = rotMap[type].map((r) => r.clone());\n    const shiftedLayers = layers.map((l) => l.map((p) => p.clone().sub(center)));\n    const shiftedRotLayers = rotLayers.map((l) => l.map((r) => r.clone()));\n    const shiftedDiags = diagnostics.map((d) => ({\n      ...d,\n      position: d.position.clone().sub(center),\n    }));\n    segments.push({\n      object: line,\n      points: shifted,\n      type,\n      head: headMap[type],\n      bbox,\n      name: type,\n      layers: shiftedLayers,\n      rotations: shiftedRotations,\n      rotationLayers: shiftedRotLayers,\n      diagnostics: shiftedDiags,\n    });\n  }\n\n  return segments;\n}\n\nexport async function loadModel(file: File): Promise<ModelData | null> {\n  const ext = file.name.split('.').pop()?.toLowerCase();\n  return new Promise((resolve) => {\n    const reader = new FileReader();\n    reader.onerror = () => resolve(null);\n\n    if (ext === 'stl') {\n      reader.onload = () => {\n        const loader = new STLLoader();\n        const geom = loader.parse(reader.result as ArrayBuffer);\n        geom.computeBoundingBox();\n        const mesh = new THREE.Mesh(\n          geom,\n          new THREE.MeshStandardMaterial({ color: 0x999999 })\n        );\n        const bbox = geom.boundingBox ?? new THREE.Box3();\n        const size = bbox.getSize(new THREE.Vector3());\n        mesh.position.sub(bbox.getCenter(new THREE.Vector3()));\n        resolve({ object: mesh, bbox, name: file.name, size });\n      };\n      reader.readAsArrayBuffer(file);\n    } else if (ext === 'obj') {\n      reader.onload = () => {\n        const loader = new OBJLoader();\n        const obj = loader.parse(reader.result as string);\n        const bbox = new THREE.Box3().setFromObject(obj);\n        const size = bbox.getSize(new THREE.Vector3());\n        obj.position.sub(bbox.getCenter(new THREE.Vector3()));\n        resolve({ object: obj, bbox, name: file.name, size });\n      };\n      reader.readAsText(file);\n    } else if (ext === 'svg') {\n      reader.onload = () => {\n        const loader = new SVGLoader();\n        const data = loader.parse(reader.result as string);\n        const group = new THREE.Group();\n        data.paths.forEach((p) => {\n          const shapes = p.toShapes(true);\n          shapes.forEach((s) => {\n            const geom = new THREE.ShapeGeometry(s);\n            const mat = new THREE.MeshBasicMaterial({\n              color: p.color,\n              side: THREE.DoubleSide,\n            });\n            const mesh = new THREE.Mesh(geom, mat);\n            group.add(mesh);\n          });\n        });\n        const bbox = new THREE.Box3().setFromObject(group);\n        const size = bbox.getSize(new THREE.Vector3());\n        group.position.sub(bbox.getCenter(new THREE.Vector3()));\n        resolve({ object: group, bbox, name: file.name, size });\n      };\n      reader.readAsText(file);\n    } else if (ext === 'dxf') {\n      reader.onload = () => {\n        // DXFLoader is not typed\n        // @ts-ignore\n        const loader = new DXFLoader();\n        // @ts-ignore\n        const group = loader.parse(reader.result as string);\n        const bbox = new THREE.Box3().setFromObject(group);\n        const size = bbox.getSize(new THREE.Vector3());\n        group.position.sub(bbox.getCenter(new THREE.Vector3()));\n        resolve({ object: group, bbox, name: file.name, size });\n      };\n      reader.readAsText(file);\n    } else {\n      resolve(null);\n    }\n  });\n}\n\nexport async function loadToolpaths(file: File): Promise<ToolpathData[] | null> {\n  const ext = file.name.split('.').pop()?.toLowerCase();\n  return new Promise((resolve) => {\n    if (ext !== 'gcode' && ext !== 'nc') {\n      resolve(null);\n      return;\n    }\n    const reader = new FileReader();\n    reader.onerror = () => resolve(null);\n    reader.onload = () => {\n      const segments = parseGcodeToolpaths(reader.result as string);\n      segments.forEach((s) => (s.name = file.name));\n      resolve(segments);\n    };\n    reader.readAsText(file);\n  });\n}\n\n/** Reorder toolpaths using a simple nearest-neighbour approach. */\nexport function suggestToolpathOrder(paths: ToolpathData[]): ToolpathData[] {\n  if (!paths.length) return [];\n  const remaining = [...paths];\n  const ordered: ToolpathData[] = [remaining.shift() as ToolpathData];\n  while (remaining.length) {\n    const last = ordered[ordered.length - 1];\n    const lastEnd = last.points[last.points.length - 1];\n    let nearestIdx = 0;\n    let nearestDist = lastEnd.distanceTo(remaining[0].points[0]);\n    for (let i = 1; i < remaining.length; i++) {\n      const dist = lastEnd.distanceTo(remaining[i].points[0]);\n      if (dist < nearestDist) {\n        nearestDist = dist;\n        nearestIdx = i;\n      }\n    }\n    ordered.push(remaining.splice(nearestIdx, 1)[0]);\n  }\n  return ordered;\n}\n\n/** Measure straight line distance between two points in mm. */\nexport function measureDistance(a: THREE.Vector3, b: THREE.Vector3): number {\n  return a.distanceTo(b);\n}\n\n/**\n * Measure angle ABC (in degrees) with B as vertex.\n */\nexport function measureAngle(\n  a: THREE.Vector3,\n  b: THREE.Vector3,\n  c: THREE.Vector3\n): number {\n  const v1 = new THREE.Vector3().subVectors(a, b).normalize();\n  const v2 = new THREE.Vector3().subVectors(c, b).normalize();\n  return (v1.angleTo(v2) * 180) / Math.PI;\n}\n\n"
+  },
+  {
+    "filename": "GCodeExporter.test.jsx",
+    "full_content": "import { render, screen, fireEvent } from '@testing-library/react';\nimport GCodeExporter from './src/GCodeExporter';\n\nbeforeEach(() => {\n  global.fetch = jest.fn((url) => {\n    if (url === '/export') {\n      return Promise.resolve({ json: () => Promise.resolve({ gcode: 'G1 X0 Y0' }) });\n    }\n    if (url === '/send') {\n      return Promise.resolve({ json: () => Promise.resolve({ ok: true }) });\n    }\n    // /ports or /log\n    return Promise.resolve({ json: () => Promise.resolve(['/dev/ttyUSB0']) });\n  });\n});\n\ntest('exports and sends gcode', async () => {\n  render(<GCodeExporter />);\n  fireEvent.change(screen.getByPlaceholderText(/Toolpath JSON/i), {\n    target: { value: '[{\"x\":0,\"y\":0}]' }\n  });\n  fireEvent.change(screen.getByPlaceholderText(/File name/i), {\n    target: { value: 'demo' }\n  });\n  fireEvent.click(screen.getByText('Generate G-code'));\n  expect(global.fetch).toHaveBeenCalledWith('/ports');\n  expect(global.fetch).toHaveBeenCalledWith('/log', expect.any(Object));\n  expect(global.fetch).toHaveBeenCalledWith('/export', expect.any(Object));\n  await screen.findByText(/G1 X0 Y0/);\n  fireEvent.click(screen.getByText('Refresh'));\n  expect(global.fetch).toHaveBeenCalledWith('/ports');\n  fireEvent.click(screen.getByText('Send to Machine'));\n  expect(global.fetch).toHaveBeenCalledWith('/send', expect.any(Object));\n});\n"
+  },
+  {
+    "filename": "BugReportForm.jsx",
+    "full_content": "import React, { useState } from 'react';\nimport log from './logger';\n\n/**\n * Allow users to submit bug reports or suggestions.\n */\nexport default function BugReportForm() {\n  const [text, setText] = useState('');\n  const send = () => {\n    const msg = text.trim();\n    if (!msg) return;\n    log(`bug report: ${msg}`);\n    alert('Report submitted. Thanks!');\n    setText('');\n  };\n  return (\n    <div className=\"p-2 space-y-2\">\n      <textarea\n        value={text}\n        onChange={e => setText(e.target.value)}\n        className=\"w-full p-1 text-black rounded\"\n        placeholder=\"Describe the issue\"\n        data-testid=\"bug-input\"\n      />\n      <button\n        onClick={send}\n        className=\"bg-red-600 text-white px-3 py-1 rounded\"\n        data-testid=\"bug-send\"\n      >\n        Submit Bug Report\n      </button>\n    </div>\n  );\n}\n"
+  },
+  {
+    "filename": "SetupWizard.jsx",
+    "full_content": "import React, { useState } from 'react';\nimport log from './logger';\n\n/**\n * Step-by-step wizard guiding a new user through setup.\n * Steps: 1) import design, 2) select material, 3) choose tool,\n * 4) set machine, 5) preview and export G-code.\n * Actions are logged to logs/central.log.\n */\nexport default function SetupWizard({ gcodeLines = [] }) {\n  const [step, setStep] = useState(1);\n  const [design, setDesign] = useState(null);\n  const [material, setMaterial] = useState('Plywood');\n  const [tool, setTool] = useState('Flat 3mm');\n  const [machine, setMachine] = useState('GRBL Small');\n\n  const next = () => setStep((s) => Math.min(s + 1, 5));\n  const back = () => setStep((s) => Math.max(s - 1, 1));\n\n  const handleFile = (e) => {\n    const f = e.target.files[0];\n    if (f) {\n      setDesign(f);\n      log(`design imported: ${f.name}`);\n    }\n  };\n\n  const exportGcode = () => {\n    const blob = new Blob([gcodeLines.join('\\n')], { type: 'text/plain' });\n    const url = URL.createObjectURL(blob);\n    const link = document.createElement('a');\n    link.href = url;\n    link.download = 'output.gcode';\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n    URL.revokeObjectURL(url);\n    log('wizard export gcode');\n  };\n\n  const progress = ((step - 1) / 4) * 100;\n\n  return (\n    <div className=\"max-w-lg mx-auto p-4 space-y-4\">\n      {/* Progress bar */}\n      <div className=\"h-2 bg-gray-200 rounded\">\n        <div\n          className=\"h-2 bg-blue-600 rounded\"\n          style={{ width: `${progress}%` }}\n          data-testid=\"progress\"\n        />\n      </div>\n      {step === 1 && (\n        <div className=\"space-y-2\">\n          <p className=\"font-medium\">Import design (SVG or STL)</p>\n          <input\n            type=\"file\"\n            accept=\".svg,.stl\"\n            onChange={handleFile}\n            data-testid=\"design-input\"\n          />\n          {design && <p data-testid=\"design-name\">{design.name}</p>}\n        </div>\n      )}\n      {step === 2 && (\n        <div className=\"space-y-2\">\n          <label className=\"block font-medium mb-1\">Select material</label>\n          <select\n            value={material}\n            onChange={(e) => {\n              setMaterial(e.target.value);\n              log(`wizard material: ${e.target.value}`);\n            }}\n            className=\"border rounded p-2 w-full\"\n            data-testid=\"material-select\"\n          >\n            {['Plywood', 'MDF', 'Aluminum', 'Acrylic'].map((m) => (\n              <option key={m} value={m}>{m}</option>\n            ))}\n          </select>\n        </div>\n      )}\n      {step === 3 && (\n        <div className=\"space-y-2\">\n          <label className=\"block font-medium mb-1\">Choose tool</label>\n          <select\n            value={tool}\n            onChange={(e) => {\n              setTool(e.target.value);\n              log(`wizard tool: ${e.target.value}`);\n            }}\n            className=\"border rounded p-2 w-full\"\n            data-testid=\"tool-select\"\n          >\n            {['Flat 3mm', 'Ball 2mm', 'V-bit 60deg'].map((t) => (\n              <option key={t} value={t}>{t}</option>\n            ))}\n          </select>\n        </div>\n      )}\n      {step === 4 && (\n        <div className=\"space-y-2\">\n          <label className=\"block font-medium mb-1\">Machine</label>\n          <select\n            value={machine}\n            onChange={(e) => {\n              setMachine(e.target.value);\n              log(`wizard machine: ${e.target.value}`);\n            }}\n            className=\"border rounded p-2 w-full\"\n            data-testid=\"machine-select\"\n          >\n            {['GRBL Small', 'GRBL Large', 'Smoothieware'].map((m) => (\n              <option key={m} value={m}>{m}</option>\n            ))}\n          </select>\n        </div>\n      )}\n      {step === 5 && (\n        <div className=\"space-y-2\" data-testid=\"summary\">\n          <p className=\"font-medium\">Preview</p>\n          <ul className=\"text-sm list-disc list-inside\">\n            <li>Design: {design ? design.name : 'n/a'}</li>\n            <li>Material: {material}</li>\n            <li>Tool: {tool}</li>\n            <li>Machine: {machine}</li>\n          </ul>\n          <pre className=\"border p-2 overflow-auto text-xs h-24\">\n{gcodeLines.join('\\n')}\n          </pre>\n          <button\n            onClick={exportGcode}\n            className=\"bg-green-600 text-white px-3 py-1 rounded hover:bg-green-700\"\n            data-testid=\"export-btn\"\n          >\n            Export G-code\n          </button>\n        </div>\n      )}\n      <div className=\"flex justify-between pt-4\">\n        <button\n          onClick={back}\n          disabled={step === 1}\n          className=\"px-3 py-1 rounded border disabled:opacity-50\"\n        >\n          Back\n        </button>\n        <button\n          onClick={next}\n          disabled={step === 5 || (step === 1 && !design)}\n          className=\"px-3 py-1 rounded bg-blue-600 text-white disabled:opacity-50\"\n          data-testid=\"next-btn\"\n        >\n          Next\n        </button>\n      </div>\n    </div>\n  );\n}\n"
+  },
+  {
+    "filename": "MaterialSelector.jsx",
+    "full_content": "import React, { useState } from 'react';\nimport log from './logger';\n\n// Predefined materials with suggested spindle speeds and feedrates\nconst MATERIAL_DATA = {\n  Plywood: { speed: 18000, feed: 1000 },\n  MDF: { speed: 16000, feed: 900 },\n  Aluminum: { speed: 12000, feed: 300 },\n  Acrylic: { speed: 14000, feed: 500 },\n};\n\nconst MATERIALS = [...Object.keys(MATERIAL_DATA), 'Custom'];\n\n/**\n * Dropdown to select material and display recommended spindle speed\n * and feedrate. Selecting \"Custom\" reveals an input for a custom\n * material name. All selections are logged to logs/central.log.\n */\nexport default function MaterialSelector() {\n  const [material, setMaterial] = useState('Plywood');\n  const [customName, setCustomName] = useState('');\n\n  const handleChange = (e) => {\n    const value = e.target.value;\n    setMaterial(value);\n    log(`Material selected: ${value}`);\n  };\n\n  const info = MATERIAL_DATA[material] || { speed: 'N/A', feed: 'N/A' };\n\n  return (\n    <div className=\"p-4 space-y-2 max-w-sm mx-auto\">\n      <label className=\"block font-medium mb-1\">Material</label>\n      <select\n        value={material}\n        onChange={handleChange}\n        className=\"border rounded p-2 w-full\"\n        data-testid=\"material-select\"\n      >\n        {MATERIALS.map((m) => (\n          <option key={m} value={m}>\n            {m}\n          </option>\n        ))}\n      </select>\n      {material === 'Custom' && (\n        <input\n          type=\"text\"\n          value={customName}\n          onChange={(e) => setCustomName(e.target.value)}\n          placeholder=\"Custom material\"\n          className=\"border rounded p-2 w-full\"\n          data-testid=\"custom-input\"\n        />\n      )}\n      <div className=\"pt-2\">\n        <p className=\"text-sm\">Spindle Speed: <span data-testid=\"speed\">{info.speed}</span> RPM</p>\n        <p className=\"text-sm\">Feedrate: <span data-testid=\"feed\">{info.feed}</span> mm/min</p>\n      </div>\n    </div>\n  );\n}\n"
+  },
+  {
+    "filename": "ToolpathSimulator.test.jsx",
+    "full_content": "import React from 'react';\nimport { render, screen, fireEvent, act } from '@testing-library/react';\nimport ToolpathSimulator from './ToolpathSimulator';\njest.useFakeTimers();\njest.mock('./logger', () => jest.fn());\nimport log from './logger';\n\ntest('plays through points and logs', () => {\n  const gcode = 'G1 X0 Y0\\nG1 X1 Y0\\nG1 X1 Y1';\n  render(<ToolpathSimulator gcode={gcode} />);\n  fireEvent.click(screen.getByText('Play'));\n  act(() => {\n    jest.advanceTimersByTime(320);\n  });\n  expect(log).toHaveBeenCalledWith('simulation start');\n  expect(screen.getByTestId('coords').textContent).toContain('X1');\n});\n"
+  },
+  {
+    "filename": "CutStockSimulator.tsx",
+    "full_content": "import React, { useState, useEffect, useRef } from 'react';\nimport { Canvas } from '@react-three/fiber';\nimport { OrbitControls } from '@react-three/drei';\nimport * as THREE from 'three';\n// @ts-ignore\nimport { STLExporter } from 'three/examples/jsm/exporters/STLExporter.js';\n// @ts-ignore\nimport { BufferGeometryUtils } from 'three/examples/jsm/utils/BufferGeometryUtils.js';\nimport { saveAs } from 'file-saver';\nimport { ToolpathData } from './viewportUtils';\nimport log from './logger';\n\ninterface Voxel {\n  pos: THREE.Vector3;\n  visible: boolean;\n}\n\ninterface Props {\n  toolpaths: ToolpathData[];\n  stock: { x: number; y: number; z: number };\n  toolRadius?: number;\n  resolution?: number;\n}\n\n/**\n * Cut stock simulation using a simple voxel grid.\n * Removed voxels are hidden as the tool moves along the path.\n */\nexport default function CutStockSimulator({\n  toolpaths,\n  stock,\n  toolRadius = 2,\n  resolution = 20,\n}: Props) {\n  const [voxels, setVoxels] = useState<Voxel[]>([]);\n  const [index, setIndex] = useState(0);\n  const [running, setRunning] = useState(false);\n  const timerRef = useRef<NodeJS.Timeout | null>(null);\n\n  const stepX = stock.x / resolution;\n  const stepY = stock.y / resolution;\n  const stepZ = stock.z / Math.max(1, Math.floor(resolution / 2));\n\n  useEffect(() => {\n    const vox: Voxel[] = [];\n    for (let i = 0; i < resolution; i++) {\n      for (let j = 0; j < resolution; j++) {\n        for (let k = 0; k < Math.floor(resolution / 2); k++) {\n          vox.push({\n            pos: new THREE.Vector3(\n              -stock.x / 2 + stepX * i + stepX / 2,\n              -stock.y / 2 + stepY * j + stepY / 2,\n              -stock.z / 2 + stepZ * k + stepZ / 2,\n            ),\n            visible: true,\n          });\n        }\n      }\n    }\n    setVoxels(vox);\n  }, [stock.x, stock.y, stock.z, resolution, stepX, stepY, stepZ]);\n\n  const points = toolpaths.flatMap((tp) => tp.points);\n\n  function cutAtPoint(p: THREE.Vector3) {\n    setVoxels((vs) =>\n      vs.map((v) => {\n        if (!v.visible) return v;\n        if (v.pos.distanceTo(p) <= toolRadius) {\n          return { ...v, visible: false };\n        }\n        return v;\n      }),\n    );\n  }\n\n  useEffect(() => {\n    if (running) {\n      timerRef.current = setInterval(() => {\n        setIndex((i) => {\n          const next = Math.min(i + 1, points.length - 1);\n          const pt = points[next];\n          if (pt) cutAtPoint(pt);\n          if (next === points.length - 1) {\n            setRunning(false);\n            log('cut stock sim finished');\n          }\n          return next;\n        });\n      }, 200);\n    }\n    return () => {\n      if (timerRef.current) clearInterval(timerRef.current);\n    };\n  }, [running, points]);\n\n  const play = () => {\n    if (!running) {\n      log('cut stock sim start');\n      setRunning(true);\n    }\n  };\n  const pause = () => {\n    if (running) {\n      log('cut stock sim pause');\n      setRunning(false);\n    }\n  };\n\n  const exportStl = () => {\n    const boxGeom = new THREE.BoxGeometry(stepX, stepY, stepZ);\n    const geoms: THREE.BufferGeometry[] = [];\n    voxels.forEach((v) => {\n      if (v.visible) {\n        const g = boxGeom.clone();\n        g.translate(v.pos.x, v.pos.y, v.pos.z);\n        geoms.push(g);\n      }\n    });\n    if (geoms.length === 0) return;\n    const merged = BufferGeometryUtils.mergeBufferGeometries(geoms);\n    const mesh = new THREE.Mesh(merged);\n    const exporter = new STLExporter();\n    const stl = exporter.parse(mesh) as string;\n    const blob = new Blob([stl], { type: 'model/stl' });\n    saveAs(blob, 'cut_stock.stl');\n    log('cut stock STL exported');\n  };\n\n  return (\n    <div className=\"p-4 space-y-2\">\n      <Canvas style={{ height: 300 }}>\n        <ambientLight intensity={0.5} />\n        <directionalLight position={[5, 5, 5]} />\n        <group>\n          {voxels.map((v, i) => (\n            <mesh key={i} position={v.pos} visible={v.visible}>\n              <boxGeometry args={[stepX, stepY, stepZ]} />\n              <meshStandardMaterial\n                color={v.visible ? '#bbbbbb' : '#444444'}\n                transparent\n                opacity={0.8}\n              />\n            </mesh>\n          ))}\n        </group>\n        <OrbitControls />\n      </Canvas>\n      <div className=\"flex space-x-2\">\n        <button onClick={play} className=\"bg-green-600 text-white px-3 py-1 rounded\">\n          Play\n        </button>\n        <button onClick={pause} className=\"bg-yellow-600 text-white px-3 py-1 rounded\">\n          Pause\n        </button>\n        <button onClick={exportStl} className=\"bg-blue-600 text-white px-3 py-1 rounded\">\n          Export STL\n        </button>\n      </div>\n    </div>\n  );\n}\n"
+  },
+  {
+    "filename": "MachineMonitor.test.jsx",
+    "full_content": "import React from 'react';\nimport { render, screen } from '@testing-library/react';\nimport MachineMonitor from './MachineMonitor';\n\njest.useFakeTimers();\njest.mock('./logger', () => jest.fn());\nimport log from './logger';\n\ntest('monitor updates status periodically', () => {\n  render(<MachineMonitor />);\n  jest.advanceTimersByTime(1000);\n  expect(log).toHaveBeenCalled();\n  expect(screen.getByText(/X:/)).toBeInTheDocument();\n});\n"
+  },
+  {
+    "filename": "ToolpathTransform.jsx",
+    "full_content": "import React, { useState, useEffect } from 'react';\nimport log from './logger';\n\n/**\n * 2D toolpath transformation controls.\n * Rotates, scales and translates a toolpath.\n */\nexport default function ToolpathTransform({ onChange }) {\n  const [rotation, setRotation] = useState(0);\n  const [scale, setScale] = useState(100);\n  const [offsetX, setOffsetX] = useState(0);\n  const [offsetY, setOffsetY] = useState(0);\n\n  useEffect(() => {\n    const transform = { rotation, scale: scale / 100, x: offsetX, y: offsetY };\n    log(`transform updated: ${JSON.stringify(transform)}`);\n    if (onChange) onChange(transform);\n  }, [rotation, scale, offsetX, offsetY, onChange]);\n\n  const reset = () => {\n    setRotation(0);\n    setScale(100);\n    setOffsetX(0);\n    setOffsetY(0);\n  };\n\n  return (\n    <div className=\"space-y-4 p-4 max-w-sm mx-auto\">\n      <div>\n        <label className=\"block text-sm font-medium\" htmlFor=\"rotation\">Rotation ({rotation}Â°)</label>\n        <input\n          id=\"rotation\"\n          type=\"range\"\n          min=\"0\"\n          max=\"360\"\n          value={rotation}\n          onChange={(e) => setRotation(Number(e.target.value))}\n          className=\"w-full\"\n        />\n      </div>\n      <div>\n        <label className=\"block text-sm font-medium\" htmlFor=\"scale\">Scale ({scale}%)</label>\n        <input\n          id=\"scale\"\n          type=\"range\"\n          min=\"1\"\n          max=\"500\"\n          value={scale}\n          onChange={(e) => setScale(Number(e.target.value))}\n          className=\"w-full\"\n        />\n      </div>\n      <div className=\"flex space-x-2\">\n        <div className=\"flex-1\">\n          <label className=\"block text-sm font-medium\" htmlFor=\"offset-x\">X Offset (mm)</label>\n          <input\n            id=\"offset-x\"\n            type=\"number\"\n            value={offsetX}\n            onChange={(e) => setOffsetX(Number(e.target.value))}\n            className=\"w-full border rounded p-1\"\n          />\n        </div>\n        <div className=\"flex-1\">\n          <label className=\"block text-sm font-medium\" htmlFor=\"offset-y\">Y Offset (mm)</label>\n          <input\n            id=\"offset-y\"\n            type=\"number\"\n            value={offsetY}\n            onChange={(e) => setOffsetY(Number(e.target.value))}\n            className=\"w-full border rounded p-1\"\n          />\n        </div>\n      </div>\n      <button\n        className=\"bg-gray-300 text-gray-800 px-4 py-2 rounded hover:bg-gray-400\"\n        onClick={reset}\n      >\n        Reset Transform\n      </button>\n    </div>\n  );\n}\n"
+  },
+  {
+    "filename": "ToolpathRenderer.tsx",
+    "full_content": "import React, { useEffect, useRef, useState } from 'react';\nimport * as THREE from 'three';\nimport { Html } from '@react-three/drei';\nimport { ToolpathData, ToolpathType, Diagnostic, HEAD_COLORS, ToolHead } from './viewportUtils';\nimport log from './logger';\nconst isMobile = typeof window !== 'undefined' && window.innerWidth < 768;\n\ninterface ToolpathRendererProps {\n  toolpaths: ToolpathData[];\n  visible: Record<ToolpathType, boolean>;\n  headsVisible: Record<ToolHead, boolean>;\n  animating: boolean;\n  activeLayer: number;\n  activeSegment: number;\n  mode: 'layer' | 'segment';\n  diagnostics: boolean;\n  materialPreview?: boolean;\n  onFocus?: (pos: THREE.Vector3) => void;\n  simIndex?: number;\n  startIndices?: number[];\n}\n\nfunction DiagnosticMarker({ diag, onFocus }: { diag: Diagnostic; onFocus?: (p: THREE.Vector3) => void }) {\n  const [hover, setHover] = useState(false);\n  return (\n    <mesh\n      position={diag.position}\n      onPointerOver={() => setHover(true)}\n      onPointerOut={() => setHover(false)}\n      onClick={() => {\n        log(`diagnostic clicked: ${diag.message}`);\n        onFocus && onFocus(diag.position);\n      }}\n    >\n      <sphereGeometry args={[1, 8, 8]} />\n      <meshStandardMaterial color=\"red\" />\n      {hover && (\n        <Html distanceFactor={10} style={{ pointerEvents: 'none' }}>\n          <div className=\"bg-red-600 text-white text-xs px-1 rounded\">\n            {diag.message}\n          </div>\n        </Html>\n      )}\n    </mesh>\n  );\n}\n\nfunction HeadIcon({ head }: { head: ToolHead }) {\n  switch (head) {\n    case 'laser':\n      return (\n        <mesh>\n          <coneGeometry args={[2, 4, 8]} />\n          <meshStandardMaterial color={HEAD_COLORS.laser} />\n        </mesh>\n      );\n    case 'picker':\n      return (\n        <mesh>\n          <boxGeometry args={[2, 2, 2]} />\n          <meshStandardMaterial color={HEAD_COLORS.picker} />\n        </mesh>\n      );\n    default:\n      return (\n        <mesh>\n          <cylinderGeometry args={[1, 1, 4, 8]} />\n          <meshStandardMaterial color={HEAD_COLORS.spindle} />\n        </mesh>\n      );\n  }\n}\n\n/**\n * Render toolpaths with optional head animation.\n * Modular component so new toolheads can be added easily.\n */\nfunction ToolpathRenderer({\n  toolpaths,\n  visible,\n  headsVisible,\n  animating,\n  activeLayer,\n  activeSegment,\n  mode,\n  diagnostics,\n  materialPreview = false,\n  onFocus,\n  simIndex = -1,\n  startIndices = [],\n}: ToolpathRendererProps) {\n  const headRef = useRef<THREE.Mesh>(null);\n\n  // Animate a small sphere along the currently visible toolpath points\n  useEffect(() => {\n    if (!animating) return;\n    const pathPts = toolpaths\n      .filter((t, i) => {\n        if (!visible[t.type] || !headsVisible[t.head]) return false;\n        if (mode === 'segment') return i === activeSegment;\n        return true;\n      })\n      .flatMap((t) => {\n        const pts = mode === 'layer' ? t.layers[activeLayer] || [] : t.points;\n        const rots = mode === 'layer' ? t.rotationLayers?.[activeLayer] || [] : t.rotations;\n        return pts.map((p, idx) => ({ p, head: t.head, rot: rots[idx] || new THREE.Vector3() }));\n      });\n    if (!pathPts.length) return;\n    let i = 0;\n    const stepTime = isMobile ? 60 : 30;\n    const timer = setInterval(() => {\n      const { p, head, rot } = pathPts[i];\n      if (headRef.current) {\n        headRef.current.position.copy(p);\n        const mat = headRef.current.material as THREE.Material;\n        (mat as any).color = new THREE.Color(HEAD_COLORS[head]);\n        headRef.current.rotation.set(\n          THREE.MathUtils.degToRad(rot.x),\n          THREE.MathUtils.degToRad(rot.y),\n          THREE.MathUtils.degToRad(rot.z)\n        );\n      }\n      i += 1;\n      if (i >= pathPts.length) clearInterval(timer);\n    }, stepTime);\n    return () => clearInterval(timer);\n  }, [animating, toolpaths, visible, activeLayer, activeSegment, mode]);\n\n  // update head position on external simulation index\n  useEffect(() => {\n    if (simIndex < 0) return;\n    const allPoints = toolpaths.flatMap(tp => tp.points);\n    const allRots = toolpaths.flatMap(tp => tp.rotations);\n    const idx = Math.min(simIndex, allPoints.length - 1);\n    const pt = allPoints[idx];\n    const rot = allRots[idx] || new THREE.Vector3();\n    if (pt && headRef.current) {\n      headRef.current.position.copy(pt);\n      headRef.current.rotation.set(\n        THREE.MathUtils.degToRad(rot.x),\n        THREE.MathUtils.degToRad(rot.y),\n        THREE.MathUtils.degToRad(rot.z)\n      );\n    }\n  }, [simIndex, toolpaths]);\n\n  return (\n    <>\n      {toolpaths.map((tp, idx) => {\n        if (!visible[tp.type] || !headsVisible[tp.head]) return null;\n        const color = HEAD_COLORS[tp.head];\n        const start = startIndices[idx] || 0;\n        const done = Math.max(0, Math.min(simIndex - start + 1, tp.points.length));\n        return tp.layers.map((layerPts, li) => {\n          const layerStartIdx = tp.points.indexOf(layerPts[0]);\n          const layerEndIdx = layerStartIdx + layerPts.length;\n          const processed = Math.max(0, Math.min(done - layerStartIdx, layerPts.length));\n          const processedPts = layerPts.slice(0, processed);\n          const remainingPts = layerPts.slice(Math.max(processed - 1, 0));\n          const elems: JSX.Element[] = [];\n          if (processedPts.length > 1) {\n            const geom = new THREE.BufferGeometry().setFromPoints(processedPts);\n            elems.push(\n              <line key={`${idx}-${li}-done`} geometry={geom} material={new THREE.LineBasicMaterial({ color })} />\n            );\n          }\n          if (remainingPts.length > 1) {\n            const geomR = new THREE.BufferGeometry().setFromPoints(remainingPts);\n            elems.push(\n              <line\n                key={`${idx}-${li}-rem`}\n                geometry={geomR}\n                material={new THREE.LineBasicMaterial({ color, opacity: 0.2, transparent: true })}\n              />\n            );\n          }\n          return elems;\n        });\n      })}\n      {toolpaths.map((tp, idx) =>\n        visible[tp.type] && headsVisible[tp.head] ? (\n          <group key={`icon-${idx}`} position={tp.points[0]}>\n            <HeadIcon head={tp.head} />\n          </group>\n        ) : null\n      )}\n      {diagnostics &&\n        toolpaths.map((tp, ti) =>\n          tp.diagnostics\n            .filter((d) =>\n              mode === 'segment'\n                ? ti === activeSegment && visible[tp.type] && headsVisible[tp.head]\n                : d.layer === activeLayer && visible[tp.type] && headsVisible[tp.head]\n            )\n            .map((d, di) => (\n              <DiagnosticMarker\n                key={`diag-${ti}-${di}`}\n                diag={d}\n                onFocus={onFocus}\n              />\n            ))\n        )}\n      {animating && (\n        <mesh ref={headRef} data-testid=\"head\">\n          <sphereGeometry args={[2, 16, 16]} />\n          <meshStandardMaterial color=\"white\" />\n        </mesh>\n      )}\n    </>\n  );\n}\n\nexport default React.memo(ToolpathRenderer);"
+  },
+  {
+    "filename": "ResumeJobButton.test.jsx",
+    "full_content": "import React from 'react';\nimport { render, screen, fireEvent, waitFor } from '@testing-library/react';\nimport ResumeJobButton from './ResumeJobButton';\njest.mock('./logger', () => jest.fn());\nimport log from './logger';\n\nbeforeEach(() => {\n  global.fetch = jest.fn(() =>\n    Promise.resolve({ json: () => Promise.resolve({ line: 10 }) })\n  );\n});\n\ntest('shows resume info and logs on click', async () => {\n  const onResume = jest.fn();\n  render(<ResumeJobButton onResume={onResume} />);\n  await waitFor(() => screen.getByText(/Last line/));\n  fireEvent.click(screen.getByText('Resume interrupted job'));\n  expect(onResume).toHaveBeenCalledWith({ line: 10 });\n  expect(log).toHaveBeenCalledWith('resume job clicked');\n});\n"
+  },
+  {
+    "filename": "SettingsPanel.test.jsx",
+    "full_content": "import { render, screen, fireEvent } from '@testing-library/react';\nimport SettingsPanel from './src/SettingsPanel';\n\nbeforeEach(() => {\n  global.fetch = jest.fn(() => Promise.resolve());\n  localStorage.clear();\n});\n\ntest('saves settings to localStorage and logs', () => {\n  render(<SettingsPanel />);\n  fireEvent.change(screen.getByText('Light'), { target: { value: 'Dark' } });\n  fireEvent.change(screen.getByPlaceholderText('http://localhost:8000'), {\n    target: { value: 'http://api' }\n  });\n  fireEvent.click(screen.getByText('Save'));\n  expect(localStorage.getItem('theme')).toBe('Dark');\n  expect(localStorage.getItem('apiUrl')).toBe('http://api');\n  expect(global.fetch).toHaveBeenCalledWith('/log', expect.any(Object));\n  expect(screen.getByText('Settings saved')).toBeInTheDocument();\n});\n"
+  },
+  {
+    "filename": "SetupWizard.test.jsx",
+    "full_content": "import React from 'react';\nimport { render, screen, fireEvent } from '@testing-library/react';\nimport SetupWizard from './SetupWizard';\njest.mock('./logger', () => jest.fn());\nimport log from './logger';\n\ntest('wizard steps and export', () => {\n  const file = new File(['<svg></svg>'], 'design.svg', { type: 'image/svg+xml' });\n  render(<SetupWizard gcodeLines={['G1 X0 Y0']} />);\n  fireEvent.change(screen.getByTestId('design-input'), { target: { files: [file] } });\n  fireEvent.click(screen.getByTestId('next-btn')); // to step 2\n  fireEvent.click(screen.getByTestId('next-btn')); // to step 3\n  fireEvent.click(screen.getByTestId('next-btn')); // to step 4\n  fireEvent.click(screen.getByTestId('next-btn')); // to step 5\n  expect(screen.getByTestId('summary')).toBeInTheDocument();\n  fireEvent.click(screen.getByTestId('export-btn'));\n  expect(log).toHaveBeenCalledWith('wizard export gcode');\n});\n"
+  },
+  {
+    "filename": "WorkflowShare.jsx",
+    "full_content": "import React, { useRef } from 'react';\nimport { saveAs } from 'file-saver';\nimport log from './logger';\n\n/**\n * Allow exporting and importing workflows as JSON files.\n */\nexport default function WorkflowShare({ workflow = {}, onImport }) {\n  const inputRef = useRef(null);\n\n  const save = () => {\n    const blob = new Blob([JSON.stringify(workflow, null, 2)], { type: 'application/json' });\n    saveAs(blob, 'workflow.json');\n    log('export workflow');\n  };\n\n  const load = (e) => {\n    const file = e.target.files[0];\n    if (!file) return;\n    const reader = new FileReader();\n    reader.onload = () => {\n      try {\n        const data = JSON.parse(reader.result);\n        log('import workflow');\n        onImport && onImport(data);\n      } catch (err) {\n        log('failed import workflow', 'ERROR', err);\n      }\n    };\n    reader.readAsText(file);\n  };\n\n  return (\n    <div className=\"space-x-2 p-2\">\n      <button onClick={save} className=\"bg-green-600 text-white px-3 py-1 rounded\">Share Workflow</button>\n      <input ref={inputRef} data-testid=\"wf-input\" type=\"file\" accept=\"application/json\" onChange={load} className=\"hidden\" />\n      <button onClick={() => inputRef.current && inputRef.current.click()} className=\"bg-blue-600 text-white px-3 py-1 rounded\">Import Workflow</button>\n    </div>\n  );\n}\n"
+  },
+  {
+    "filename": "ProjectManager.test.jsx",
+    "full_content": "import React from 'react';\nimport { render, screen, fireEvent } from '@testing-library/react';\nimport ProjectManager from './ProjectManager';\njest.mock('./logger', () => jest.fn());\nimport log from './logger';\njest.mock('file-saver', () => ({ saveAs: jest.fn() }));\nimport { saveAs } from 'file-saver';\n\nglobal.FileReader = class {\n  readAsText() { this.result = '{\"toolpaths\": [1]}'; this.onload(); }\n};\n\ntest('saves and loads project data', () => {\n  const onLoad = jest.fn();\n  render(\n    <ProjectManager\n      toolpaths={[{ x: 0 }]} material=\"MDF\" machineProfile={{}}\n      settings={{ feed: 100 }} onLoad={onLoad}\n    />\n  );\n  fireEvent.click(screen.getByText('Save Project'));\n  expect(saveAs).toHaveBeenCalled();\n  fireEvent.change(screen.getByTestId('load-input'), { target: { files: [new File([''], 'proj.json', { type: 'application/json' })] } });\n  expect(log).toHaveBeenCalledWith('Project loaded: proj.json');\n  expect(onLoad).toHaveBeenCalledWith({ toolpaths: [1] });\n});\n"
+  },
+  {
+    "filename": "ProjectManager.jsx",
+    "full_content": "import React, { useRef, useState } from 'react';\nimport { saveAs } from 'file-saver';\nimport log from './logger';\n\n/**\n * ProjectManager allows saving the full CAM project to a JSON file\n * and loading it back later. It logs all actions to logs/central.log.\n */\nexport default function ProjectManager({\n  toolpaths = [],\n  material = '',\n  machineProfile = {},\n  settings = {},\n  onLoad,\n}) {\n  const inputRef = useRef(null);\n  const [error, setError] = useState('');\n\n  const saveProject = () => {\n    try {\n      const data = { toolpaths, material, machineProfile, settings };\n      const blob = new Blob([JSON.stringify(data, null, 2)], {\n        type: 'application/json',\n      });\n      saveAs(blob, 'cam_project.json');\n      setError('');\n      log('Project saved to cam_project.json');\n    } catch (err) {\n      setError('Failed to save project');\n      log(`Failed to save project: ${err.message}`);\n    }\n  };\n\n  const handleLoad = (e) => {\n    const file = e.target.files[0];\n    if (!file) return;\n    if (file.size > 10 * 1024 * 1024) {\n      setError('File too large');\n      log(`Project file too large: ${file.name}`);\n      return;\n    }\n    const reader = new FileReader();\n    reader.onerror = () => {\n      setError('Failed to read file');\n      log(`Failed to read project: ${file.name}`);\n    };\n    reader.onload = () => {\n      try {\n        const data = JSON.parse(reader.result);\n        setError('');\n        log(`Project loaded: ${file.name}`);\n        onLoad && onLoad(data);\n      } catch (err) {\n        setError('Corrupted project file');\n        log(`Failed to load project: ${err.message}`);\n      }\n    };\n    reader.readAsText(file);\n  };\n\n  return (\n    <div className=\"p-4 space-x-2\">\n      <button\n        onClick={saveProject}\n        className=\"bg-green-600 text-white px-3 py-1 rounded hover:bg-green-700\"\n      >\n        Save Project\n      </button>\n      <input\n        type=\"file\"\n        accept=\"application/json\"\n        ref={inputRef}\n        onChange={handleLoad}\n        className=\"hidden\"\n        data-testid=\"load-input\"\n      />\n      <button\n        onClick={() => inputRef.current && inputRef.current.click()}\n        className=\"bg-blue-600 text-white px-3 py-1 rounded hover:bg-blue-700\"\n        data-testid=\"load-button\"\n      >\n        Load Project\n      </button>\n      {error && (\n        <p className=\"text-red-600 mt-2\" data-testid=\"pm-error\">{error}</p>\n      )}\n    </div>\n  );\n}\n"
+  },
+  {
+    "filename": "RobotArmPanel.test.jsx",
+    "full_content": "import React from 'react';\nimport { render, screen, fireEvent, act } from '@testing-library/react';\nimport RobotArmPanel from './RobotArmPanel';\njest.mock('./logger', () => jest.fn());\nimport log from './logger';\n\nbeforeEach(() => {\n  jest.useFakeTimers();\n  localStorage.clear();\n});\n\nafterEach(() => {\n  jest.useRealTimers();\n});\n\ntest('toggle robot mode and update profile', () => {\n  render(<RobotArmPanel />);\n  const toggle = screen.getByTestId('robot-toggle');\n  fireEvent.click(toggle);\n  expect(log).toHaveBeenCalledWith('robot arm mode -> true');\n  expect(localStorage.getItem('robotArmEnabled')).toBe('true');\n\n  const select = screen.getByTestId('profile-select');\n  expect(select.value).toBe('0');\n  fireEvent.change(select, { target: { value: '0' } });\n});\n\ntest('diagnostics show warnings', () => {\n  render(<RobotArmPanel />);\n  fireEvent.click(screen.getByTestId('robot-toggle'));\n  act(() => {\n    jest.advanceTimersByTime(1100);\n  });\n  const j0 = screen.getByTestId('joint-0');\n  expect(j0.textContent).toMatch(/J1:/);\n});\n\ntest('dry run updates status and logs', () => {\n  render(<RobotArmPanel />);\n  fireEvent.click(screen.getByTestId('robot-toggle'));\n  const dry = screen.getByTestId('dry-toggle');\n  fireEvent.click(dry);\n  act(() => {\n    jest.advanceTimersByTime(1100);\n  });\n  expect(screen.getByText(/Status:/).textContent).toMatch(/Running/);\n  expect(log).toHaveBeenCalledWith(expect.stringContaining('warnings'), 'WARNING');\n});\n\ntest('save profile stores data', () => {\n  render(<RobotArmPanel />);\n  fireEvent.change(screen.getByTestId('len-0'), { target: { value: '150' } });\n  fireEvent.click(screen.getByTestId('save-btn'));\n  expect(localStorage.getItem('robotArmProfile')).toMatch(/150/);\n});\n\ntest('stream button logs action', async () => {\n  render(<RobotArmPanel />);\n  fireEvent.click(screen.getByTestId('stream-btn'));\n  expect(log).toHaveBeenCalledWith('robotic stream started');\n});\n\ntest('bug report form logs message', () => {\n  render(<RobotArmPanel />);\n  fireEvent.change(screen.getByTestId('bug-input'), { target: { value: 'oops' } });\n  fireEvent.click(screen.getByTestId('bug-send'));\n  expect(log).toHaveBeenCalledWith('bug report: oops');\n});\n"
+  },
+  {
+    "filename": "HapticToolpathEditor.test.jsx",
+    "full_content": "import React from 'react';\nimport { render, fireEvent } from '@testing-library/react';\nimport HapticToolpathEditor from './HapticToolpathEditor';\njest.mock('./logger', () => jest.fn());\nimport log from './logger';\n\ntest('draws path and logs export', () => {\n  const { container, getByText } = render(<HapticToolpathEditor width={200} height={200} />);\n  const svg = container.querySelector('svg');\n  fireEvent.pointerDown(svg, { clientX: 10, clientY: 10 });\n  fireEvent.pointerMove(svg, { clientX: 50, clientY: 50 });\n  fireEvent.pointerUp(svg);\n  expect(container.querySelectorAll('polyline').length).toBe(1);\n  fireEvent.click(getByText('Export as G-code'));\n  expect(log).toHaveBeenCalledWith('export G-code');\n});\n"
+  },
+  {
+    "filename": "AIAnalyzer.test.jsx",
+    "full_content": "import { render, screen, fireEvent } from '@testing-library/react';\nimport AIAnalyzer from './src/AIAnalyzer';\n\nbeforeEach(() => {\n  global.fetch = jest.fn(() => Promise.resolve({ json: () => Promise.resolve({ ok: true }) }));\n});\n\ntest('posts optimize request on run', async () => {\n  render(<AIAnalyzer />);\n  fireEvent.click(screen.getByText('Run Analysis'));\n  expect(global.fetch).toHaveBeenCalledWith('/log', expect.any(Object));\n  expect(global.fetch).toHaveBeenCalledWith('/optimize', expect.any(Object));\n});\n"
+  },
+  {
+    "filename": "WebcamDetector.jsx",
+    "full_content": "import React, { useRef, useState, useEffect } from 'react';\nimport log from './logger';\n\n/**\n * Webcam feed with mock object detection. Shows warning when a person or hand is detected.\n */\nexport default function WebcamDetector({ testDetection = null }) {\n  const videoRef = useRef(null);\n  const streamRef = useRef(null);\n  const [active, setActive] = useState(false);\n  const [warning, setWarning] = useState(false);\n\n  // start webcam and mock detection\n  const start = async () => {\n    if (active) return;\n    log('Start detection clicked');\n    try {\n      // open webcam\n      streamRef.current = await navigator.mediaDevices.getUserMedia({ video: true });\n      videoRef.current.srcObject = streamRef.current;\n      await videoRef.current.play();\n      log('Webcam started');\n      setActive(true);\n      // mock detection delay\n      setTimeout(() => {\n        const detected = testDetection || 'person';\n        if (detected === 'person' || detected === 'hand') {\n          log(`Warning: ${detected} detected`);\n          setWarning(true);\n        }\n      }, 1000);\n    } catch (err) {\n      console.error('Failed to access webcam:', err);\n    }\n  };\n\n  // cleanup stream on unmount\n  useEffect(() => {\n    return () => {\n      if (streamRef.current) {\n        streamRef.current.getTracks().forEach((t) => t.stop());\n      }\n    };\n  }, []);\n\n  return (\n    <div className=\"p-4 space-y-2 max-w-md mx-auto\">\n      <video ref={videoRef} className=\"w-full h-48 bg-black\" data-testid=\"video\" />\n      <button\n        onClick={start}\n        disabled={active}\n        className=\"bg-blue-600 text-white px-3 py-1 rounded hover:bg-blue-700 disabled:opacity-50\"\n      >\n        Start Object Detection\n      </button>\n      {warning && (\n        <div\n          className=\"bg-red-600 text-white p-2 mt-2 font-bold\"\n          data-testid=\"warning\"\n        >\n          HAND DETECTED! EMERGENCY STOP!\n        </div>\n      )}\n    </div>\n  );\n}\n"
+  },
+  {
+    "filename": "CutStockSimulator.test.tsx",
+    "full_content": "import React from 'react';\nimport { render, screen, fireEvent } from '@testing-library/react';\nimport CutStockSimulator from './CutStockSimulator';\nimport * as THREE from 'three';\njest.mock('./logger', () => jest.fn());\nimport log from './logger';\njest.mock('file-saver', () => ({ saveAs: jest.fn() }));\nimport { saveAs } from 'file-saver';\n\ntest('logs start and export events', () => {\n  const tp = {\n    object: new THREE.Line(new THREE.BufferGeometry(), new THREE.LineBasicMaterial()),\n    points: [new THREE.Vector3(), new THREE.Vector3(1,0,0)],\n    type: 'milling',\n    head: 'spindle',\n    bbox: new THREE.Box3(),\n    name: 'p',\n    layers: [[new THREE.Vector3(), new THREE.Vector3(1,0,0)]],\n    diagnostics: []\n  };\n  render(<CutStockSimulator toolpaths={[tp]} stock={{x:10,y:10,z:5}} toolRadius={1} />);\n  fireEvent.click(screen.getByText('Play'));\n  expect(log).toHaveBeenCalledWith('cut stock sim start');\n  fireEvent.click(screen.getByText('Export STL'));\n  expect(saveAs).toHaveBeenCalled();\n  expect(log).toHaveBeenCalledWith('cut stock STL exported');\n});\n"
+  },
+  {
+    "filename": "CuttingStrategySelector.jsx",
+    "full_content": "import React, { useState } from 'react';\nimport log from './logger';\n\n/**\n * Radio group to choose a cutting strategy. Each option includes\n * a small icon and description. Selection is logged to logs/central.log.\n */\nexport default function CuttingStrategySelector({ onChange }) {\n  const [strategy, setStrategy] = useState('climb');\n\n  const OPTIONS = [\n    { value: 'climb', label: 'Climb milling', icon: 'â»', desc: 'Tool rotates with feed' },\n    { value: 'conventional', label: 'Conventional milling', icon: 'âº', desc: 'Tool rotates against feed' },\n    { value: 'spiral', label: 'Spiral pocket', icon: 'ð', desc: 'Continuous spiral inwards' },\n    { value: 'adaptive', label: 'Adaptive (AI)', icon: 'ð¤', desc: 'AI adjusts cutting parameters' },\n  ];\n\n  const handleChange = (e) => {\n    const value = e.target.value;\n    setStrategy(value);\n    log(`Cutting strategy: ${value}`);\n    if (onChange) onChange(value);\n  };\n\n  return (\n    <div className=\"p-4 space-y-2\" data-testid=\"strategy-selector\">\n      {OPTIONS.map((opt) => (\n        <label key={opt.value} className=\"flex items-start space-x-2\">\n          <input\n            type=\"radio\"\n            name=\"cutting\"\n            value={opt.value}\n            checked={strategy === opt.value}\n            onChange={handleChange}\n            className=\"mt-1\"\n            data-testid={`radio-${opt.value}`}\n          />\n          <span className=\"text-xl\">{opt.icon}</span>\n          <span>\n            <span className=\"font-medium\">{opt.label}</span>\n            <span className=\"block text-sm text-gray-600\">{opt.desc}</span>\n          </span>\n        </label>\n      ))}\n    </div>\n  );\n}\n"
+  },
+  {
+    "filename": "MachineProfileSelector.jsx",
+    "full_content": "import React, { useState, useEffect } from 'react';\nimport log from './logger';\n\n/**\n * Select CNC machine profile and show its parameters.\n * Predefined profiles are read-only while \"Custom\" allows editing\n * of axis limits, max feedrate and acceleration. Selection is saved\n * to localStorage under the key \"machineProfile\" and each change is\n * logged to logs/central.log.\n */\nexport default function MachineProfileSelector() {\n  const DEFAULT_CUSTOM = {\n    axis: { X: 300, Y: 300, Z: 50 },\n    feedrate: 1500,\n    acceleration: 800,\n  };\n\n  const PRESETS = {\n    'GRBL Small': {\n      axis: { X: 300, Y: 300, Z: 50 },\n      feedrate: 1500,\n      acceleration: 800,\n    },\n    'GRBL Large': {\n      axis: { X: 600, Y: 600, Z: 100 },\n      feedrate: 2500,\n      acceleration: 1200,\n    },\n    Smoothieware: {\n      axis: { X: 500, Y: 500, Z: 80 },\n      feedrate: 3000,\n      acceleration: 1500,\n    },\n  };\n\n  const stored = localStorage.getItem('machineProfile');\n  const initial = stored ? JSON.parse(stored) : { name: 'GRBL Small', config: PRESETS['GRBL Small'] };\n\n  const [profile, setProfile] = useState(initial.name);\n  const [config, setConfig] = useState(initial.name === 'Custom' ? initial.config : PRESETS[initial.name] || DEFAULT_CUSTOM);\n\n  useEffect(() => {\n    localStorage.setItem('machineProfile', JSON.stringify({ name: profile, config }));\n  }, [profile, config]);\n\n  const handleSelect = (e) => {\n    const name = e.target.value;\n    setProfile(name);\n    if (name !== 'Custom') {\n      setConfig(PRESETS[name]);\n    }\n    log(`Machine profile selected: ${name}`);\n  };\n\n  const handleConfigChange = (field, axis) => (e) => {\n    const value = parseFloat(e.target.value);\n    setConfig((prev) => {\n      const updated = { ...prev };\n      if (axis) {\n        updated.axis = { ...prev.axis, [axis]: value };\n      } else {\n        updated[field] = value;\n      }\n      return updated;\n    });\n  };\n\n  const renderInput = (label, value, onChange) => (\n    <div className=\"flex items-center space-x-2\">\n      <label className=\"w-32\">{label}</label>\n      {profile === 'Custom' ? (\n        <input\n          type=\"number\"\n          value={value}\n          onChange={onChange}\n          className=\"border rounded p-1 w-24\"\n          data-testid={`input-${label}`}\n        />\n      ) : (\n        <span data-testid={`value-${label}`}>{value}</span>\n      )}\n    </div>\n  );\n\n  return (\n    <div className=\"p-4 space-y-4 max-w-sm mx-auto\">\n      <label className=\"block font-medium mb-1\">Machine Profile</label>\n      <select\n        value={profile}\n        onChange={handleSelect}\n        className=\"border rounded p-2 w-full\"\n        data-testid=\"profile-select\"\n      >\n        {['GRBL Small', 'GRBL Large', 'Smoothieware', 'Custom'].map((name) => (\n          <option key={name} value={name}>{name}</option>\n        ))}\n      </select>\n\n      {renderInput('X limit', config.axis.X, handleConfigChange('axis', 'X'))}\n      {renderInput('Y limit', config.axis.Y, handleConfigChange('axis', 'Y'))}\n      {renderInput('Z limit', config.axis.Z, handleConfigChange('axis', 'Z'))}\n      {renderInput('Feedrate', config.feedrate, handleConfigChange('feedrate'))}\n      {renderInput('Acceleration', config.acceleration, handleConfigChange('acceleration'))}\n    </div>\n  );\n}\n"
+  },
+  {
+    "filename": "FeedbackForm.test.jsx",
+    "full_content": "import React from 'react';\nimport { render, screen, fireEvent } from '@testing-library/react';\nimport FeedbackForm from './FeedbackForm';\njest.mock('./logger', () => jest.fn());\nimport log from './logger';\n\ntest('logs feedback on submit', () => {\n  render(<FeedbackForm />);\n  fireEvent.change(screen.getByTestId('feedback-input'), { target: { value: 'hi' } });\n  fireEvent.click(screen.getByTestId('feedback-send'));\n  expect(log).toHaveBeenCalledWith('feedback: hi');\n});\n"
+  },
+  {
+    "filename": "index.html",
+    "full_content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n    <title>CAM Dashboard</title>\n  </head>\n  <body class=\"bg-gray-50\">\n    <div id=\"root\"></div>\n    <script type=\"module\" src=\"/src/index.jsx\"></script>\n  </body>\n</html>\n"
+  },
+  {
+    "filename": "VectorEditor.jsx",
+    "full_content": "import React, { useState, useRef } from 'react';\nimport FileUploader from './FileUploader';\nimport ToolpathTransform from './ToolpathTransform';\nimport log from './logger';\n\n/**\n * Advanced Vector Editor\n * ----------------------\n * Supports basic node and path editing with a layer system. This is a light\n * frontâend mock so vector operations are simplified, but the structure allows\n * future extension. All actions are appended to `logs/central.log`.\n */\nexport default function VectorEditor() {\n  const [file, setFile] = useState(null);\n  const [layers, setLayers] = useState([]); // {id,name,visible,locked,paths:[]}\n  const [selectedLayer, setSelectedLayer] = useState(null);\n  const [selectedPath, setSelectedPath] = useState(null);\n  const [selectedNode, setSelectedNode] = useState(null); // {pathId,index}\n  const [history, setHistory] = useState([]);\n  const [future, setFuture] = useState([]);\n  const svgRef = useRef(null);\n  const [threshold, setThreshold] = useState(128);\n  const [mode, setMode] = useState('outline'); // outline or centerline\n\n  const pushHistory = (newLayers) => {\n    setHistory((h) => [...h, JSON.parse(JSON.stringify(layers))]);\n    setFuture([]);\n    setLayers(newLayers);\n  };\n\n  // convert points to SVG path string\n  const makeD = (pts, closed) => {\n    if (!pts.length) return '';\n    const start = `M${pts[0].x} ${pts[0].y}`;\n    const rest = pts.slice(1).map((p) => `L${p.x} ${p.y}`).join(' ');\n    return closed ? `${start} ${rest} Z` : `${start} ${rest}`;\n  };\n\n  // simple rectangle vectorization as placeholder\n  const loadOpenCV = () =>\n    new Promise((resolve) => {\n      if (window.cv) return resolve();\n      const script = document.createElement('script');\n      script.src =\n        'https://docs.opencv.org/4.x/opencv.js';\n      script.onload = resolve;\n      document.body.appendChild(script);\n    });\n\n  const vectorize = async () => {\n    if (!file) return;\n    await loadOpenCV();\n    const img = new Image();\n    img.onload = () => {\n      const canvas = document.createElement('canvas');\n      canvas.width = img.width;\n      canvas.height = img.height;\n      const ctx = canvas.getContext('2d');\n      ctx.drawImage(img, 0, 0);\n      const src = cv.imread(canvas);\n      cv.cvtColor(src, src, cv.COLOR_RGBA2GRAY, 0);\n      cv.threshold(src, src, threshold, 255, cv.THRESH_BINARY);\n      const contours = new cv.MatVector();\n      const hierarchy = new cv.Mat();\n      if (mode === 'outline') {\n        cv.findContours(\n          src,\n          contours,\n          hierarchy,\n          cv.RETR_EXTERNAL,\n          cv.CHAIN_APPROX_SIMPLE\n        );\n      } else {\n        cv.Canny(src, src, 50, 150, 3, false);\n        cv.findContours(src, contours, hierarchy, cv.RETR_LIST, cv.CHAIN_APPROX_NONE);\n      }\n      const newPaths = [];\n      for (let i = 0; i < contours.size(); i++) {\n        const cnt = contours.get(i);\n        const pts = [];\n        for (let j = 0; j < cnt.data32S.length / 2; j++) {\n          pts.push({ x: cnt.data32S[j * 2], y: cnt.data32S[j * 2 + 1] });\n        }\n        cnt.delete();\n        newPaths.push({\n          id: Date.now() + i,\n          points: pts,\n          closed: true,\n          tx: 0,\n          ty: 0,\n          rot: 0,\n          scale: 1,\n          visible: true,\n        });\n      }\n      src.delete();\n      contours.delete();\n      hierarchy.delete();\n      const layer = {\n        id: Date.now(),\n        name: file.name,\n        visible: true,\n        locked: false,\n        paths: newPaths,\n      };\n      pushHistory([...layers, layer]);\n      setSelectedLayer(layer.id);\n      if (newPaths.length) setSelectedPath(newPaths[0].id);\n      log(`vectorized ${file.name} (${mode})`);\n    };\n    img.src = URL.createObjectURL(file);\n  };\n\n  const findLayer = (layerId) => layers.find((l) => l.id === layerId);\n  const findPath = (layer, pathId) => layer.paths.find((p) => p.id === pathId);\n\n  const updatePath = (layerId, pathId, updater) => {\n    const newLayers = layers.map((l) => {\n      if (l.id !== layerId) return l;\n      const newPaths = l.paths.map((p) =>\n        p.id === pathId ? updater({ ...p }) : p\n      );\n      return { ...l, paths: newPaths };\n    });\n    pushHistory(newLayers);\n  };\n\n  const updateSelectedTransform = (t) => {\n    if (!selectedLayer || !selectedPath) return;\n    updatePath(selectedLayer, selectedPath, (p) => ({\n      ...p,\n      tx: t.x,\n      ty: t.y,\n      rot: t.rotation,\n      scale: t.scale,\n    }));\n    log(`transform path ${selectedPath}`);\n  };\n\n  const duplicatePath = () => {\n    if (!selectedLayer || !selectedPath) return;\n    const layer = findLayer(selectedLayer);\n    const path = findPath(layer, selectedPath);\n    const copy = { ...path, id: Date.now() };\n    const newLayers = layers.map((l) =>\n      l.id === selectedLayer ? { ...l, paths: [...l.paths, copy] } : l\n    );\n    pushHistory(newLayers);\n    log(`duplicate path ${selectedPath}`);\n  };\n\n  const mirrorPath = () => {\n    if (!selectedLayer || !selectedPath) return;\n    updatePath(selectedLayer, selectedPath, (p) => {\n      const pts = p.points.map((pt) => ({ x: -pt.x, y: pt.y }));\n      return { ...p, points: pts };\n    });\n    log(`mirror path ${selectedPath}`);\n  };\n\n  const addNodeAt = (x, y) => {\n    if (!selectedLayer || !selectedPath) return;\n    updatePath(selectedLayer, selectedPath, (p) => {\n      const pts = [...p.points, { x, y }];\n      return { ...p, points: pts };\n    });\n    log(`add node to ${selectedPath}`);\n  };\n\n  const deleteNode = () => {\n    if (!selectedNode) return;\n    const { pathId, index } = selectedNode;\n    updatePath(selectedLayer, pathId, (p) => {\n      const pts = p.points.filter((_, i) => i !== index);\n      return { ...p, points: pts };\n    });\n    setSelectedNode(null);\n    log(`delete node ${index} from ${pathId}`);\n  };\n\n  const moveNode = (index, dx, dy) => {\n    updatePath(selectedLayer, selectedPath, (p) => {\n      const pts = p.points.map((pt, i) =>\n        i === index ? { x: pt.x + dx, y: pt.y + dy } : pt\n      );\n      return { ...p, points: pts };\n    });\n  };\n\n  const undo = () => {\n    setHistory((h) => {\n      if (!h.length) return h;\n      const prev = h[h.length - 1];\n      setFuture((f) => [JSON.parse(JSON.stringify(layers)), ...f]);\n      setLayers(prev);\n      return h.slice(0, -1);\n    });\n    log('undo');\n  };\n\n  const redo = () => {\n    setFuture((f) => {\n      if (!f.length) return f;\n      const next = f[0];\n      setHistory((h) => [...h, JSON.parse(JSON.stringify(layers))]);\n      setLayers(next);\n      return f.slice(1);\n    });\n    log('redo');\n  };\n\n  const deletePath = () => {\n    if (!selectedLayer || !selectedPath) return;\n    const newLayers = layers.map((l) =>\n      l.id === selectedLayer\n        ? { ...l, paths: l.paths.filter((p) => p.id !== selectedPath) }\n        : l\n    );\n    pushHistory(newLayers);\n    setSelectedPath(null);\n    log(`delete path ${selectedPath}`);\n  };\n\n  // derived visible paths\n  const visiblePaths = layers.flatMap((layer) =>\n    layer.visible\n      ? layer.paths\n          .filter((p) => p.visible)\n          .map((p) => ({ ...p, layerId: layer.id }))\n      : []\n  );\n\n  // handle simple node drag\n  const handleMouseDown = (pathId, index, e) => {\n    e.stopPropagation();\n    setSelectedNode({ pathId, index });\n  };\n\n  const handleMouseMove = (e) => {\n    if (!selectedNode) return;\n    const svg = svgRef.current.getBoundingClientRect();\n    const x = e.clientX - svg.left;\n    const y = e.clientY - svg.top;\n    const path = findPath(findLayer(selectedLayer), selectedPath);\n    const pt = path.points[selectedNode.index];\n    moveNode(selectedNode.index, x - (pt.x + path.tx), y - (pt.y + path.ty));\n  };\n\n  const handleMouseUp = () => {\n    if (selectedNode) log(`move node ${selectedNode.index}`);\n    setSelectedNode(null);\n  };\n\n  return (\n    <div className=\"flex\" onMouseMove={handleMouseMove} onMouseUp={handleMouseUp}>\n      <div className=\"w-72 p-4 space-y-4 border-r overflow-y-auto h-screen\">\n        {!file && <FileUploader onContinue={(f) => setFile(f)} />}\n        {file && (\n          <>\n            <div className=\"space-y-2\">\n              <label className=\"block text-sm\">Threshold: {threshold}\n                <input\n                  type=\"range\"\n                  min=\"0\"\n                  max=\"255\"\n                  value={threshold}\n                  onChange={(e) => setThreshold(parseInt(e.target.value, 10))}\n                  className=\"w-full\"\n                />\n              </label>\n              <div className=\"space-x-2 text-sm\">\n                <label>\n                  <input\n                    type=\"radio\"\n                    value=\"outline\"\n                    checked={mode === 'outline'}\n                    onChange={(e) => setMode(e.target.value)}\n                  />{' '}\n                  Outline\n                </label>\n                <label>\n                  <input\n                    type=\"radio\"\n                    value=\"centerline\"\n                    checked={mode === 'centerline'}\n                    onChange={(e) => setMode(e.target.value)}\n                  />{' '}\n                  Centerline\n                </label>\n              </div>\n              <button\n                className=\"bg-blue-600 text-white px-3 py-1 rounded\"\n                onClick={vectorize}\n              >\n                Vectorize\n              </button>\n              <div className=\"space-x-1\">\n                <button\n                  className=\"bg-gray-300 px-2 py-1 rounded\"\n                  onClick={undo}\n                >\n                  Undo\n                </button>\n                <button\n                  className=\"bg-gray-300 px-2 py-1 rounded\"\n                  onClick={redo}\n                >\n                  Redo\n                </button>\n              </div>\n            </div>\n            {selectedPath && (\n              <>\n                <ToolpathTransform onChange={updateSelectedTransform} />\n                <div className=\"space-x-1\">\n                  <button\n                    className=\"bg-gray-300 px-2 py-1 rounded\"\n                    onClick={duplicatePath}\n                  >\n                    Duplicate\n                  </button>\n                  <button\n                    className=\"bg-gray-300 px-2 py-1 rounded\"\n                    onClick={mirrorPath}\n                  >\n                    Mirror H\n                  </button>\n                  <button\n                    className=\"bg-gray-300 px-2 py-1 rounded\"\n                    onClick={deletePath}\n                  >\n                    Delete Path\n                  </button>\n                  <button\n                    className=\"bg-gray-300 px-2 py-1 rounded\"\n                    onClick={deleteNode}\n                  >\n                    Delete Node\n                  </button>\n                </div>\n              </>\n            )}\n            <div className=\"pt-4\">\n              <h4 className=\"font-semibold\">Layers</h4>\n              {layers.map((l) => (\n                <div key={l.id} className=\"flex items-center space-x-1\">\n                  <input\n                    type=\"checkbox\"\n                    checked={l.visible}\n                    onChange={() =>\n                      pushHistory(\n                        layers.map((o) =>\n                          o.id === l.id ? { ...o, visible: !o.visible } : o\n                        )\n                      )\n                    }\n                  />\n                  <input\n                    type=\"checkbox\"\n                    checked={l.locked}\n                    onChange={() =>\n                      pushHistory(\n                        layers.map((o) =>\n                          o.id === l.id ? { ...o, locked: !o.locked } : o\n                        )\n                      )\n                    }\n                  />\n                  <span\n                    onClick={() => setSelectedLayer(l.id)}\n                    className={\n                      'cursor-pointer ' + (selectedLayer === l.id ? 'font-bold' : '')\n                    }\n                  >\n                    {l.name}\n                  </span>\n                </div>\n              ))}\n            </div>\n          </>\n        )}\n        <p>Paths: {visiblePaths.length}</p>\n      </div>\n      <div className=\"flex-1 relative bg-gray-100\">\n        {file && (\n          <svg\n            ref={svgRef}\n            className=\"w-full h-full\"\n            viewBox=\"0 0 500 500\"\n            onClick={(e) => {\n              if (!selectedPath) return;\n              const rect = svgRef.current.getBoundingClientRect();\n              const x = e.clientX - rect.left;\n              const y = e.clientY - rect.top;\n              addNodeAt(x, y);\n            }}\n          >\n            {visiblePaths.map((p) => (\n              <g\n                key={p.id}\n                transform={`translate(${p.tx} ${p.ty}) scale(${p.scale}) rotate(${p.rot})`}\n                onClick={(e) => {\n                  e.stopPropagation();\n                  setSelectedLayer(p.layerId);\n                  setSelectedPath(p.id);\n                  setSelectedNode(null);\n                }}\n              >\n                <path d={makeD(p.points, p.closed)} stroke=\"red\" fill=\"none\" />\n                {selectedPath === p.id &&\n                  p.points.map((pt, idx) => (\n                    <circle\n                      key={idx}\n                      cx={pt.x}\n                      cy={pt.y}\n                      r={4}\n                      fill={\n                        selectedNode &&\n                        selectedNode.pathId === p.id &&\n                        selectedNode.index === idx\n                          ? 'blue'\n                          : 'white'\n                      }\n                      stroke=\"blue\"\n                      onMouseDown={(e) => handleMouseDown(p.id, idx, e)}\n                    />\n                  ))}\n              </g>\n            ))}\n          </svg>\n        )}\n      </div>\n    </div>\n  );\n}\n"
+  },
+  {
+    "filename": "log.test.js",
+    "full_content": "const fs = require('fs');\nconst path = require('path');\nconst log = require('./log');\n\ntest('writes to log.txt asynchronously', async () => {\n  const file = path.join(__dirname, 'log.txt');\n  if (fs.existsSync(file)) fs.unlinkSync(file);\n  await log('test entry');\n  const content = fs.readFileSync(file, 'utf8');\n  expect(content).toMatch(/test entry/);\n});\n"
+  },
+  {
+    "filename": "HeightmapEditor.test.jsx",
+    "full_content": "import React from 'react';\nimport { render, screen, fireEvent } from '@testing-library/react';\nimport HeightmapEditor from './src/HeightmapEditor';\n\nglobal.prompt = jest.fn(() => '5');\n\nbeforeEach(() => {\n  global.fetch = jest.fn(() => Promise.resolve());\n});\n\ntest('updates cell value and logs change', () => {\n  render(<HeightmapEditor heightmapData={[[0,1],[2,3]]} />);\n  const cell = screen.getByTestId('cell-0-0');\n  fireEvent.click(cell);\n  expect(global.prompt).toHaveBeenCalled();\n  expect(cell.dataset.value).toBe('5');\n  expect(global.fetch).toHaveBeenCalledWith('/log', expect.any(Object));\n});\n"
+  },
+  {
+    "filename": "ZoneVisualizer.tsx",
+    "full_content": "import React, { useEffect, useState, useRef } from 'react';\nimport { Html, TransformControls } from '@react-three/drei';\nimport * as THREE from 'three';\nimport log from './logger';\n\nexport interface ZonePlan {\n  base: [number, number];\n  toolpath: [number, number, number][];\n  move_cmds: string[];\n  warnings?: string[];\n}\n\ninterface ZoneVisualizerProps {\n  zones: ZonePlan[];\n  visible?: boolean;\n  animating?: boolean;\n  onUpdate?: (zones: ZonePlan[]) => void;\n  simIndex?: number;\n}\n\n/**\n * Visualize base positions and moves for planned zones.\n */\nexport default function ZoneVisualizer({\n  zones,\n  visible = true,\n  animating = false,\n  onUpdate,\n  simIndex = -1,\n}: ZoneVisualizerProps) {\n  const [selected, setSelected] = useState<number | null>(null);\n  const headRef = useRef<THREE.Mesh>(null);\n  const pathPts = React.useMemo(() => {\n    const pts: THREE.Vector3[] = [];\n    zones.forEach(z => {\n      pts.push(new THREE.Vector3(z.base[0], 0, z.base[1]));\n    });\n    return pts;\n  }, [zones]);\n\n  // Animate base moves along the zone order\n  useEffect(() => {\n    if (!animating || !pathPts.length || !headRef.current) return;\n    let i = 0;\n    headRef.current.position.copy(pathPts[0]);\n    const timer = setInterval(() => {\n      i += 1;\n      if (i >= pathPts.length) {\n        clearInterval(timer);\n        return;\n      }\n      headRef.current!.position.copy(pathPts[i]);\n    }, 500);\n    return () => clearInterval(timer);\n  }, [animating, pathPts]);\n\n  // external simulation index for step preview\n  useEffect(() => {\n    if (simIndex < 0 || !headRef.current || !pathPts.length) return;\n    const idx = Math.min(simIndex, pathPts.length - 1);\n    headRef.current.position.copy(pathPts[idx]);\n  }, [simIndex, pathPts]);\n\n  const handleTransform = (i: number, pos: THREE.Vector3) => {\n    const next = zones.map((z, idx) =>\n      idx === i ? { ...z, base: [pos.x, pos.z] } : z\n    );\n    onUpdate && onUpdate(next);\n  };\n\n  if (!visible || !zones.length) return null;\n  return (\n    <group>\n      {zones.map((z, i) => (\n        <group key={i} position={[z.base[0], 0, z.base[1]]}>\n          <mesh\n            onClick={(e) => {\n              e.stopPropagation();\n              setSelected(i);\n              log(`zone ${i} selected`);\n            }}\n          >\n            <boxGeometry args={[5, 2, 5]} />\n            <meshStandardMaterial color={selected === i ? 'orange' : 'gray'} />\n            {z.warnings && z.warnings.length > 0 && (\n              <Html position={[0, 2, 0]}>\n                <div className=\"bg-red-600 text-white text-xs px-1 rounded\">\n                  {z.warnings.join(', ')}\n                </div>\n              </Html>\n            )}\n          </mesh>\n          {selected === i && (\n            <TransformControls\n              position={[0, 0, 0]}\n              onMouseUp={(e) => {\n                const obj = (e.target as any).object as THREE.Object3D;\n                const p = obj.getWorldPosition(new THREE.Vector3());\n                handleTransform(i, p);\n                setSelected(null);\n              }}\n            />\n          )}\n        </group>\n      ))}\n      {zones.length > 1 && (\n        <line>\n          <primitive\n            object={new THREE.BufferGeometry().setFromPoints(pathPts)}\n            attach=\"geometry\"\n          />\n          <lineBasicMaterial attach=\"material\" color=\"yellow\" />\n        </line>\n      )}\n      <mesh ref={headRef} visible={animating || simIndex >= 0}>\n        <sphereGeometry args={[2, 16, 16]} />\n        <meshStandardMaterial color=\"white\" />\n      </mesh>\n    </group>\n  );\n}\n\n"
+  },
+  {
+    "filename": "LayerPreview.jsx",
+    "full_content": "import React, { useState, useRef, useEffect } from 'react';\nimport log from './logger';\n\n/**\n * Display sliced toolpath layers with a simple preview.\n * Allows playing through layers and toggling laser/3D mode.\n */\nexport default function LayerPreview({ layers = [] }) {\n  const [layer, setLayer] = useState(0);\n  const [laserMode, setLaserMode] = useState(true);\n  const timerRef = useRef(null);\n  const max = Math.max(layers.length - 1, 0);\n\n  const play = () => {\n    if (timerRef.current || max === 0) return;\n    log('Play preview');\n    timerRef.current = setInterval(() => {\n      setLayer((prev) => (prev < max ? prev + 1 : 0));\n    }, 500);\n  };\n\n  useEffect(() => () => clearInterval(timerRef.current), []);\n\n  const current = layers[layer] || [];\n\n  // convert coordinates to viewBox 0-100 for simplicity\n  const lines = current.map(([p1, p2], i) => {\n    const color = laserMode ? 'blue' : `hsl(${(p1[2] || 0) * 30},100%,50%)`;\n    return (\n      <line\n        key={i}\n        x1={p1[0]}\n        y1={100 - p1[1]}\n        x2={p2[0]}\n        y2={100 - p2[1]}\n        stroke={color}\n        strokeWidth=\"2\"\n        data-testid=\"line\"\n      />\n    );\n  });\n\n  return (\n    <div className=\"space-y-4 p-4 max-w-sm mx-auto\">\n      <div>\n        <input\n          type=\"range\"\n          min=\"0\"\n          max={max}\n          value={layer}\n          onChange={(e) => setLayer(Number(e.target.value))}\n          className=\"w-full\"\n        />\n        <div className=\"text-sm\">Layer {layer} / {max}</div>\n      </div>\n      <svg viewBox=\"0 0 100 100\" className=\"border w-full h-48 bg-white\">\n        {lines}\n      </svg>\n      <div className=\"flex items-center space-x-2\">\n        <button\n          onClick={play}\n          className=\"bg-blue-600 text-white px-3 py-1 rounded hover:bg-blue-700\"\n        >\n          Play preview\n        </button>\n        <label className=\"flex items-center space-x-1\">\n          <input\n            type=\"checkbox\"\n            checked={!laserMode}\n            onChange={(e) => setLaserMode(!e.target.checked)}\n          />\n          <span className=\"text-sm\">Laser mode</span>\n        </label>\n      </div>\n    </div>\n  );\n}\n"
+  },
+  {
+    "filename": "PluginManager.jsx",
+    "full_content": "import React, { useState } from 'react';\nimport log from './logger';\n\n/**\n * Manage plugins and AI actions.\n * Displays plugin list with enable toggles and provides simple\n * buttons for AI analysis and optimization.\n */\nexport default function PluginManager({ plugins = [] }) {\n  const [list, setList] = useState(\n    plugins.map((p) => ({ ...p, enabled: true }))\n  );\n  const [name, setName] = useState('');\n\n  const toggle = (idx) => {\n    setList((prev) => {\n      const next = [...prev];\n      next[idx].enabled = !next[idx].enabled;\n      log(`plugin ${next[idx].name} -> ${next[idx].enabled ? 'on' : 'off'}`);\n      return next;\n    });\n  };\n\n  const analyze = () => {\n    log('AI analysis requested');\n  };\n\n  const optimize = () => {\n    log('AI auto optimize');\n  };\n\n  const install = () => {\n    if (!name) return;\n    log(`install plugin ${name}`);\n    setList((prev) => [...prev, { name, enabled: true }]);\n    setName('');\n  };\n\n  const remove = (idx) => {\n    const plug = list[idx];\n    setList((prev) => prev.filter((_, i) => i !== idx));\n    log(`remove plugin ${plug.name}`);\n  };\n\n  return (\n    <div className=\"p-4 space-y-4 max-w-md mx-auto\">\n      <h2 className=\"font-medium\">Plugins</h2>\n      <div className=\"space-y-1\">\n        {list.map((p, idx) => (\n          <label key={p.name} className=\"flex items-center space-x-2\">\n            <input\n              type=\"checkbox\"\n              checked={p.enabled}\n              onChange={() => toggle(idx)}\n              data-testid={`plug-${idx}`}\n            />\n            <span>{p.name}</span>\n            <button\n              onClick={() => remove(idx)}\n              className=\"ml-auto text-red-500\"\n              title=\"Remove\"\n            >\n              Ã\n            </button>\n          </label>\n        ))}\n      </div>\n      <div className=\"pt-2 space-x-2\">\n        <button\n          onClick={analyze}\n          className=\"bg-blue-600 text-white px-3 py-1 rounded\"\n          data-testid=\"ai-analyze\"\n        >\n          Run Analysis\n        </button>\n        <button\n          onClick={optimize}\n          className=\"bg-green-600 text-white px-3 py-1 rounded\"\n          data-testid=\"ai-opt\"\n        >\n          Auto Optimize\n        </button>\n        <input\n          type=\"text\"\n          value={name}\n          onChange={(e) => setName(e.target.value)}\n          placeholder=\"plugin name\"\n          className=\"border px-2 py-1 rounded\"\n        />\n        <button\n          onClick={install}\n          className=\"bg-gray-700 text-white px-3 py-1 rounded\"\n        >\n          Install\n        </button>\n      </div>\n    </div>\n  );\n}\n"
+  },
+  {
+    "filename": "ToolList.test.jsx",
+    "full_content": "import React from 'react';\nimport { render, screen, fireEvent } from '@testing-library/react';\nimport ToolList from './ToolList';\njest.mock('./logger', () => jest.fn());\nimport log from './logger';\n\nbeforeEach(() => {\n  localStorage.clear();\n});\n\ntest('adds and removes tools while logging', () => {\n  render(<ToolList />);\n  fireEvent.change(screen.getByTestId('name-input'), { target: { value: 'EndMill' } });\n  fireEvent.change(screen.getByTestId('diameter-input'), { target: { value: '3' } });\n  fireEvent.change(screen.getByTestId('rpm-input'), { target: { value: '20000' } });\n  fireEvent.click(screen.getByTestId('add-btn'));\n\n  const name = screen.getByTestId('name-0');\n  expect(name).toHaveTextContent('EndMill');\n  expect(log).toHaveBeenCalledWith('Tool added: EndMill');\n\n  fireEvent.click(screen.getByTestId('remove-0'));\n  expect(screen.queryByTestId('name-0')).toBeNull();\n  expect(log).toHaveBeenCalledWith('Tool removed at index 0');\n});\n"
+  },
+  {
+    "filename": "log.js",
+    "full_content": "const fs = require('fs').promises;\nconst path = require('path');\n\nconst logFile = path.join(__dirname, 'log.txt');\n\n/**\n * Append a timestamped message to web/log.txt.\n */\nasync function log(message) {\n  const line = `${new Date().toISOString()} ${message}\\n`;\n  try {\n    await fs.appendFile(logFile, line);\n  } catch (err) {\n    console.error('Failed to write log.txt', err);\n  }\n}\n\nmodule.exports = log;\n"
+  },
+  {
+    "filename": "RobotTrajectoryOptimizer.test.jsx",
+    "full_content": "import { render, screen, fireEvent } from '@testing-library/react';\nimport RobotTrajectoryOptimizer from './RobotTrajectoryOptimizer';\n\nglobal.fetch = jest.fn(() => Promise.resolve({ json: () => Promise.resolve({ points: [[0,0,0]], warnings: ['warn'] }) }));\n\ntest('run optimization shows suggestions', async () => {\n  render(<RobotTrajectoryOptimizer toolpath={[[0,0,0],[1,0,0]]} profile={{}} />);\n  fireEvent.click(screen.getByText('Optimize Trajectory'));\n  await screen.findByText('warn');\n});\n"
+  },
+  {
+    "filename": "ToolList.jsx",
+    "full_content": "import React, { useState, useEffect } from 'react';\nimport log from './logger';\n\n/**\n * List and manage available tools. Tools are persisted in localStorage\n * under the key \"tools\". Each tool entry contains name, diameter,\n * type and max RPM. Items can be added or removed.\n */\nexport default function ToolList() {\n  const [tools, setTools] = useState(() => {\n    const saved = localStorage.getItem('tools');\n    return saved ? JSON.parse(saved) : [];\n  });\n\n  const [form, setForm] = useState({ name: '', diameter: '', type: 'flat', rpm: '' });\n\n  // Save tools to localStorage whenever they change\n  useEffect(() => {\n    localStorage.setItem('tools', JSON.stringify(tools));\n  }, [tools]);\n\n  const handleAdd = () => {\n    if (!form.name || !form.diameter || !form.rpm) return;\n    const newTool = { ...form, diameter: parseFloat(form.diameter), rpm: parseInt(form.rpm, 10) };\n    setTools((t) => [...t, newTool]);\n    log(`Tool added: ${form.name}`);\n    setForm({ name: '', diameter: '', type: 'flat', rpm: '' });\n  };\n\n  const handleRemove = (index) => {\n    setTools((t) => t.filter((_, i) => i !== index));\n    log(`Tool removed at index ${index}`);\n  };\n\n  return (\n    <div className=\"p-4 space-y-4 max-w-md mx-auto\">\n      <h2 className=\"text-xl font-bold\">Tools</h2>\n      <div className=\"space-y-2\">\n        {tools.map((tool, idx) => (\n          <div key={idx} className=\"flex items-center justify-between border p-2 rounded\">\n            <div>\n              <p className=\"font-medium\" data-testid={`name-${idx}`}>{tool.name}</p>\n              <p className=\"text-sm\">{tool.diameter} mm, {tool.type}, {tool.rpm} RPM</p>\n            </div>\n            <button\n              onClick={() => handleRemove(idx)}\n              className=\"text-red-600 text-sm\"\n              data-testid={`remove-${idx}`}\n            >Remove</button>\n          </div>\n        ))}\n      </div>\n      <div className=\"space-y-2 border-t pt-4\">\n        <input\n          type=\"text\"\n          placeholder=\"Tool name\"\n          value={form.name}\n          onChange={(e) => setForm({ ...form, name: e.target.value })}\n          className=\"border rounded p-2 w-full\"\n          data-testid=\"name-input\"\n        />\n        <input\n          type=\"number\"\n          placeholder=\"Diameter (mm)\"\n          value={form.diameter}\n          onChange={(e) => setForm({ ...form, diameter: e.target.value })}\n          className=\"border rounded p-2 w-full\"\n          data-testid=\"diameter-input\"\n        />\n        <select\n          value={form.type}\n          onChange={(e) => setForm({ ...form, type: e.target.value })}\n          className=\"border rounded p-2 w-full\"\n          data-testid=\"type-select\"\n        >\n          <option value=\"flat\">Flat</option>\n          <option value=\"ball\">Ball</option>\n          <option value=\"V-bit\">V-bit</option>\n        </select>\n        <input\n          type=\"number\"\n          placeholder=\"Max RPM\"\n          value={form.rpm}\n          onChange={(e) => setForm({ ...form, rpm: e.target.value })}\n          className=\"border rounded p-2 w-full\"\n          data-testid=\"rpm-input\"\n        />\n        <button\n          onClick={handleAdd}\n          className=\"bg-blue-500 text-white px-4 py-2 rounded\"\n          data-testid=\"add-btn\"\n        >Add Tool</button>\n      </div>\n    </div>\n  );\n}\n"
+  },
+  {
+    "filename": "VRViewer.tsx",
+    "full_content": "import React, { useEffect, useRef, useState } from 'react';\nimport { Canvas, useFrame, useThree } from '@react-three/fiber';\nimport { OrbitControls } from '@react-three/drei';\nimport * as THREE from 'three';\nimport { VRButton } from 'three/examples/jsm/webxr/VRButton.js';\nimport { ARButton } from 'three/examples/jsm/webxr/ARButton.js';\nimport log from './logger';\n\ninterface Point { x: number; y: number; z: number; }\n\nfunction XRSetup({ mode }: { mode: 'vr' | 'ar' }) {\n  const { gl } = useThree();\n  useEffect(() => {\n    gl.xr.enabled = true;\n    const button = mode === 'vr' ? VRButton.createButton(gl) : ARButton.createButton(gl);\n    document.body.appendChild(button);\n    log(`XR mode enabled: ${mode}`);\n    return () => {\n      gl.xr.enabled = false;\n      button.remove();\n      log('XR mode disabled');\n    };\n  }, [gl, mode]);\n  return null;\n}\n\nfunction MovingHead({ points, running }: { points: Point[]; running: boolean }) {\n  const mesh = useRef<THREE.Mesh>(null!);\n  const index = useRef(0);\n  useFrame((_, delta) => {\n    if (!running || points.length === 0) return;\n    const cur = points[index.current];\n    mesh.current.position.set(cur.x, cur.y, cur.z);\n    index.current = Math.min(index.current + Math.ceil(delta * 10), points.length - 1);\n  });\n  return (\n    <mesh ref={mesh}>\n      <sphereGeometry args={[1, 16, 16]} />\n      <meshStandardMaterial color=\"red\" />\n    </mesh>\n  );\n}\n\nexport default function VRViewer({\n  points = [],\n  mode = 'vr',\n}: {\n  points?: Point[];\n  mode?: 'vr' | 'ar';\n}) {\n  const [running, setRunning] = useState(false);\n  const start = () => {\n    log('VR simulation start');\n    setRunning(true);\n  };\n  const stop = () => {\n    log('VR simulation stop');\n    setRunning(false);\n  };\n\n  const lineGeom = new THREE.BufferGeometry();\n  if (points.length) {\n    lineGeom.setAttribute('position', new THREE.Float32BufferAttribute(points.flatMap(p => [p.x, p.y, p.z]), 3));\n  }\n\n  return (\n    <div className=\"w-full h-96 relative\" data-testid=\"vr-viewer\">\n      <Canvas>\n        <XRSetup mode={mode} />\n        <ambientLight intensity={0.5} />\n        <directionalLight position={[5, 5, 5]} />\n        {points.length > 1 && (\n          <line>\n            <primitive object={lineGeom} attach=\"geometry\" />\n            <lineBasicMaterial color=\"orange\" />\n          </line>\n        )}\n        <MovingHead points={points} running={running} />\n        <OrbitControls />\n      </Canvas>\n      <div className=\"absolute bottom-2 left-2 space-x-2\">\n        <button onClick={start} className=\"bg-green-600 text-white px-2 py-1 rounded\">Play</button>\n        <button onClick={stop} className=\"bg-red-600 text-white px-2 py-1 rounded\">Stop</button>\n      </div>\n    </div>\n  );\n}\n"
+  },
+  {
+    "filename": "src/ToolpathPreview.jsx",
+    "full_content": "import React, { useMemo, useState, useEffect, useRef } from 'react';\nimport log from '../log';\n\n/**\n * Simple G-code previewer.\n *\n * Parses G0/G1 moves and renders them as lines in an SVG. The preview\n * can step through moves using Play/Pause buttons and logs actions to log.txt.\n */\nexport default function ToolpathPreview({ gcode = '' }) {\n  // --- Parse G-code into XY coordinate list ---------------------------------\n  const points = useMemo(() => {\n    const coords = [];\n    let x = 0, y = 0;\n    const re = /^(?:G0|G1)\\s+.*?(?:X([-+]?\\d*\\.?\\d+))?.*?(?:Y([-+]?\\d*\\.?\\d+))?/i;\n    gcode.split(/\\r?\\n/).forEach((line) => {\n      const m = line.match(re);\n      if (m) {\n        if (m[1] !== undefined) x = parseFloat(m[1]);\n        if (m[2] !== undefined) y = parseFloat(m[2]);\n        coords.push({ x, y });\n      }\n    });\n    return coords;\n  }, [gcode]);\n\n  // --- Calculate bounding box for scaling ----------------------------------\n  const bounds = useMemo(() => {\n    let minX = Infinity;\n    let minY = Infinity;\n    let maxX = -Infinity;\n    let maxY = -Infinity;\n    points.forEach(({ x, y }) => {\n      minX = Math.min(minX, x);\n      minY = Math.min(minY, y);\n      maxX = Math.max(maxX, x);\n      maxY = Math.max(maxY, y);\n    });\n    if (!isFinite(minX)) {\n      minX = minY = 0;\n      maxX = maxY = 1;\n    }\n    return { minX, minY, maxX, maxY };\n  }, [points]);\n\n  const scale = 380 / Math.max(bounds.maxX - bounds.minX || 1, bounds.maxY - bounds.minY || 1);\n  const offX = -bounds.minX;\n  const offY = -bounds.minY;\n\n  const [playing, setPlaying] = useState(false);\n  const [index, setIndex] = useState(0);\n  const timerRef = useRef(null);\n\n  // Reset animation when gcode changes\n  useEffect(() => setIndex(0), [gcode]);\n\n  // Handle play/pause state\n  useEffect(() => {\n    if (playing) {\n      log('play');\n      timerRef.current = setInterval(() => {\n        setIndex((i) => Math.min(i + 1, points.length - 1));\n      }, 300);\n    } else {\n      if (timerRef.current) clearInterval(timerRef.current);\n      log('pause');\n    }\n    return () => timerRef.current && clearInterval(timerRef.current);\n  }, [playing, points.length]);\n\n  return (\n    <div className=\"p-4\">\n      <div className=\"flex items-center gap-2 mb-2\">\n        <button\n          onClick={() => setPlaying((p) => !p)}\n          className=\"px-3 py-1 rounded bg-blue-600 text-white\"\n        >\n          {playing ? 'Pause' : 'Play'}\n        </button>\n        <span className=\"text-sm\">\n          Move {index + 1} / {points.length}\n        </span>\n      </div>\n      <div className=\"overflow-auto h-96 border bg-white rounded\">\n        <svg width=\"400\" height=\"400\">\n          {points.slice(1, index + 1).map((pt, i) => {\n            const prev = points[i];\n            const x1 = (prev.x + offX) * scale + 10;\n            const y1 = 390 - (prev.y + offY) * scale;\n            const x2 = (pt.x + offX) * scale + 10;\n            const y2 = 390 - (pt.y + offY) * scale;\n            return (\n              <line key={i} x1={x1} y1={y1} x2={x2} y2={y2} stroke=\"black\" />\n            );\n          })}\n        </svg>\n      </div>\n    </div>\n  );\n}\n"
+  },
+  {
+    "filename": "src/HeightmapEditor.jsx",
+    "full_content": "import React, { useState, useEffect } from 'react';\n\n/**\n * HeightmapEditor renders a color coded grid where each cell represents\n * a height value. Clicking a cell prompts for a new Z value and logs\n * the change via `/log`.\n */\nexport default function HeightmapEditor({ heightmapData = [[]] }) {\n  const [map, setMap] = useState(heightmapData);\n\n  // Update map if the prop changes\n  useEffect(() => setMap(heightmapData), [heightmapData]);\n\n  const rows = map.length;\n  const cols = rows ? map[0].length : 0;\n  const flat = map.flat();\n  const min = Math.min(...flat);\n  const max = Math.max(...flat);\n  const cell = 20;\n\n  // Convert height to HSL color ranging blue->red\n  const colorFor = (z) => {\n    const t = (z - min) / (max - min || 1);\n    const hue = 240 - 240 * t; // 240=blue, 0=red\n    return `hsl(${hue},100%,50%)`;\n  };\n\n  const updateCell = (r, c) => {\n    const current = map[r][c];\n    const val = prompt('Height', current);\n    const num = parseFloat(val);\n    if (isNaN(num)) return;\n    const next = map.map((row) => row.slice());\n    next[r][c] = num;\n    setMap(next);\n    fetch('/log', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ message: `height ${r} ${c} ${num}` })\n    }).catch(() => {});\n  };\n\n  return (\n    <div className=\"bg-gray-900 text-gray-100 p-4 rounded inline-block\">\n      <h2 className=\"text-lg font-semibold mb-2\">Heightmap Editor</h2>\n      <svg\n        data-testid=\"grid\"\n        width={cols * cell}\n        height={rows * cell}\n        className=\"border\"\n      >\n        {map.map((row, r) =>\n          row.map((z, c) => (\n            <g key={`${r}-${c}`}> \n              <rect\n                data-testid={`cell-${r}-${c}`}\n                data-value={z}\n                x={c * cell}\n                y={r * cell}\n                width={cell}\n                height={cell}\n                fill={colorFor(z)}\n                stroke=\"black\"\n                onClick={() => updateCell(r, c)}\n              />\n              <text\n                x={c * cell + cell / 2}\n                y={r * cell + cell / 2 + 4}\n                fontSize=\"10\"\n                textAnchor=\"middle\"\n                className=\"pointer-events-none select-none\"\n              >\n                {z}\n              </text>\n            </g>\n          ))\n        )}\n      </svg>\n    </div>\n  );\n}\n"
+  },
+  {
+    "filename": "src/AIAnalyzer.jsx",
+    "full_content": "import React, { useState } from 'react';\n\n/**\n * Simple AI optimization panel.\n * Select an analyzer and POST to /optimize when run.\n * Click events are logged via /log.\n */\n//------------------------------------------------------------------------------\n// AIAnalyzer component\n//------------------------------------------------------------------------------\nexport default function AIAnalyzer() {\n  const [analyzer, setAnalyzer] = useState('Feedrate Advisor');\n  const [result, setResult] = useState('');\n  const [loading, setLoading] = useState(false);\n\n  const runAnalysis = async () => {\n    setLoading(true);\n    try {\n      await fetch('/log', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ message: `ai run: ${analyzer}` })\n      });\n      const res = await fetch('/optimize', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ analyzer, data: {} })\n      });\n      const data = await res.json();\n      setResult(JSON.stringify(data, null, 2));\n    } catch (err) {\n      console.error('optimize failed', err);\n      setResult('Failed to run');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"bg-gray-900 text-gray-100 p-4 rounded space-y-2\">\n      <h2 className=\"text-lg font-semibold\">AI Optimization</h2>\n      <select\n        className=\"bg-gray-800 text-white p-2 rounded w-full\"\n        value={analyzer}\n        onChange={(e) => setAnalyzer(e.target.value)}\n      >\n        <option>Feedrate Advisor</option>\n        <option>Trajectory Cleaner</option>\n        <option>Surface Comparator</option>\n      </select>\n      <button\n        className=\"bg-blue-600 hover:bg-blue-700 text-white px-4 py-2 rounded w-full\"\n        onClick={runAnalysis}\n        disabled={loading}\n      >\n        {loading ? 'Running...' : 'Run Analysis'}\n      </button>\n      {result && (\n        <pre className=\"bg-gray-800 p-2 rounded text-sm whitespace-pre-wrap\">\n          {result}\n        </pre>\n      )}\n    </div>\n  );\n}\n"
+  },
+  {
+    "filename": "src/GCodeExporter.jsx",
+    "full_content": "import React, { useState, useEffect } from 'react';\n\n/**\n * GCodeExporter converts a toolpath JSON to G-code and optionally sends it\n * to the selected controller. All actions are logged via `/log`.\n */\n//------------------------------------------------------------------------------\n// GCodeExporter component\n//------------------------------------------------------------------------------\nexport default function GCodeExporter() {\n  const [toolpath, setToolpath] = useState('');\n  const [filename, setFilename] = useState('');\n  const [controller, setController] = useState('GRBL');\n  const [ports, setPorts] = useState(['/dev/ttyUSB0', '/dev/ttyACM0']);\n  const [port, setPort] = useState('/dev/ttyUSB0');\n  const [gcode, setGcode] = useState('');\n  const [output, setOutput] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [sending, setSending] = useState(false);\n\n  /**\n   * Fetch list of serial ports from the backend. When it fails we keep\n   * the current list so the user can still select a default port.\n   */\n  const fetchPorts = async () => {\n    try {\n      const res = await fetch('/ports');\n      const data = await res.json();\n      if (Array.isArray(data) && data.length) {\n        setPorts(data);\n        setPort(data[0]);\n      }\n    } catch {\n      // keep defaults on failure\n    }\n  };\n\n  // Fetch ports once on mount so the dropdown shows the latest devices.\n  useEffect(() => {\n    fetchPorts();\n  }, []);\n\n  /**\n   * Send a message to /log asynchronously.\n   */\n  const postLog = (message) =>\n    fetch('/log', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ message })\n    }).catch(() => {});\n\n  /**\n   * Convert the toolpath JSON to G-code by calling /export.\n   */\n  const generate = async () => {\n    setLoading(true);\n    postLog(`export ${controller}`);\n    try {\n      let pathData = [];\n      try {\n        pathData = JSON.parse(toolpath || '[]');\n      } catch {\n        setOutput('Invalid toolpath JSON');\n        setLoading(false);\n        return;\n      }\n      const body = {\n        toolpath: pathData,\n        filename,\n        controller\n      };\n      const res = await fetch('/export', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(body)\n      });\n      const data = await res.json();\n      setGcode(data.gcode || '');\n      setOutput(JSON.stringify(data, null, 2));\n    } catch (err) {\n      console.error('export failed', err);\n      setOutput('Failed to export');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  /**\n   * Send generated G-code to the selected serial port via /send.\n   */\n  const send = async () => {\n    if (!gcode) return;\n    setSending(true);\n    postLog(`send ${port}`);\n    try {\n      const res = await fetch('/send', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ gcode, port })\n      });\n      const data = await res.json();\n      setOutput(JSON.stringify(data, null, 2));\n    } catch (err) {\n      console.error('send failed', err);\n      setOutput('Failed to send');\n    } finally {\n      setSending(false);\n    }\n  };\n\n  return (\n    <div className=\"bg-gray-900 text-gray-100 p-4 rounded space-y-2\">\n      <h2 className=\"text-lg font-semibold\">G-code Exporter</h2>\n      <textarea\n        className=\"bg-gray-800 p-2 w-full rounded text-sm font-mono\"\n        rows=\"4\"\n        placeholder=\"Toolpath JSON\"\n        value={toolpath}\n        onChange={(e) => setToolpath(e.target.value)}\n      />\n      <input\n        type=\"text\"\n        className=\"bg-gray-800 p-2 w-full rounded\"\n        placeholder=\"File name\"\n        value={filename}\n        onChange={(e) => setFilename(e.target.value)}\n      />\n      <select\n        className=\"bg-gray-800 p-2 w-full rounded\"\n        value={controller}\n        onChange={(e) => setController(e.target.value)}\n      >\n        <option>GRBL</option>\n        <option>Smoothie</option>\n        <option>LinuxCNC</option>\n      </select>\n      <button\n        className=\"bg-blue-600 hover:bg-blue-700 text-white px-4 py-2 rounded w-full\"\n        onClick={generate}\n        disabled={loading}\n      >\n        {loading ? 'Generating...' : 'Generate G-code'}\n      </button>\n      {gcode && (\n        <>\n          <div className=\"flex space-x-2\">\n            <select\n              className=\"bg-gray-800 p-2 flex-1 rounded\"\n              value={port}\n              onChange={(e) => setPort(e.target.value)}\n            >\n              {ports.map((p) => (\n                <option key={p} value={p}>\n                  {p}\n                </option>\n              ))}\n            </select>\n            <button\n              className=\"bg-gray-700 hover:bg-gray-600 text-white px-4 rounded\"\n              onClick={() => {\n                postLog('refresh ports');\n                fetchPorts();\n              }}\n              type=\"button\"\n            >\n              Refresh\n            </button>\n          </div>\n          <button\n            className=\"bg-green-600 hover:bg-green-700 text-white px-4 py-2 rounded w-full\"\n            onClick={send}\n            disabled={sending}\n          >\n            {sending ? 'Sending...' : 'Send to Machine'}\n          </button>\n        </>\n      )}\n      {output && (\n        <pre className=\"bg-gray-800 p-2 rounded text-sm whitespace-pre-wrap\">\n          {output}\n        </pre>\n      )}\n    </div>\n  );\n}\n"
+  },
+  {
+    "filename": "src/LogViewer.jsx",
+    "full_content": "import React, { useState, useEffect } from 'react';\n\n/**\n * Live log viewer.\n * Fetches central.log every 5 seconds and highlights important lines.\n */\nexport default function LogViewer() {\n  const [text, setText] = useState('');\n\n  useEffect(() => {\n    // fetch log file from server\n    const fetchLogs = () => {\n      fetch('/logs/central.log', { cache: 'no-store' })\n        .then((res) => res.text())\n        .then(setText)\n        .catch((err) => console.error('Failed to fetch logs', err));\n    };\n    fetchLogs();\n    const timer = setInterval(fetchLogs, 5000);\n    return () => clearInterval(timer);\n  }, []);\n\n  // split log into individual lines for highlighting\n  const lines = text.split(/\\n/);\n\n  return (\n    <div className=\"p-4\">\n      <h2 className=\"text-lg font-semibold mb-2\">Live Logs</h2>\n      <div className=\"bg-gray-900 text-gray-100 rounded h-96 overflow-y-auto p-2\">\n        <pre className=\"font-mono whitespace-pre-wrap text-sm\">\n          {lines.map((line, idx) => (\n            <span\n              key={idx}\n              className={line.match(/WARNING|ERROR/) ? 'text-red-400' : ''}\n            >\n              {line}\n              {'\\n'}\n            </span>\n          ))}\n        </pre>\n      </div>\n    </div>\n  );\n}\n"
+  },
+  {
+    "filename": "src/index.jsx",
+    "full_content": "import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport App from './App';\n\nReactDOM.createRoot(document.getElementById('root')).render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n"
+  },
+  {
+    "filename": "src/Sidebar.jsx",
+    "full_content": "import React, { useState } from 'react';\nimport { LayoutDashboard, FileCode, Brain, Terminal, Upload } from 'lucide-react';\n\n/**\n * Sidebar navigation for the CAM dashboard.\n * Calls onNavigate(section) when a menu item is clicked.\n */\nexport default function Sidebar({ onNavigate = () => {} }) {\n  // currently active section for highlighting\n  const [active, setActive] = useState('dashboard');\n\n  // menu definition\n  const items = [\n    { label: 'Dashboard', section: 'dashboard', icon: LayoutDashboard },\n    { label: 'Toolpath Viewer', section: 'toolpath', icon: FileCode },\n    { label: 'AI Analyzer', section: 'ai', icon: Brain },\n    { label: 'Log Viewer', section: 'logs', icon: Terminal },\n    { label: 'G-code Export', section: 'export', icon: Upload },\n  ];\n\n  const postLog = (msg) =>\n    fetch('/log', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ message: msg })\n    }).catch(() => {});\n\n  // handle click: update active state, log, and notify parent\n  const handleClick = (section) => {\n    setActive(section);\n    postLog(`navigate ${section}`);\n    onNavigate(section);\n  };\n\n  return (\n    <aside className=\"w-56 bg-gray-900 text-gray-100 min-h-screen p-4\">\n      <nav className=\"space-y-1\">\n        {items.map(({ label, section, icon: Icon }) => (\n          <button\n            key={section}\n            onClick={() => handleClick(section)}\n            className={`flex items-center gap-3 w-full px-3 py-2 rounded text-left ${\n              active === section ? 'bg-gray-800' : 'hover:bg-gray-700'\n            }`}\n          >\n            {Icon && <Icon className=\"w-5 h-5\" />}\n            <span className=\"text-sm\">{label}</span>\n          </button>\n        ))}\n      </nav>\n    </aside>\n  );\n}\n"
+  },
+  {
+    "filename": "src/SettingsPanel.jsx",
+    "full_content": "import React, { useState, useEffect } from 'react';\n\n/**\n * SettingsPanel allows the user to configure basic dashboard settings.\n * The values are persisted to localStorage so they survive page reloads.\n */\nexport default function SettingsPanel() {\n  const [theme, setTheme] = useState('Light');\n  const [apiUrl, setApiUrl] = useState('');\n  const [saved, setSaved] = useState(false);\n\n  // Load settings from localStorage on first render\n  useEffect(() => {\n    const storedTheme = localStorage.getItem('theme');\n    const storedUrl = localStorage.getItem('apiUrl');\n    if (storedTheme) setTheme(storedTheme);\n    if (storedUrl) setApiUrl(storedUrl);\n  }, []);\n\n  /**\n   * Persist current settings and show a short confirmation message.\n   */\n  const handleSave = () => {\n    localStorage.setItem('theme', theme);\n    localStorage.setItem('apiUrl', apiUrl);\n    setSaved(true);\n    // log action but ignore network errors\n    fetch('/log', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ message: 'settings saved' })\n    }).catch(() => {});\n    setTimeout(() => setSaved(false), 2000);\n  };\n\n  return (\n    <div className=\"bg-gray-900 text-gray-100 p-4 rounded space-y-3\">\n      <h2 className=\"text-lg font-semibold\">Settings</h2>\n      <div>\n        <label className=\"block text-sm mb-1\">Theme</label>\n        <select\n          className=\"bg-gray-800 p-2 w-full rounded\"\n          value={theme}\n          onChange={(e) => setTheme(e.target.value)}\n        >\n          <option>Light</option>\n          <option>Dark</option>\n        </select>\n      </div>\n      <div>\n        <label className=\"block text-sm mb-1\" htmlFor=\"api-url\">API URL</label>\n        <input\n          id=\"api-url\"\n          type=\"text\"\n          placeholder=\"http://localhost:8000\"\n          className=\"bg-gray-800 p-2 w-full rounded\"\n          value={apiUrl}\n          onChange={(e) => setApiUrl(e.target.value)}\n        />\n      </div>\n      <button\n        className=\"bg-blue-600 hover:bg-blue-700 text-white px-4 py-2 rounded w-full\"\n        onClick={handleSave}\n      >\n        Save\n      </button>\n      {saved && <div className=\"text-green-400 text-sm\">Settings saved</div>}\n    </div>\n  );\n}\n"
+  },
+  {
+    "filename": "src/App.jsx",
+    "full_content": "import React from 'react';\nimport Dashboard from '../Dashboard';\nimport CuraStyleUI from '../CuraSlicerUI';\n\n/**\n * Main application wrapper.\n * Add or swap components here to extend the dashboard UI.\n */\nexport default function App() {\n  const sampleProjects = [\n    { name: 'Panel Cut', date: '2025-07-01', type: 'GCODE' },\n    { name: 'Logo Engrave', date: '2025-06-24', type: 'SVG' }\n  ];\n\n  return (\n    <div className=\"p-4\">\n      <Dashboard projects={sampleProjects} />\n      {/* Replace or extend with other components like CuraStyleUI */}\n      <div className=\"mt-8\">\n        <CuraStyleUI />\n      </div>\n    </div>\n  );\n}\n"
+  },
+  {
+    "filename": "src/PluginPanel.jsx",
+    "full_content": "import React, { useState, useEffect } from 'react';\n\n/**\n * PluginPanel loads available plugins from `/plugins` and allows running them.\n * Each run posts the plugin name to `/plugins/run` and logs the action.\n */\n//------------------------------------------------------------------------------\n// PluginPanel component\n//------------------------------------------------------------------------------\nexport default function PluginPanel() {\n  const [plugins, setPlugins] = useState([]);\n  const [output, setOutput] = useState('');\n  const [running, setRunning] = useState('');\n\n  // Fetch plugin list on mount\n  useEffect(() => {\n    fetch('/plugins')\n      .then((res) => res.json())\n      .then((data) => {\n        if (Array.isArray(data)) setPlugins(data);\n      })\n      .catch((err) => console.error('failed to load plugins', err));\n  }, []);\n\n  // Post a log message without awaiting the result\n  const postLog = (message) =>\n    fetch('/log', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ message })\n    }).catch(() => {});\n\n  // Run the selected plugin\n  const runPlugin = async (name) => {\n    setRunning(name);\n    postLog(`run plugin ${name}`);\n    try {\n      const res = await fetch('/plugins/run', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ name })\n      });\n      const data = await res.json();\n      setOutput(JSON.stringify(data, null, 2));\n    } catch (err) {\n      console.error('run plugin failed', err);\n      setOutput('Failed to run plugin');\n    } finally {\n      setRunning('');\n    }\n  };\n\n  return (\n    <div className=\"bg-gray-900 text-gray-100 p-4 rounded space-y-3\">\n      <h2 className=\"text-lg font-semibold\">Plugins</h2>\n      <ul className=\"space-y-2\">\n        {plugins.map((p) => (\n          <li key={p.name} className=\"flex items-start justify-between\">\n            <div className=\"flex-1 mr-2\">\n              <div className=\"font-medium\">{p.name}</div>\n              <div className=\"text-gray-400 text-sm\">{p.description}</div>\n            </div>\n            <button\n              className=\"bg-blue-600 hover:bg-blue-700 text-white px-3 py-1 rounded\"\n              onClick={() => runPlugin(p.name)}\n              disabled={running === p.name}\n            >\n              {running === p.name ? 'Running...' : 'Run'}\n            </button>\n          </li>\n        ))}\n      </ul>\n      {output && (\n        <pre className=\"bg-gray-800 p-2 rounded text-sm whitespace-pre-wrap\">\n          {output}\n        </pre>\n      )}\n    </div>\n  );\n}\n"
+  }
+]
